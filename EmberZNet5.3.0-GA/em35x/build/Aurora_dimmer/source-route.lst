###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:32
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\util\source-route.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\util\source-route.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"source-route.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\util\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\source-route.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\source-route.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\util\source-route.c
      1          // File: source-route.c
      2          //
      3          // Description: Example code for managing source routes on a node-based gateway.
      4          // For host-based gateways refer to source-route-host.c.
      5          //
      6          // New source routes are added to the table in the
      7          // emberIncomingRouteRecordHandler() callback. Adding a route results in routes
      8          // to all intermediate relays as well.
      9          //
     10          // For every outgoing packet, the stack calls emberAppendSourceRouteHandler().
     11          // If a source route to the destination is found, it is added to the packet.
     12          //
     13          // In this implementation, the maximum table size is 255 entries since a
     14          // one-byte index is used and the index 0xFF is reserved.
     15          // 
     16          // Copyright 2007 by Ember Corporation. All rights reserved.                *80*
     17          
     18          #include PLATFORM_HEADER
     19          
     20          #include "stack/include/ember.h"
     21          #include "app/util/security/security.h"
     22          #include "source-route-common.h"
     23          
     24          // ZigBee protocol limitations effectively constrain us to a 11-hop source route
     25          // in the worst case scenario (for a 12-hop delivery in total), so we enforce
     26          // a threshold value on the relayCount and ignore source route operations beyond
     27          // this threshold.  See explanatory comment in emberAppendSourceRouteHandler()
     28          // for more details about this.
     29          // This value could be reduced at the designer's discretion, but not increased
     30          // beyond 11 without causing routing problems.
     31          #define MAX_RELAY_COUNT    11
     32          
     33          #ifndef EXTERNAL_TABLE

   \                                 In section .bss, align 4
     34          static SourceRouteTableEntry table[EMBER_SOURCE_ROUTE_TABLE_SIZE];
   \                     table:
   \   00000000                      DS8 28

   \                                 In section .data, align 1
     35          int8u sourceRouteTableSize = EMBER_SOURCE_ROUTE_TABLE_SIZE;
   \                     sourceRouteTableSize:
   \   00000000   0x07               DC8 7

   \                                 In section .data, align 4
     36          SourceRouteTableEntry *sourceRouteTable = table;
   \                     sourceRouteTable:
   \   00000000   0x........         DC32 table
     37          #endif
     38          
     39          

   \                                 In section .text, align 2, keep-with-next
     40          void emberIncomingRouteRecordHandler(EmberNodeId source,
     41                                               EmberEUI64 sourceEui,
     42                                               int8u relayCount,
     43                                               EmberMessageBuffer header,
     44                                               int8u relayListIndex)
     45          {
   \                     emberIncomingRouteRecordHandler: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x4615             MOV      R5,R2
   \   00000008   0x461E             MOV      R6,R3
     46            int8u previous;
     47            int8u i;
     48          
     49            // If the following message has APS Encryption, our node will need to know
     50            // the IEEE Address of the source in order to properly decrypt.
     51            securityAddToAddressCache(source, sourceEui);
   \   0000000A   0x.... 0x....      BL       securityAddToAddressCache
     52          
     53            if (sourceRouteTableSize == 0) {
   \   0000000E   0x....             LDR.N    R0,??DataTable1
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0xB1B8             CBZ.N    R0,??emberIncomingRouteRecordHandler_0
     54              return;
     55            }
     56          
     57            // Ignore over-sized source routes, since we can't reuse them reliably anyway.
     58            if (relayCount > MAX_RELAY_COUNT) {
   \   00000014   0x2D0C             CMP      R5,#+12
   \   00000016   0xDA15             BGE.N    ??emberIncomingRouteRecordHandler_0
     59              return;
     60            }
     61          
     62            // The source of the route record is furthest from the gateway. We start there
     63            // and work closer.
     64            previous = sourceRouteAddEntry(source, NULL_INDEX);
   \   00000018   0x21FF             MOVS     R1,#+255
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0x.... 0x....      BL       sourceRouteAddEntry
     65          
     66            // Go through the relay list and add them to the source route table.
     67            for (i = 0; i < relayCount; i++) {
   \   00000020   0x9C06             LDR      R4,[SP, #+24]
   \   00000022   0x4680             MOV      R8,R0
   \   00000024   0x2700             MOVS     R7,#+0
   \   00000026   0xE00A             B.N      ??emberIncomingRouteRecordHandler_1
     68              int8u index = relayListIndex + ((int8u) (i << 1));
     69              EmberNodeId id = emberGetLinkedBuffersLowHighInt16u(header, index);
   \                     ??emberIncomingRouteRecordHandler_2: (+1)
   \   00000028   0xEB04 0x0147      ADD      R1,R4,R7, LSL #+1
   \   0000002C   0xB2C9             UXTB     R1,R1
   \   0000002E   0x4630             MOV      R0,R6
   \   00000030   0x.... 0x....      BL       emberGetLinkedBuffersLowHighInt16u
     70              // We pass the index of the previous entry to link the route together.
     71              previous = sourceRouteAddEntry(id, previous);
   \   00000034   0x4641             MOV      R1,R8
   \   00000036   0x.... 0x....      BL       sourceRouteAddEntry
   \   0000003A   0x4680             MOV      R8,R0
     72            }
   \   0000003C   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberIncomingRouteRecordHandler_1: (+1)
   \   0000003E   0xB2FF             UXTB     R7,R7
   \   00000040   0x42AF             CMP      R7,R5
   \   00000042   0xD3F1             BCC.N    ??emberIncomingRouteRecordHandler_2
     73          }
   \                     ??emberIncomingRouteRecordHandler_0: (+1)
   \   00000044   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     74          

   \                                 In section .text, align 2, keep-with-next
     75          int8u emberAppendSourceRouteHandler(EmberNodeId destination,
     76                                              EmberMessageBuffer header)
     77          {
   \                     emberAppendSourceRouteHandler: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x468A             MOV      R10,R1
     78            int8u foundIndex = sourceRouteFindIndex(destination);
   \   00000006   0x.... 0x....      BL       sourceRouteFindIndex
     79            int8u relayCount = 0;
     80            int8u addedBytes;
     81            int8u bufferLength = emberMessageBufferLength(header);
   \   0000000A   0x....             LDR.N    R2,??DataTable1_1
   \   0000000C   0x6812             LDR      R2,[R2, #+0]
   \   0000000E   0xF81A 0x7002      LDRB     R7,[R10, R2]
   \   00000012   0x2500             MOVS     R5,#+0
     82            int8u i;
     83          
     84            if (foundIndex == NULL_INDEX) {
   \   00000014   0x28FF             CMP      R0,#+255
   \   00000016   0xD01A             BEQ.N    ??emberAppendSourceRouteHandler_0
     85              return 0;
     86            }
     87          
     88            // Find out what the relay count is.
     89            i = foundIndex;
   \   00000018   0x4681             MOV      R9,R0
   \   0000001A   0x464C             MOV      R4,R9
   \   0000001C   0x.... 0x....      LDR.W    R8,??DataTable1_2
   \   00000020   0xE000             B.N      ??emberAppendSourceRouteHandler_1
     90            while (sourceRouteTable[i].closerIndex != NULL_INDEX) {
     91              i = sourceRouteTable[i].closerIndex;
     92              relayCount++;
   \                     ??emberAppendSourceRouteHandler_2: (+1)
   \   00000022   0x1C6D             ADDS     R5,R5,#+1
   \                     ??emberAppendSourceRouteHandler_1: (+1)
   \   00000024   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   00000028   0xEB00 0x0084      ADD      R0,R0,R4, LSL #+2
   \   0000002C   0x7884             LDRB     R4,[R0, #+2]
   \   0000002E   0x2CFF             CMP      R4,#+255
   \   00000030   0xD1F7             BNE.N    ??emberAppendSourceRouteHandler_2
     93            }
     94          
     95            // Per Ember Case 10096, we need to protect against oversized source
     96            // routes that will overflow the PHY packet length (127).  Since the
     97            // worst-case packet overhead is the APS-encrypted, NWK-encrypted,
     98            // tunneled key delivery sent by the Trust Center during
     99            // authentication of new devices, and this leaves enough only room
    100            // for an 11-hop source route frame, we abort our route-appending
    101            // operation if the resulting source route contains more than 11
    102            // relays.  Unless a route already exists to the destination, this
    103            // will likely result in the stack not sending the packet at all,
    104            // but this is better than forcing too much data into the packet
    105            // (which, as of this writing, will trigger an assert in mac.c and
    106            // cause a reset).
    107          
    108            if (MAX_RELAY_COUNT < relayCount) {
   \   00000032   0xB2ED             UXTB     R5,R5
   \   00000034   0x2D0C             CMP      R5,#+12
   \   00000036   0xDA0A             BGE.N    ??emberAppendSourceRouteHandler_0
    109              return 0;
    110            }
    111          
    112            addedBytes = 2 + ((int8u) (relayCount << 1));
   \   00000038   0x0068             LSLS     R0,R5,#+1
   \   0000003A   0x1C86             ADDS     R6,R0,#+2
    113          
    114            if (header != EMBER_NULL_MESSAGE_BUFFER) {
   \   0000003C   0xF1BA 0x0FFF      CMP      R10,#+255
   \   00000040   0xD027             BEQ.N    ??emberAppendSourceRouteHandler_3
    115              // Two bytes for the relay count and relay index.
    116              int8u bufferIndex = bufferLength;
    117          
    118              if (emberSetLinkedBuffersLength(header, bufferLength + addedBytes)
    119                  != EMBER_SUCCESS) {
   \   00000042   0x19F1             ADDS     R1,R6,R7
   \   00000044   0xB2C9             UXTB     R1,R1
   \   00000046   0x4650             MOV      R0,R10
   \   00000048   0x.... 0x....      BL       emberSetLinkedBuffersLength
   \   0000004C   0xB108             CBZ.N    R0,??emberAppendSourceRouteHandler_4
    120                return 0;
   \                     ??emberAppendSourceRouteHandler_0: (+1)
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xE020             B.N      ??emberAppendSourceRouteHandler_5
    121              }
    122          
    123              // Set the relay count and relay index.
    124              emberSetLinkedBuffersByte(header, bufferIndex++, relayCount);
   \                     ??emberAppendSourceRouteHandler_4: (+1)
   \   00000052   0x462A             MOV      R2,R5
   \   00000054   0x4639             MOV      R1,R7
   \   00000056   0x4650             MOV      R0,R10
   \   00000058   0x.... 0x....      BL       emberSetLinkedBuffersByte
   \   0000005C   0x1C7C             ADDS     R4,R7,#+1
    125              emberSetLinkedBuffersByte(header,
    126                                        bufferIndex++,
    127                                        (0 < relayCount
    128                                         ? relayCount - 1
    129                                         : 0));
   \   0000005E   0x2D00             CMP      R5,#+0
   \   00000060   0xBF14             ITE      NE 
   \   00000062   0x1E6A             SUBNE    R2,R5,#+1
   \   00000064   0x2200             MOVEQ    R2,#+0
   \   00000066   0xB2D2             UXTB     R2,R2
   \   00000068   0xB2E1             UXTB     R1,R4
   \   0000006A   0x4650             MOV      R0,R10
   \   0000006C   0x.... 0x....      BL       emberSetLinkedBuffersByte
   \   00000070   0x1C67             ADDS     R7,R4,#+1
    130          
    131              // Fill in the relay list. The first relay in the list is the closest to the
    132              // destination (furthest from the gateway).
    133              i = foundIndex;
   \   00000072   0x464C             MOV      R4,R9
   \   00000074   0xE006             B.N      ??emberAppendSourceRouteHandler_6
    134              while (sourceRouteTable[i].closerIndex != NULL_INDEX) {
    135                i = sourceRouteTable[i].closerIndex;
    136                emberSetLinkedBuffersLowHighInt16u(header, 
    137                                                   bufferIndex,
    138                                                   sourceRouteTable[i].destination);
   \                     ??emberAppendSourceRouteHandler_7: (+1)
   \   00000076   0xF830 0x2024      LDRH     R2,[R0, R4, LSL #+2]
   \   0000007A   0xB2F9             UXTB     R1,R7
   \   0000007C   0x4650             MOV      R0,R10
   \   0000007E   0x.... 0x....      BL       emberSetLinkedBuffersLowHighInt16u
    139                bufferIndex += 2;
   \   00000082   0x1CBF             ADDS     R7,R7,#+2
    140              }
   \                     ??emberAppendSourceRouteHandler_6: (+1)
   \   00000084   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   00000088   0xEB00 0x0184      ADD      R1,R0,R4, LSL #+2
   \   0000008C   0x788C             LDRB     R4,[R1, #+2]
   \   0000008E   0x2CFF             CMP      R4,#+255
   \   00000090   0xD1F1             BNE.N    ??emberAppendSourceRouteHandler_7
    141            }
    142          
    143            return addedBytes;
   \                     ??emberAppendSourceRouteHandler_3: (+1)
   \   00000092   0xB2F0             UXTB     R0,R6
   \                     ??emberAppendSourceRouteHandler_5: (+1)
   \   00000094   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    144          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     sourceRouteTableSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     emMessageBufferLengths

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     sourceRouteTable

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   emberAppendSourceRouteHandler
        32   -> emberSetLinkedBuffersByte
        32   -> emberSetLinkedBuffersLength
        32   -> emberSetLinkedBuffersLowHighInt16u
        32   -> sourceRouteFindIndex
      24   emberIncomingRouteRecordHandler
        24   -> emberGetLinkedBuffersLowHighInt16u
        24   -> securityAddToAddressCache
        24   -> sourceRouteAddEntry


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
     152  emberAppendSourceRouteHandler
      72  emberIncomingRouteRecordHandler
       4  sourceRouteTable
       1  sourceRouteTableSize
      28  table

 
  28 bytes in section .bss
   5 bytes in section .data
 236 bytes in section .text
 
 236 bytes of CODE memory
  33 bytes of DATA memory

Errors: none
Warnings: none
