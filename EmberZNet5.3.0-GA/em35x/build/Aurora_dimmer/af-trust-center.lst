###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:33:52
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\security\af-trust-center.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\security\af-trust-center.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"af-trust-center.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\security\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\af-trust-center.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\af-trust-center.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\security\af-trust-center.c
      1          // *****************************************************************************
      2          // * trust-center.c
      3          // *
      4          // * Security code for a Trust Center node.
      5          // *
      6          // * Copyright 2009 by Ember Corporation. All rights reserved.              *80*
      7          // *****************************************************************************
      8          
      9          #include "app/framework/include/af.h"
     10          #define USE_REAL_SECURITY_PROTOTYPES
     11          #include "app/framework/security/af-security.h"
     12          #include "app/framework/util/af-main.h"
     13          #include "app/util/source-route-common.h"
     14          
     15          //------------------------------------------------------------------------------
     16          // Globals
     17          
     18          #if defined(EMBER_AF_PRINT_SECURITY)
     19            // Corresponds to the EmberJoinDecision status codes
     20            static PGM_NO_CONST PGM_P joinDecisionText[] = {
     21              EMBER_JOIN_DECISION_STRINGS
     22            };
     23          
     24            // Corresponds to the EmberDeviceUpdate status codes
     25            static PGM_NO_CONST PGM_P deviceUpdateText[] = {
     26              EMBER_DEVICE_UPDATE_STRINGS
     27            };
     28          
     29          #endif // EMBER_AF_PRINT_APP
     30          
     31          static EmberStatus permitRequestingTrustCenterLinkKey(void);
     32          static EmberStatus permitRequestingApplicationLinkKey(void);
     33          
     34          static EmberStatus setJoinPolicy(EmberJoinDecision decision);
     35          
     36          //------------------------------------------------------------------------------
     37          

   \                                 In section .text, align 2, keep-with-next
     38          EmberStatus zaTrustCenterSetJoinPolicy(EmberJoinDecision decision)
     39          {
     40            // Call the platform specific method to do this.
     41            return setJoinPolicy(decision);
   \                     zaTrustCenterSetJoinPolicy: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable2
   \   00000002   0x7008             STRB     R0,[R1, #+0]
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x4770             BX       LR               ;; return
     42          }
     43          

   \                                 In section .text, align 2, keep-with-next
     44          EmberStatus zaTrustCenterSecurityPolicyInit(void)
     45          {
   \                     zaTrustCenterSecurityPolicyInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     46            EmberStatus status = permitRequestingTrustCenterLinkKey();
   \   00000002   0x.... 0x....      BL       emAfGetCurrentSecurityProfileData
   \   00000006   0xB908             CBNZ.N   R0,??zaTrustCenterSecurityPolicyInit_0
     47            if (status == EMBER_SUCCESS) {
     48              status = permitRequestingApplicationLinkKey();
     49            }
     50            if (status != EMBER_SUCCESS) {
     51              return status;
   \                     ??zaTrustCenterSecurityPolicyInit_1: (+1)
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xBD02             POP      {R1,PC}
     52            }
   \                     ??zaTrustCenterSecurityPolicyInit_0: (+1)
   \   0000000C   0x7A80             LDRB     R0,[R0, #+10]
   \   0000000E   0x....             LDR.N    R1,??DataTable2_1
   \   00000010   0x7008             STRB     R0,[R1, #+0]
   \   00000012   0x.... 0x....      BL       emAfGetCurrentSecurityProfileData
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD0F6             BEQ.N    ??zaTrustCenterSecurityPolicyInit_1
   \   0000001A   0x7AC0             LDRB     R0,[R0, #+11]
   \   0000001C   0x....             LDR.N    R1,??DataTable2_2
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
     53          
     54            // We always set the join policy to EMBER_USE_PRECONFIGURED_KEY
     55            // even in the case where the joining device doesn't have one.  This
     56            // is the safest thing to do.
     57            // In cases where devices don't have a preconfigured key, the TC must be
     58            // explicitly told to allow joining by calling the function below with
     59            // EMBER_SEND_KEY_IN_THE_CLEAR.  Once the device finishes joining the TC 
     60            // should set the policy back to EMBER_USE_PRECONFIGURED_KEY.
     61            return setJoinPolicy(EMBER_USE_PRECONFIGURED_KEY);
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR.N    R1,??DataTable2
   \   00000024   0x7008             STRB     R0,[R1, #+0]
   \   00000026   0xBD02             POP      {R1,PC}          ;; return
     62          }
     63          

   \                                 In section .text, align 2, keep-with-next
     64          EmberStatus zaTrustCenterSecurityInit(void)
     65          {
   \                     zaTrustCenterSecurityInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
     66            EmberInitialSecurityState state;
     67            EmberExtendedSecurityBitmask extended;
     68            EmberStatus status;
     69            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
   \   00000004   0x.... 0x....      BL       emAfGetCurrentSecurityProfileData
   \   00000008   0x0004             MOVS     R4,R0
     70          
     71            if (data == NULL) {
   \   0000000A   0xBF08             IT       EQ 
   \   0000000C   0x2001             MOVEQ    R0,#+1
     72              return EMBER_ERR_FATAL;
   \   0000000E   0xD029             BEQ.N    ??zaTrustCenterSecurityInit_0
     73            }
     74          
     75            MEMSET(&state, 0, sizeof(EmberInitialSecurityState));
   \   00000010   0x222C             MOVS     R2,#+44
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0xA801             ADD      R0,SP,#+4
   \   00000016   0x.... 0x....      BL       halCommonMemSet
     76            state.bitmask = data->tcBitmask;
   \   0000001A   0x8860             LDRH     R0,[R4, #+2]
   \   0000001C   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     77            extended = data->tcExtendedBitmask;
     78            MEMCOPY(emberKeyContents(&state.preconfiguredKey),
     79                    emberKeyContents(&data->preconfiguredKey),
     80                    EMBER_ENCRYPTION_KEY_SIZE);
   \   00000020   0x2210             MOVS     R2,#+16
   \   00000022   0x88A0             LDRH     R0,[R4, #+4]
   \   00000024   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000028   0xF104 0x010C      ADD      R1,R4,#+12
   \   0000002C   0xF10D 0x0006      ADD      R0,SP,#+6
   \   00000030   0x.... 0x....      BL       halCommonMemCopy
     81          
     82            // Random network key (highly recommended)
     83            status = emberAfGenerateRandomKey(&(state.networkKey));
   \   00000034   0xF10D 0x0016      ADD      R0,SP,#+22
   \   00000038   0x.... 0x....      BL       emberGenerateRandomKey
     84            if (status != EMBER_SUCCESS) {
   \   0000003C   0xB990             CBNZ.N   R0,??zaTrustCenterSecurityInit_0
     85              return status;
     86            }
     87          
     88          #if defined ZA_CLI_FULL
     89            // These functions will only be called if the full CLI is enabled and key 
     90            // values have been previously set on the CLI via the "changekey" command.
     91            getLinkKeyFromCli(&(state.preconfiguredKey));
     92            getNetworkKeyFromCli(&(state.networkKey));
     93          #endif
     94          
     95            emberAfSecurityInitCallback(&state, &extended, TRUE); // trust center?
   \   0000003E   0x2201             MOVS     R2,#+1
   \   00000040   0xA900             ADD      R1,SP,#+0
   \   00000042   0xA801             ADD      R0,SP,#+4
   \   00000044   0x.... 0x....      BL       emberAfSecurityInitCallback
     96          
     97            emberAfSecurityPrintln("set state to: 0x%2x", state.bitmask);
     98            status = emberSetInitialSecurityState(&state);
   \   00000048   0xA801             ADD      R0,SP,#+4
   \   0000004A   0x.... 0x....      BL       emberSetInitialSecurityState
     99            if (status != EMBER_SUCCESS) {
   \   0000004E   0xB948             CBNZ.N   R0,??zaTrustCenterSecurityInit_0
    100              emberAfSecurityPrintln("security init TC: 0x%x", status);
    101              return status;
    102            }
    103          
    104            // Don't need to check on the status here, emberSetExtendedSecurityBitmask
    105            // always returns EMBER_SUCCESS.
    106            emberAfSecurityPrintln("set extended security to: 0x%2x", extended);
    107            emberSetExtendedSecurityBitmask(extended);
   \   00000050   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000054   0x.... 0x....      BL       emberSetExtendedSecurityBitmask
    108          
    109            status = zaTrustCenterSecurityPolicyInit();
   \   00000058   0x.... 0x....      BL       zaTrustCenterSecurityPolicyInit
    110            if (status != EMBER_SUCCESS) {
   \   0000005C   0xB910             CBNZ.N   R0,??zaTrustCenterSecurityInit_0
    111              return status;
    112            }
    113          
    114            emAfClearLinkKeyTable();
   \   0000005E   0x.... 0x....      BL       emAfClearLinkKeyTable
    115          
    116            return EMBER_SUCCESS;
   \   00000062   0x2000             MOVS     R0,#+0
   \                     ??zaTrustCenterSecurityInit_0: (+1)
   \   00000064   0xB00C             ADD      SP,SP,#+48
   \   00000066   0xBD10             POP      {R4,PC}          ;; return
    117          }
    118          
    119          static void securityJoinNotify(EmberNodeId newNodeId,
    120                                         EmberEUI64 newNodeEui64,
    121                                         EmberNodeId parentOfNewNode,
    122                                         EmberDeviceUpdate status,
    123                                         EmberJoinDecision decision)
    124          {
    125          
    126            // Allow users of the framework an opportunity to see this notification.
    127            emberAfTrustCenterJoinCallback(newNodeId, 
    128                                           newNodeEui64, 
    129                                           parentOfNewNode, 
    130                                           status, 
    131                                           decision);
    132          
    133          #if defined(EMBER_AF_PLUGIN_CONCENTRATOR)
    134            if (parentOfNewNode != emberAfGetNodeId()) {
    135              sourceRouteAddEntryWithCloserNextHop(newNodeId, parentOfNewNode);
    136            }
    137          #endif
    138          
    139          #if defined(EMBER_AF_PRINT_SECURITY)
    140            emberAfSecurityPrintln("Trust Center Join Handler: status = %p, decision = %p (%x), shortid 0x%2x",
    141                           deviceUpdateText[status],
    142                           joinDecisionText[decision],
    143                           decision,
    144                           newNodeId);
    145            emberAfSecurityFlush();
    146          #endif
    147          }
    148          
    149          //==============================================================================
    150          // Platform Dependent Implementations
    151          
    152          #if defined (EZSP_HOST)
    153          
    154          static PGM_NO_CONST PGM_P ezspJoinPolicyText[] = {
    155            "Allow Joins",
    156            "Allow preconfigured key joins",
    157            "Allow rejoins only",
    158            "Disallow all joins and rejoins",
    159            "Allow Joins, rejoins have link key",
    160          };
    161          
    162          void ezspTrustCenterJoinHandler(EmberNodeId newNodeId,
    163                                          EmberEUI64 newNodeEui64,
    164                                          EmberDeviceUpdate status,
    165                                          EmberJoinDecision policyDecision,
    166                                          EmberNodeId parentOfNewNode)
    167          {
    168            securityJoinNotify(newNodeId,
    169                               newNodeEui64,
    170                               parentOfNewNode,
    171                               status,
    172                               policyDecision);
    173          }
    174          
    175          static EmberStatus setJoinPolicy(EmberJoinDecision decision)
    176          {
    177            EzspDecisionId id;
    178            if (decision == EMBER_USE_PRECONFIGURED_KEY) {
    179              id = EZSP_ALLOW_PRECONFIGURED_KEY_JOINS;
    180            } else if (decision == EMBER_SEND_KEY_IN_THE_CLEAR) {
    181              id = EZSP_ALLOW_JOINS_REJOINS_HAVE_LINK_KEY;
    182            } else {  // EMBER_DENY_JOIN or EMBER_NO_ACTION
    183              id = EZSP_DISALLOW_ALL_JOINS_AND_REJOINS;
    184            }
    185            return emberAfSetEzspPolicy(EZSP_TRUST_CENTER_POLICY,
    186                                        id,
    187                                        "Trust Center Policy",
    188                                        ezspJoinPolicyText[id]);
    189          }
    190          
    191          static EmberStatus permitRequestingTrustCenterLinkKey(void)
    192          {
    193            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    194            if (data == NULL) {
    195              return EMBER_ERR_FATAL;
    196            }
    197            return emberAfSetEzspPolicy(EZSP_TC_KEY_REQUEST_POLICY,
    198                                        data->tcLinkKeyRequestPolicy,
    199                                        "TC Key Request",
    200                                        (data->tcLinkKeyRequestPolicy
    201                                         ==  EMBER_AF_ALLOW_TC_KEY_REQUESTS
    202                                         ? "Allow"
    203                                         : "Deny"));
    204          }
    205          
    206          static EmberStatus permitRequestingApplicationLinkKey(void)
    207          {
    208            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    209            if (data == NULL) {
    210              return EMBER_ERR_FATAL;
    211            }
    212            return emberAfSetEzspPolicy(EZSP_APP_KEY_REQUEST_POLICY,
    213                                        data->appLinkKeyRequestPolicy,
    214                                        "App. Key Request",
    215                                        (data->appLinkKeyRequestPolicy
    216                                         == EMBER_AF_ALLOW_APP_KEY_REQUESTS
    217                                         ? "Allow"
    218                                         : "Deny"));
    219          }
    220          
    221          //------------------------------------------------------------------------------
    222          // System-on-a-chip
    223          
    224          #else 
    225          

   \                                 In section .bss, align 1
    226          static EmberJoinDecision defaultDecision = EMBER_USE_PRECONFIGURED_KEY;
   \                     defaultDecision:
   \   00000000                      DS8 1
    227          

   \                                 In section .text, align 2, keep-with-next
    228          EmberJoinDecision emberTrustCenterJoinHandler(EmberNodeId newNodeId,
    229                                                        EmberEUI64 newNodeEui64,
    230                                                        EmberDeviceUpdate status,
    231                                                        EmberNodeId parentOfNewNode)
    232          {
   \                     emberTrustCenterJoinHandler: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    233            EmberJoinDecision joinDecision = defaultDecision;
   \   00000004   0x....             LDR.N    R0,??DataTable2
   \   00000006   0x7806             LDRB     R6,[R0, #+0]
    234          
    235            if (status == EMBER_STANDARD_SECURITY_SECURED_REJOIN
    236                || status == EMBER_DEVICE_LEFT
    237                || status == EMBER_HIGH_SECURITY_SECURED_REJOIN) {
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xBF1C             ITT      NE 
   \   0000000C   0x2A02             CMPNE    R2,#+2
   \   0000000E   0x2A04             CMPNE    R2,#+4
   \   00000010   0xB082             SUB      SP,SP,#+8
   \   00000012   0x461D             MOV      R5,R3
   \   00000014   0xD100             BNE.N    ??emberTrustCenterJoinHandler_0
    238              joinDecision = EMBER_NO_ACTION;
   \   00000016   0x2603             MOVS     R6,#+3
    239            }
    240          
    241            securityJoinNotify(newNodeId,
    242                               newNodeEui64,
    243                               parentOfNewNode,
    244                               status,
    245                               joinDecision);
   \                     ??emberTrustCenterJoinHandler_0: (+1)
   \   00000018   0x4613             MOV      R3,R2
   \   0000001A   0x9600             STR      R6,[SP, #+0]
   \   0000001C   0x462A             MOV      R2,R5
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       emberAfTrustCenterJoinCallback
   \   00000024   0x.... 0x....      BL       emberAfGetNodeId
   \   00000028   0x4285             CMP      R5,R0
   \   0000002A   0xD003             BEQ.N    ??emberTrustCenterJoinHandler_1
   \   0000002C   0x4629             MOV      R1,R5
   \   0000002E   0x4620             MOV      R0,R4
   \   00000030   0x.... 0x....      BL       sourceRouteAddEntryWithCloserNextHop
    246            return joinDecision;
   \                     ??emberTrustCenterJoinHandler_1: (+1)
   \   00000034   0x4630             MOV      R0,R6
   \   00000036   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    247          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     defaultDecision

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     emberTrustCenterLinkKeyRequestPolicy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     emberAppLinkKeyRequestPolicy
    248          
    249          static EmberStatus setJoinPolicy(EmberJoinDecision decision)
    250          {
    251            defaultDecision = decision;
    252            return EMBER_SUCCESS;
    253          }
    254          
    255          static EmberStatus permitRequestingTrustCenterLinkKey(void)
    256          {
    257            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    258            if (data == NULL) {
    259              return EMBER_ERR_FATAL;
    260            }
    261            emberTrustCenterLinkKeyRequestPolicy = data->tcLinkKeyRequestPolicy;
    262            return EMBER_SUCCESS;
    263          }
    264          
    265          static EmberStatus permitRequestingApplicationLinkKey(void)
    266          {
    267            const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    268            if (data == NULL) {
    269              return EMBER_ERR_FATAL;
    270            }
    271            emberAppLinkKeyRequestPolicy = data->appLinkKeyRequestPolicy;
    272            return EMBER_SUCCESS;
    273          }
    274          
    275          #endif // EZSP_HOST

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   emberTrustCenterJoinHandler
        24   -> emberAfGetNodeId
        24   -> emberAfTrustCenterJoinCallback
        24   -> sourceRouteAddEntryWithCloserNextHop
      56   zaTrustCenterSecurityInit
        56   -> emAfClearLinkKeyTable
        56   -> emAfGetCurrentSecurityProfileData
        56   -> emberAfSecurityInitCallback
        56   -> emberGenerateRandomKey
        56   -> emberSetExtendedSecurityBitmask
        56   -> emberSetInitialSecurityState
        56   -> halCommonMemCopy
        56   -> halCommonMemSet
        56   -> zaTrustCenterSecurityPolicyInit
       8   zaTrustCenterSecurityPolicyInit
         8   -> emAfGetCurrentSecurityProfileData
       0   zaTrustCenterSetJoinPolicy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       1  defaultDecision
      56  emberTrustCenterJoinHandler
     104  zaTrustCenterSecurityInit
      40  zaTrustCenterSecurityPolicyInit
       8  zaTrustCenterSetJoinPolicy

 
   1 byte  in section .bss
 220 bytes in section .text
 
 220 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
