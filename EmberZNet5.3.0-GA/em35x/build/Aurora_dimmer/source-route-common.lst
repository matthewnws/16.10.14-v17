###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:32
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\util\source-route-common.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\util\source-route-common.c" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"source-route-common.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\util\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\source-route-common.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\source-route-common.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\util\source-route-common.c
      1          // File: source-route-common.c
      2          //
      3          // Description: Common code used for managing source routes on both node-based
      4          // and host-based gateways. See source-route.c for node-based gateways and
      5          // source-route-host.c for host-based gateways.
      6          // 
      7          // Copyright 2007 by Ember Corporation. All rights reserved.                *80*
      8          
      9          
     10          #include PLATFORM_HEADER
     11          #include "stack/include/ember-types.h"
     12          #include "source-route-common.h"
     13          
     14          // The number of entries in use.

   \                                 In section .data, align 1
     15          static int8u entryCount = 0;
   \                     entryCount:
   \   00000000   0x00               DC8 0
   \   00000001   0xFF               DC8 255
     16          
     17          // The index of the most recently added entry.
     18          static int8u newestIndex = NULL_INDEX;
     19          
     20          // Return the index of the entry with the specified destination.

   \                                 In section .text, align 2, keep-with-next
     21          int8u sourceRouteFindIndex(EmberNodeId id)
     22          {
     23            int8u i;
     24            for (i = 0; i < entryCount; i++) {
   \                     sourceRouteFindIndex: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xE000             B.N      ??sourceRouteFindIndex_0
   \                     ??sourceRouteFindIndex_1: (+1)
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??sourceRouteFindIndex_0: (+1)
   \   00000006   0x....             LDR.N    R2,??DataTable6
   \   00000008   0x7812             LDRB     R2,[R2, #+0]
   \   0000000A   0xB2C9             UXTB     R1,R1
   \   0000000C   0x4291             CMP      R1,R2
   \   0000000E   0xD207             BCS.N    ??sourceRouteFindIndex_2
     25              if (sourceRouteTable[i].destination == id) {
   \   00000010   0x....             LDR.N    R2,??DataTable6_1
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0xF832 0x2021      LDRH     R2,[R2, R1, LSL #+2]
   \   00000018   0x4282             CMP      R2,R0
   \   0000001A   0xD1F3             BNE.N    ??sourceRouteFindIndex_1
     26                return i;
   \   0000001C   0x4608             MOV      R0,R1
   \   0000001E   0x4770             BX       LR
     27              }
     28            }
     29            return NULL_INDEX;
   \                     ??sourceRouteFindIndex_2: (+1)
   \   00000020   0x20FF             MOVS     R0,#+255
   \   00000022   0x4770             BX       LR               ;; return
     30          }
     31          

   \                                 In section .text, align 2, keep-with-next
     32          void sourceRouteClearTable(void)
     33          {
     34            entryCount = 0;
   \                     sourceRouteClearTable: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable6
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x7008             STRB     R0,[R1, #+0]
     35            MEMSET(sourceRouteTable, 
     36                   0, 
     37                   sizeof(SourceRouteTableEntry) * sourceRouteTableSize);
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x....             LDR.N    R0,??DataTable6_2
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x0082             LSLS     R2,R0,#+2
   \   0000000E   0x....             LDR.N    R0,??DataTable6_1
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x.... 0x....      B.W      halCommonMemSet
     38          }
     39          
     40          // Create an entry with the given id or update an existing entry. furtherIndex
     41          // is the entry one hop further from the gateway.

   \                                 In section .text, align 2, keep-with-next
     42          int8u sourceRouteAddEntry(EmberNodeId id, int8u furtherIndex)
     43          {
   \                     sourceRouteAddEntry: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     44            // See if the id already exists in the table.
     45            int8u index = sourceRouteFindIndex(id);
   \   00000006   0x.... 0x....      BL       sourceRouteFindIndex
     46            int8u i;
     47          
     48            if (index == NULL_INDEX) {
   \   0000000A   0x28FF             CMP      R0,#+255
   \   0000000C   0x....             LDR.N    R1,??DataTable6_1
   \   0000000E   0x....             LDR.N    R2,??DataTable6
   \   00000010   0xD110             BNE.N    ??sourceRouteAddEntry_0
     49              if (entryCount < sourceRouteTableSize) {
   \   00000012   0x....             LDR.N    R3,??DataTable6_2
   \   00000014   0x7810             LDRB     R0,[R2, #+0]
   \   00000016   0x781B             LDRB     R3,[R3, #+0]
   \   00000018   0x4298             CMP      R0,R3
   \   0000001A   0xD202             BCS.N    ??sourceRouteAddEntry_1
     50                // No existing entry. Table is not full. Add new entry.
     51                index = entryCount;
     52                entryCount += 1;
   \   0000001C   0x1C43             ADDS     R3,R0,#+1
   \   0000001E   0x7013             STRB     R3,[R2, #+0]
   \   00000020   0xE008             B.N      ??sourceRouteAddEntry_0
     53              } else {
     54                // No existing entry. Table is full. Replace oldest entry.
     55                index = newestIndex;
   \                     ??sourceRouteAddEntry_1: (+1)
   \   00000022   0x7850             LDRB     R0,[R2, #+1]
   \   00000024   0x680E             LDR      R6,[R1, #+0]
   \   00000026   0xE000             B.N      ??sourceRouteAddEntry_2
     56                while (sourceRouteTable[index].olderIndex != NULL_INDEX) {
     57                  index = sourceRouteTable[index].olderIndex;
   \                     ??sourceRouteAddEntry_3: (+1)
   \   00000028   0x4618             MOV      R0,R3
     58                }
   \                     ??sourceRouteAddEntry_2: (+1)
   \   0000002A   0xEB06 0x0380      ADD      R3,R6,R0, LSL #+2
   \   0000002E   0x78DB             LDRB     R3,[R3, #+3]
   \   00000030   0x2BFF             CMP      R3,#+255
   \   00000032   0xD1F9             BNE.N    ??sourceRouteAddEntry_3
     59              }
     60            }
     61          
     62            // Update the pointers (only) if something has changed.
     63            if (index != newestIndex) {
   \                     ??sourceRouteAddEntry_0: (+1)
   \   00000034   0x7853             LDRB     R3,[R2, #+1]
   \   00000036   0x4298             CMP      R0,R3
   \   00000038   0xD017             BEQ.N    ??sourceRouteAddEntry_4
     64              for (i = 0; i < entryCount; i++) {
   \   0000003A   0x2700             MOVS     R7,#+0
   \   0000003C   0xE000             B.N      ??sourceRouteAddEntry_5
   \                     ??sourceRouteAddEntry_6: (+1)
   \   0000003E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??sourceRouteAddEntry_5: (+1)
   \   00000040   0x7816             LDRB     R6,[R2, #+0]
   \   00000042   0xB2FF             UXTB     R7,R7
   \   00000044   0x42B7             CMP      R7,R6
   \   00000046   0xD20B             BCS.N    ??sourceRouteAddEntry_7
   \   00000048   0x680E             LDR      R6,[R1, #+0]
   \   0000004A   0xEB06 0x0C87      ADD      R12,R6,R7, LSL #+2
   \   0000004E   0xF89C 0xE003      LDRB     LR,[R12, #+3]
   \   00000052   0x4586             CMP      LR,R0
   \   00000054   0xD1F3             BNE.N    ??sourceRouteAddEntry_6
     65                if (sourceRouteTable[i].olderIndex == index) {
     66                  sourceRouteTable[i].olderIndex = sourceRouteTable[index].olderIndex;
   \   00000056   0xEB06 0x0680      ADD      R6,R6,R0, LSL #+2
   \   0000005A   0x78F6             LDRB     R6,[R6, #+3]
   \   0000005C   0xF88C 0x6003      STRB     R6,[R12, #+3]
     67                  break;
     68                }
     69              }
     70              sourceRouteTable[index].olderIndex = newestIndex;
   \                     ??sourceRouteAddEntry_7: (+1)
   \   00000060   0x680E             LDR      R6,[R1, #+0]
   \   00000062   0xEB06 0x0680      ADD      R6,R6,R0, LSL #+2
   \   00000066   0x70F3             STRB     R3,[R6, #+3]
     71              newestIndex = index;
   \   00000068   0x7050             STRB     R0,[R2, #+1]
     72            }
     73          
     74            // Add the entry.
     75            sourceRouteTable[index].destination = id;
     76            sourceRouteTable[index].closerIndex = NULL_INDEX;
   \                     ??sourceRouteAddEntry_4: (+1)
   \   0000006A   0x23FF             MOVS     R3,#+255
   \   0000006C   0x680A             LDR      R2,[R1, #+0]
   \   0000006E   0xF822 0x4020      STRH     R4,[R2, R0, LSL #+2]
   \   00000072   0xEB02 0x0280      ADD      R2,R2,R0, LSL #+2
     77          
     78          
     79            // The current index is one hop closer to the gateway than furtherIndex.
     80            if (furtherIndex != NULL_INDEX) {
   \   00000076   0x2DFF             CMP      R5,#+255
   \   00000078   0x7093             STRB     R3,[R2, #+2]
   \   0000007A   0xD003             BEQ.N    ??sourceRouteAddEntry_8
     81              sourceRouteTable[furtherIndex].closerIndex = index;
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000082   0x7088             STRB     R0,[R1, #+2]
     82            }
     83          
     84            // Return the current index to save the caller having to look it up. 
     85            return index;
   \                     ??sourceRouteAddEntry_8: (+1)
   \   00000084   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     86          }
     87          

   \                                 In section .text, align 2, keep-with-next
     88          int8u sourceRouteAddEntryWithCloserNextHop(EmberNodeId newId,
     89                                                     EmberNodeId closerNodeId)
     90          {
   \                     sourceRouteAddEntryWithCloserNextHop: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
     91            int8u closerIndex = sourceRouteFindIndex(closerNodeId);
   \   00000004   0x4608             MOV      R0,R1
   \   00000006   0x.... 0x....      BL       sourceRouteFindIndex
   \   0000000A   0x4605             MOV      R5,R0
     92            if (closerIndex != NULL_INDEX) {
   \   0000000C   0x2DFF             CMP      R5,#+255
   \   0000000E   0xD00A             BEQ.N    ??sourceRouteAddEntryWithCloserNextHop_0
     93              int8u index = sourceRouteAddEntry(newId, NULL_INDEX);
   \   00000010   0x21FF             MOVS     R1,#+255
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       sourceRouteAddEntry
     94              if (index != NULL_INDEX) {
   \   00000018   0x28FF             CMP      R0,#+255
   \   0000001A   0xD004             BEQ.N    ??sourceRouteAddEntryWithCloserNextHop_0
     95                sourceRouteTable[index].closerIndex = closerIndex;
   \   0000001C   0x....             LDR.N    R2,??DataTable6_1
   \   0000001E   0x6812             LDR      R2,[R2, #+0]
   \   00000020   0xEB02 0x0180      ADD      R1,R2,R0, LSL #+2
   \   00000024   0x708D             STRB     R5,[R1, #+2]
     96              }
     97              return index;
     98            }
     99            return NULL_INDEX;
   \                     ??sourceRouteAddEntryWithCloserNextHop_0: (+1)
   \   00000026   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    100          }
    101          

   \                                 In section .text, align 2, keep-with-next
    102          void sourceRouteInit(void)
    103          {
    104            entryCount = 0;
   \                     sourceRouteInit: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable6
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    105          }
   \   00000006   0x4770             BX       LR               ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          int8u sourceRouteGetCount(void)
    108          {
    109            return entryCount;
   \                     sourceRouteGetCount: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable6
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    110          }
    111          

   \                                 In section .text, align 2, keep-with-next
    112          int8u emberGetSourceRouteOverhead(EmberNodeId destination)
    113          {
   \                     emberGetSourceRouteOverhead: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    114            int8u overhead = 0;
    115            int8u index = sourceRouteFindIndex(destination);
   \   00000002   0x.... 0x....      BL       sourceRouteFindIndex
   \   00000006   0x2400             MOVS     R4,#+0
    116            if (index != NULL_INDEX) {
   \   00000008   0x28FF             CMP      R0,#+255
   \   0000000A   0xD00A             BEQ.N    ??emberGetSourceRouteOverhead_0
    117              // The additional overhead required for network source routing (relay
    118              // count = 1, relay index = 1).  This does not include the size of the
    119              // relay list itself.
    120              overhead = 2;
   \   0000000C   0x2402             MOVS     R4,#+2
   \   0000000E   0xE001             B.N      ??emberGetSourceRouteOverhead_1
    121              while (sourceRouteTable[index].closerIndex != NULL_INDEX) {
    122                // The additional overhead required per relay address for network
    123                // source routing.  This is in addition to the overhead included above.
    124                overhead += 2;
   \                     ??emberGetSourceRouteOverhead_2: (+1)
   \   00000010   0x1CA4             ADDS     R4,R4,#+2
   \   00000012   0xB2E4             UXTB     R4,R4
    125                index = sourceRouteTable[index].closerIndex;
   \                     ??emberGetSourceRouteOverhead_1: (+1)
   \   00000014   0x....             LDR.N    R1,??DataTable6_1
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   0000001C   0x7880             LDRB     R0,[R0, #+2]
   \   0000001E   0x28FF             CMP      R0,#+255
   \   00000020   0xD1F6             BNE.N    ??emberGetSourceRouteOverhead_2
    126              }
    127            }
    128            return overhead;
   \                     ??emberGetSourceRouteOverhead_0: (+1)
   \   00000022   0x4620             MOV      R0,R4
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
    129          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     entryCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     sourceRouteTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     sourceRouteTableSize

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   emberGetSourceRouteOverhead
         8   -> sourceRouteFindIndex
      24   sourceRouteAddEntry
        24   -> sourceRouteFindIndex
      16   sourceRouteAddEntryWithCloserNextHop
        16   -> sourceRouteAddEntry
        16   -> sourceRouteFindIndex
       0   sourceRouteClearTable
         0   -> halCommonMemSet
       0   sourceRouteFindIndex
       0   sourceRouteGetCount
       0   sourceRouteInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
      38  emberGetSourceRouteOverhead
       2  entryCount
          newestIndex
     134  sourceRouteAddEntry
      40  sourceRouteAddEntryWithCloserNextHop
      22  sourceRouteClearTable
      36  sourceRouteFindIndex
       6  sourceRouteGetCount
       8  sourceRouteInit

 
   2 bytes in section .data
 296 bytes in section .text
 
 296 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
