###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:36
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\cli\zdo-cli.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\cli\zdo-cli.c" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"zdo-cli.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\cli\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\zdo-cli.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\zdo-cli.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\cli\zdo-cli.c
      1          // *****************************************************************************
      2          // * zdo-cli.c
      3          // *
      4          // * CLI commands for sending ZDO messages.
      5          // *
      6          // * Copyright 2010 by Ember Corporation. All rights reserved.              *80*
      7          // *****************************************************************************
      8          
      9          // common include file
     10          #include "app/framework/util/common.h"
     11          #include "app/framework/util/af-main.h"
     12          
     13          #include "app/util/serial/command-interpreter2.h"
     14          
     15          #include "app/util/zigbee-framework/zigbee-device-common.h"
     16          
     17          #if defined(EZSP_HOST)
     18            #include "app/util/zigbee-framework/zigbee-device-host.h"
     19          #else // SOC
     20            #include "app/util/zigbee-framework/zigbee-device-library.h"
     21          #endif
     22          
     23          #include "app/framework/cli/option-cli.h"
     24          
     25          //------------------------------------------------------------------------------
     26          // Forward declarations
     27          
     28          void zdoNwkAddressRequestCommand(void);
     29          void zdoIeeeAddressRequestCommand(void);
     30          void zdoSimpleCommand(void);
     31          void zdoNodeCommand(void);
     32          void zdoMatchCommand(void);
     33          void zdoBindCommand(void);
     34          void zdoAddClusterCommand(void);
     35          void zdoClearClusterCommand(void);
     36          void zdoNetworkUpdateChannelCommand(void);
     37          void zdoNetworkUpdateScanCommand(void);
     38          void zdoNetworkUpdateSetCommand(void);
     39          void zdoActiveEpCommand(void);
     40          void zdoMgmtLqiCommand(void);
     41          
     42          EmberStatus matchDescriptorsRequest(EmberNodeId target,
     43                                              int16u profile,
     44                                              int8u inCount,
     45                                              int8u outCount,
     46                                              int16u *inClusters,
     47                                              int16u *outClusters,
     48                                              EmberApsOption options);
     49          
     50          //------------------------------------------------------------------------------
     51          // Globals 
     52          
     53          #ifndef EMBER_AF_GENERATE_CLI
     54          
     55          static PGM_P addClusterArguments[] = {
     56            "ZCL Cluster to add.",
     57            NULL,
     58          };
     59          
     60          static EmberCommandEntry zdoClusterCommands[] = {
     61            emberCommandEntryActionWithDetails("add", 
     62                                               zdoAddClusterCommand, 
     63                                               "v",
     64                                               "Add a ZCL cluster to the CLI's list.",
     65                                               addClusterArguments),
     66            emberCommandEntryAction("clear", 
     67                                    zdoClearClusterCommand, 
     68                                    "",
     69                                    "Remove all ZCL clusters from the CLI's list"),
     70            emberCommandEntryTerminator(),
     71          };
     72          
     73          static PGM_P channelChangeArguments[] = {
     74            "Channel to change to.",
     75            NULL,
     76          };
     77          
     78          static PGM_P channelScanArguments[] = {
     79            "Target Node ID",
     80            "Scan Duration",  // see stack/include/zigbee-device-stack.h for enumeration
     81            "Scan count",
     82            NULL,
     83          };
     84          
     85          static PGM_P channelManagerArguments[] = {
     86            "NWK manager node ID",
     87            "Channel mask",
     88            NULL,
     89          };
     90          
     91          static EmberCommandEntry zdoNetworkUpdateCommands[] = {
     92            emberCommandEntryActionWithDetails("chan", 
     93                                               zdoNetworkUpdateChannelCommand, 
     94                                               "u",
     95                                               "Send a channel change command.",
     96                                               channelChangeArguments),
     97            emberCommandEntryActionWithDetails("scan", 
     98                                               zdoNetworkUpdateScanCommand,    
     99                                               "vuv",
    100                                               "Tell a remote node to perform a channel scan",
    101                                               channelScanArguments),
    102            emberCommandEntryActionWithDetails("set",  
    103                                               zdoNetworkUpdateSetCommand,     
    104                                               "vw",
    105                                               "Broadcast a new NWK manager Node ID and channel list.",
    106                                               channelManagerArguments),
    107            emberCommandEntryTerminator(),
    108          };
    109          
    110          
    111          static PGM_P simpleDescriptorArguments[] = {
    112            "The target node ID",
    113            "The target endpoint",
    114            NULL,
    115          };
    116          
    117          static PGM_P zdoMatchCommandArguments[] = {
    118            "Target node ID",
    119            "Profile ID",
    120            NULL,
    121          };
    122          
    123          static PGM_P zdoBindCommandArguments[] = {
    124            "Dest node ID",
    125            "local EP",
    126            "remote EP",
    127            "cluster ID",
    128            "THEIR EUI",
    129            "binding dest EUI",
    130            NULL,
    131          };
    132          
    133          static PGM_P zdoMgmtLqiCommandArguments[] = {
    134            "Dest node ID",
    135            "start index",
    136            NULL,
    137          };
    138          
    139          EmberCommandEntry zdoCommands[] = {
    140            emberCommandEntryAction("active",
    141                                    zdoActiveEpCommand,
    142                                    "v",
    143                                    "Send an Active EP request"),
    144            emberCommandEntryActionWithDetails("bind",
    145                                               zdoBindCommand,                          
    146                                               "vuuvbb",
    147                                               "Sends bind request",
    148                                               zdoBindCommandArguments),
    149            emberCommandEntryAction("ieee",
    150                                    zdoIeeeAddressRequestCommand,
    151                                    "v",
    152                                    "Unicast an IEEE address request to the specified node."),
    153            emberCommandEntrySubMenu("in-cl-list",  
    154                                     zdoClusterCommands, 
    155                                     "Modify input cluster list"),
    156            emberCommandEntryActionWithDetails("match",
    157                                               zdoMatchCommand,
    158                                               "vv",
    159                                               "Send a match descriptor request using CLI configured in/out clusters.",
    160                                               zdoMatchCommandArguments),
    161            emberCommandEntryActionWithDetails("mgmt-lqi",
    162                                               zdoMgmtLqiCommand,
    163                                               "vu",
    164                                               "Send a MGMT-LQI request to target",
    165                                               zdoMgmtLqiCommandArguments),
    166            emberCommandEntryAction("node",
    167                                    zdoNodeCommand,
    168                                    "v",
    169                                    "Send a node descriptor request to target"),
    170            emberCommandEntryAction("nwk", 
    171                                    zdoNwkAddressRequestCommand,
    172                                    "b",
    173                                    "Broadcast a NWK address request for the specified IEEE."),
    174            emberCommandEntrySubMenu("nwk-upd",     
    175                                     zdoNetworkUpdateCommands,
    176                                     "Frequency Agility Commands"),
    177            emberCommandEntrySubMenu("out-cl-list", 
    178                                     zdoClusterCommands,
    179                                     "Modify output cluster list"),
    180            emberCommandEntryActionWithDetails("simple",      
    181                                               zdoSimpleCommand,                        
    182                                               "vu",
    183                                               "Send a Simple Descriptor request to the target node and endpoint",
    184                                               simpleDescriptorArguments),
    185            emberCommandEntryTerminator(),
    186          };
    187          
    188          #endif // EMBER_AF_GENERATE_CLI
    189          
    190          #define MAX_CLUSTERS_CAN_MATCH 5

   \                                 In section .bss, align 4
    191          static int16u zdoInClusters[MAX_CLUSTERS_CAN_MATCH];
    192          static int16u zdoOutClusters[MAX_CLUSTERS_CAN_MATCH];
    193          static int8u inClCount = 0;
   \                     inClCount:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 12
   \   00000010                      DS8 12
    194          static int8u outClCount = 0;
    195          
    196          //------------------------------------------------------------------------------
    197          
    198          // *****************************************
    199          // zdoCommand
    200          //
    201          // zdo nwk <eui64:big-endian>
    202          // zdo ieee <node-id>
    203          // zdo simple <dest> <target ep>
    204          // zdo node <dest>
    205          // zdo match  <dest> <profile>
    206          // zdo bind   <dest> <local ep> <remote ep> <cluster> <THEIR eui> <dest eui>
    207          // zdo in-cl-list add <cluster IDs>
    208          // zdo in-cl-list clear
    209          // zdo out-cl-list add <clusters IDs>
    210          // zdo out-cl-list clear
    211          // zdo nwk-upd chan  <channel>
    212          // zdo nwk-upd set   <nwk mgr id>  <chan mask>
    213          // zdo nwk-upd scan  <target> <duration> <count>
    214          // zdo active <target>
    215          // *****************************************
    216          

   \                                 In section .text, align 2, keep-with-next
    217          void zdoNwkAddressRequestCommand(void)
    218          {
   \                     zdoNwkAddressRequestCommand: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    219            EmberEUI64 eui64;
    220            emberAfCopyBigEndianEui64Argument(0, eui64);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       emberAfCopyBigEndianEui64Argument
    221            emberAfFindNodeId(eui64,
    222                              emAfCliServiceDiscoveryCallback);
   \   0000000C   0x....             LDR.N    R1,??DataTable28
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x.... 0x....      BL       emberAfFindNodeId
    223          }
   \   00000014   0xBD07             POP      {R0-R2,PC}       ;; return
    224          

   \                                 In section .text, align 2, keep-with-next
    225          void zdoIeeeAddressRequestCommand(void)
    226          {
   \                     zdoIeeeAddressRequestCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    227            EmberNodeId id = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
    228            emberAfFindIeeeAddress(id,
    229                                   emAfCliServiceDiscoveryCallback);
   \                     ??CrossCallReturnLabel_15: (+1)
   \   00000006   0xE8BD 0x4004      POP      {R2,LR}
   \   0000000A   0x....             LDR.N    R1,??DataTable28
   \   0000000C   0xB280             UXTH     R0,R0
   \   0000000E   0x.... 0x....      B.W      emberAfFindIeeeAddress
    230          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      B.W      emberUnsignedCommandArgument
    231          

   \                                 In section .text, align 2, keep-with-next
    232          void zdoSimpleCommand(void)
    233          {
   \                     zdoSimpleCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    234            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_14: (+1)
   \   00000006   0x.... 0x....      BL       ?Subroutine5
    235            int8u targetEndpoint = (int8u)emberUnsignedCommandArgument(1);
    236            EmberStatus status = emberSimpleDescriptorRequest(target,
    237                                                              targetEndpoint,
    238                                                              EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??CrossCallReturnLabel_23: (+1)
   \   0000000A   0xB2C1             UXTB     R1,R0
   \   0000000C   0xF44F 0x5282      MOV      R2,#+4160
   \   00000010   0xB2A0             UXTH     R0,R4
   \   00000012   0x.... 0x....      BL       emberSimpleDescriptorRequest
    239            emberAfAppPrintln("ZDO simple desc req %x", status);
   \   00000016   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001A   0x4602             MOV      R2,R0
   \   0000001C   0x.... 0x....      ADR.W    R1,?_0
   \   00000020   0x....             B.N      ?Subroutine0
    240          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x4604             MOV      R4,R0
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberUnsignedCommandArgument
    241          

   \                                 In section .text, align 2, keep-with-next
    242          void zdoNodeCommand(void)
    243          {
   \                     zdoNodeCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    244            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
    245            EmberStatus status = emberNodeDescriptorRequest(target,
    246                                                            EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000006   0xF44F 0x5282      MOV      R2,#+4160
   \   0000000A   0x2102             MOVS     R1,#+2
   \   0000000C   0xB280             UXTH     R0,R0
   \   0000000E   0x.... 0x....      BL       emberSendZigDevRequestTarget
    247            emberAfAppPrintln("ZDO node desc req %x", status);
   \   00000012   0xE8BD 0x4008      POP      {R3,LR}
   \   00000016   0x4602             MOV      R2,R0
   \   00000018   0x.... 0x....      ADR.W    R1,?_1
   \   0000001C                      REQUIRE ?Subroutine0
   \   0000001C                      ;; // Fall through to label ?Subroutine0
    248          }
    249          

   \                                 In section .text, align 2, keep-with-next
    250          void zdoMatchCommand(void)
    251          {
   \                     zdoMatchCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    252            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_12: (+1)
   \   00000008   0x.... 0x....      BL       ?Subroutine5
    253            int16u profile = (int16u)emberUnsignedCommandArgument(1);
    254            EmberStatus status = matchDescriptorsRequest(target,
    255                                                         profile,
    256                                                         inClCount,
    257                                                         outClCount,
    258                                                         zdoInClusters, 
    259                                                         zdoOutClusters, 
    260                                                         EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??CrossCallReturnLabel_22: (+1)
   \   0000000C   0xF44F 0x5282      MOV      R2,#+4160
   \   00000010   0x9202             STR      R2,[SP, #+8]
   \   00000012   0x....             LDR.N    R1,??DataTable28_1
   \   00000014   0x784B             LDRB     R3,[R1, #+1]
   \   00000016   0xF101 0x0210      ADD      R2,R1,#+16
   \   0000001A   0x9201             STR      R2,[SP, #+4]
   \   0000001C   0x1D0A             ADDS     R2,R1,#+4
   \   0000001E   0x9200             STR      R2,[SP, #+0]
   \   00000020   0x780A             LDRB     R2,[R1, #+0]
   \   00000022   0xB281             UXTH     R1,R0
   \   00000024   0xB2A0             UXTH     R0,R4
   \   00000026   0x.... 0x....      BL       matchDescriptorsRequest
    261            emberAfAppPrintln("ZDO match desc req %x", status);
   \   0000002A   0xB004             ADD      SP,SP,#+16
   \   0000002C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000030   0x4602             MOV      R2,R0
   \   00000032   0x.... 0x....      ADR.W    R1,?_2
   \   00000036   0x....             B.N      ?Subroutine0
    262          }
    263          

   \                                 In section .text, align 2, keep-with-next
    264          static EmberStatus copyOrLookupEui64(int8u argumentNumber,
    265                                               EmberNodeId nodeId,
    266                                               EmberEUI64 returnEui64)
    267          {
   \                     copyOrLookupEui64: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x460C             MOV      R4,R1
   \   00000004   0x4615             MOV      R5,R2
    268            EmberStatus status = EMBER_SUCCESS;
    269            if (0 == emberAfCopyBigEndianEui64Argument(argumentNumber, returnEui64)) {
   \   00000006   0x4629             MOV      R1,R5
   \   00000008   0xB240             SXTB     R0,R0
   \   0000000A   0x.... 0x....      BL       emberAfCopyBigEndianEui64Argument
   \   0000000E   0x2600             MOVS     R6,#+0
   \   00000010   0xB948             CBNZ.N   R0,??CrossCallReturnLabel_31
    270              status = emberLookupEui64ByNodeId(nodeId, returnEui64);
   \   00000012   0x4629             MOV      R1,R5
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       emberLookupEui64ByNodeId
   \   0000001A   0x0006             MOVS     R6,R0
    271              if (status != EMBER_SUCCESS) {
   \   0000001C   0xD003             BEQ.N    ??CrossCallReturnLabel_31
    272                emberAfAppPrintln("Error:  EUI64 argument is empty and lookup by node ID failed.");
   \   0000001E   0x.... 0x....      ADR.W    R1,?_3
   \   00000022   0x.... 0x....      BL       ?Subroutine7
    273              }
    274            }
    275            return status;
   \                     ??CrossCallReturnLabel_31: (+1)
   \   00000026   0x4630             MOV      R0,R6
   \   00000028   0xBD70             POP      {R4-R6,PC}       ;; return
    276          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    277          
    278          // For simple bind requests, just put {} as the last argument
    279          //   zdo bind <dest> <local ep> <remote ep> <cluster> <THEIR EUI> {}
    280          //
    281          // More complex requests, you can actually specify the dest EUI64 of,
    282          // the binding, which is NOT the same as the EUI64 of the destination
    283          // of the device receiving the binding.  This allows for a user
    284          // to set multiple bindings on the destination for different devices.
    285          //   zdo bind <dest> <local ep> <remote ep> <cluster> <THEIR EUI> <dest EUI64>

   \                                 In section .text, align 2, keep-with-next
    286          void zdoBindCommand(void)
    287          {
   \                     zdoBindCommand: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    288            EmberStatus status;
    289            EmberEUI64 sourceEui, destEui;  // names relative to binding sent over-the-air
    290            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000008   0x.... 0x....      BL       ?Subroutine5
    291            int8u sourceEndpoint = (int8u)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_21: (+1)
   \   0000000C   0x.... 0x....      BL       ?Subroutine6
    292            int8u destinationEndpoint = (int8u)emberUnsignedCommandArgument(2);
   \                     ??CrossCallReturnLabel_27: (+1)
   \   00000010   0x4606             MOV      R6,R0
    293            int16u clusterId = (int16u)emberUnsignedCommandArgument(3);
   \   00000012   0x2003             MOVS     R0,#+3
   \   00000014   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000018   0x4607             MOV      R7,R0
    294          
    295            // NOTE:  The source/dest EUI is relative to the context.
    296            // In the case of the syntax of the CLI, we take "THEIR EUI64" to mean
    297            // the recipient of the binding request message.  However, when sending
    298            // the bind request that EUI64 used by the ZDO command is
    299            // actually the source for the binding because we are telling the remote
    300            // device (the destination) to create a binding with a source of itself.
    301            // And the destination for that binding will be this local device.
    302            // This is also not to be confused with the (short) destination of the ZDO
    303            // request itself.  
    304            if (EMBER_SUCCESS != copyOrLookupEui64(4, target, sourceEui)) {
   \   0000001A   0xAA08             ADD      R2,SP,#+32
   \   0000001C   0xB2A1             UXTH     R1,R4
   \   0000001E   0x2004             MOVS     R0,#+4
   \   00000020   0x.... 0x....      BL       copyOrLookupEui64
   \   00000024   0xBB20             CBNZ.N   R0,??zdoBindCommand_0
    305              return;
    306            }
    307          
    308            // If the last argument is empty, assume an EUI64 of the local device.
    309            // This allows for the simple case.  If an EUI64 is specified, it will
    310            // be used instead of the local EUI.  This is used for setting
    311            // multiple bindings on the same remote device.
    312            if (0 == emberAfCopyBigEndianEui64Argument(5, destEui)) {
   \   00000026   0xA906             ADD      R1,SP,#+24
   \   00000028   0x2005             MOVS     R0,#+5
   \   0000002A   0x.... 0x....      BL       emberAfCopyBigEndianEui64Argument
   \   0000002E   0xB930             CBNZ.N   R0,??zdoBindCommand_1
    313              emberAfAppPrintln("Using my local EUI64 for dest EUI64 in binding");
   \   00000030   0x.... 0x....      ADR.W    R1,?_4
   \   00000034   0x.... 0x....      BL       ?Subroutine7
    314              emberAfGetEui64(destEui);
   \                     ??CrossCallReturnLabel_30: (+1)
   \   00000038   0xA806             ADD      R0,SP,#+24
   \   0000003A   0x.... 0x....      BL       emberAfGetEui64
    315            }
    316          
    317            status = emberBindRequest(target,          // who gets the bind req
    318                                      sourceEui,       // source eui IN the binding
    319                                      sourceEndpoint,
    320                                      clusterId,       
    321                                      UNICAST_BINDING, // binding type
    322                                      destEui,         // destination eui IN the binding
    323                                      0,               // groupId for new binding
    324                                      destinationEndpoint,
    325                                      EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??zdoBindCommand_1: (+1)
   \   0000003E   0xF44F 0x5082      MOV      R0,#+4160
   \   00000042   0x9005             STR      R0,[SP, #+20]
   \   00000044   0xB2F6             UXTB     R6,R6
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x9003             STR      R0,[SP, #+12]
   \   0000004A   0xB2BF             UXTH     R7,R7
   \   0000004C   0xA806             ADD      R0,SP,#+24
   \   0000004E   0x9002             STR      R0,[SP, #+8]
   \   00000050   0x9604             STR      R6,[SP, #+16]
   \   00000052   0x2003             MOVS     R0,#+3
   \   00000054   0x9001             STR      R0,[SP, #+4]
   \   00000056   0x9700             STR      R7,[SP, #+0]
   \   00000058   0xB2EB             UXTB     R3,R5
   \   0000005A   0xAA08             ADD      R2,SP,#+32
   \   0000005C   0x2121             MOVS     R1,#+33
   \   0000005E   0xB2A0             UXTH     R0,R4
   \   00000060   0x.... 0x....      BL       emberSendZigDevBindRequest
    326            emberAfAppPrintln("ZDO bind req %x", status);
   \   00000064   0x4602             MOV      R2,R0
   \   00000066   0x.... 0x....      ADR.W    R1,?_5
   \   0000006A   0x2004             MOVS     R0,#+4
   \   0000006C   0x.... 0x....      BL       emberAfPrintln
    327          }
   \                     ??zdoBindCommand_0: (+1)
   \   00000070   0xB00B             ADD      SP,SP,#+44
   \   00000072   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0x4605             MOV      R5,R0
   \                     ??Subroutine6_0: (+1)
   \   00000002   0x2002             MOVS     R0,#+2
   \   00000004   0x.... 0x....      B.W      emberUnsignedCommandArgument
    328          

   \                                 In section .text, align 2, keep-with-next
    329          void zdoAddClusterCommand(void)
    330          {
   \                     zdoAddClusterCommand: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    331            int16u *clusters;
    332            int8u *clCount;
    333            if (emberStringCommandArgument(-2, NULL)[0]  == 'i') {
   \   00000002   0x.... 0x....      BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_33: (+1)
   \   00000006   0x....             LDR.N    R4,??DataTable28_1
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2869             CMP      R0,#+105
   \   0000000C   0xBF0E             ITEE     EQ 
   \   0000000E   0x1D25             ADDEQ    R5,R4,#+4
   \   00000010   0xF104 0x0510      ADDNE    R5,R4,#+16
   \   00000014   0x1C64             ADDNE    R4,R4,#+1
    334              clusters = zdoInClusters;
    335              clCount = &inClCount;
    336            } else {
    337              clusters = zdoOutClusters;
    338              clCount = &outClCount;
    339            }
    340          
    341            if (*clCount < MAX_CLUSTERS_CAN_MATCH) {
   \   00000016   0x7820             LDRB     R0,[R4, #+0]
   \   00000018   0x2805             CMP      R0,#+5
   \   0000001A   0xDA08             BGE.N    ??zdoAddClusterCommand_0
    342              clusters[*clCount] = (int16u)emberUnsignedCommandArgument(0);
   \   0000001C   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000020   0x7821             LDRB     R1,[R4, #+0]
   \   00000022   0xF825 0x0011      STRH     R0,[R5, R1, LSL #+1]
    343              (*clCount)++;
   \   00000026   0x7820             LDRB     R0,[R4, #+0]
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \   0000002A   0x7020             STRB     R0,[R4, #+0]
   \   0000002C   0xBD31             POP      {R0,R4,R5,PC}
    344            } else {
    345              emberAfAppPrintln("cluster limit reached");
   \                     ??zdoAddClusterCommand_0: (+1)
   \   0000002E   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000032   0x.... 0x....      ADR.W    R1,?_6
   \   00000036                      REQUIRE ?Subroutine1
   \   00000036                      ;; // Fall through to label ?Subroutine1
    346            }
    347          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine8: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xF06F 0x0001      MVN      R0,#+1
   \   00000006   0x.... 0x....      B.W      emberStringCommandArgument
    348          

   \                                 In section .text, align 2, keep-with-next
    349          void zdoClearClusterCommand(void)
    350          {
   \                     zdoClearClusterCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    351            if (emberStringCommandArgument(-2, NULL)[0]  == 'i') {
   \   00000002   0x.... 0x....      BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_32: (+1)
   \   00000006   0x....             LDR.N    R1,??DataTable28_1
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2869             CMP      R0,#+105
   \   0000000C   0xBF07             ITTEE    EQ 
   \   0000000E   0x2000             MOVEQ    R0,#+0
   \   00000010   0x7008             STRBEQ   R0,[R1, #+0]
   \   00000012   0x2000             MOVNE    R0,#+0
   \   00000014   0x7048             STRBNE   R0,[R1, #+1]
    352              inClCount = 0;
    353            } else {
    354              outClCount = 0;
   \   00000016   0xBD01             POP      {R0,PC}
    355            }
    356          }
    357          

   \                                 In section .text, align 2, keep-with-next
    358          void zdoNetworkUpdateChannelCommand(void)
    359          {
   \                     zdoNetworkUpdateChannelCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    360            int8u channel = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000006   0xB2C0             UXTB     R0,R0
    361            if (channel < EMBER_MIN_802_15_4_CHANNEL_NUMBER
    362                || channel > EMBER_MAX_802_15_4_CHANNEL_NUMBER) {
   \   00000008   0xF1A0 0x010B      SUB      R1,R0,#+11
   \   0000000C   0x2910             CMP      R1,#+16
   \   0000000E   0xD305             BCC.N    ??zdoNetworkUpdateChannelCommand_0
    363              emberAfAppPrintln("invalid channel: %d", channel);
   \   00000010   0xE8BD 0x4008      POP      {R3,LR}
   \   00000014   0x4602             MOV      R2,R0
   \   00000016   0x.... 0x....      ADR.W    R1,?_7
   \   0000001A   0x....             B.N      ?Subroutine0
    364            } else {
    365              EmberStatus status = emberChannelChangeRequest(channel);
   \                     ??zdoNetworkUpdateChannelCommand_0: (+1)
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x4081             LSLS     R1,R1,R0
   \   00000020   0x2300             MOVS     R3,#+0
   \   00000022   0x22FE             MOVS     R2,#+254
   \   00000024   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000028   0x.... 0x....      BL       emberEnergyScanRequest
    366              emberAfAppPrint("change channel status 0x%x", status);
   \   0000002C   0xE8BD 0x4008      POP      {R3,LR}
   \   00000030   0x4602             MOV      R2,R0
   \   00000032   0x.... 0x....      ADR.W    R1,?_8
   \   00000036   0x....             B.N      ?Subroutine2
    367            }
    368          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      B.W      emberAfPrint
    369          

   \                                 In section .text, align 4, keep-with-next
    370          void zdoNetworkUpdateScanCommand(void)
    371          {
   \                     zdoNetworkUpdateScanCommand: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    372            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000006   0x.... 0x....      BL       ?Subroutine5
    373            int8u scanDuration = (int8u)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_20: (+1)
   \   0000000A   0x.... 0x....      BL       ?Subroutine6
    374            int16u scanCount = (int16u)emberUnsignedCommandArgument(2);
    375            if (scanDuration > 5 || scanCount == 0 || scanCount > 8) {
   \                     ??CrossCallReturnLabel_26: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5
   \   00000010   0x2D06             CMP      R5,#+6
   \   00000012   0xDA03             BGE.N    ??zdoNetworkUpdateScanCommand_0
   \   00000014   0xB280             UXTH     R0,R0
   \   00000016   0xB108             CBZ.N    R0,??zdoNetworkUpdateScanCommand_0
   \   00000018   0x2809             CMP      R0,#+9
   \   0000001A   0xDB08             BLT.N    ??zdoNetworkUpdateScanCommand_1
    376              emberAfAppPrintln("duration must be in range 0 - 5");
   \                     ??zdoNetworkUpdateScanCommand_0: (+1)
   \   0000001C   0x.... 0x....      ADR.W    R1,?_9
   \   00000020   0x.... 0x....      BL       ?Subroutine7
    377              emberAfAppPrintln("count must be in range 1 - 8");
   \                     ??CrossCallReturnLabel_29: (+1)
   \   00000024   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000028   0x.... 0x....      ADR.W    R1,?_10
   \   0000002C   0x....             B.N      ?Subroutine1
    378            } else {
    379              EmberStatus status = emberEnergyScanRequest(target,
    380                                                          EMBER_ALL_802_15_4_CHANNELS_MASK,
    381                                                          scanDuration,
    382                                                          scanCount);
   \                     ??zdoNetworkUpdateScanCommand_1: (+1)
   \   0000002E   0x4603             MOV      R3,R0
   \   00000030   0x462A             MOV      R2,R5
   \   00000032   0x4901             LDR.N    R1,??zdoNetworkUpdateScanCommand_2  ;; 0x7fff800
   \   00000034   0xE002             B.N      ??zdoNetworkUpdateScanCommand_3
   \   00000036   0xBF00             Nop      
   \                     ??zdoNetworkUpdateScanCommand_2:
   \   00000038   0x07FFF800         DC32     0x7fff800
   \                     ??zdoNetworkUpdateScanCommand_3: (+1)
   \   0000003C   0xB2A0             UXTH     R0,R4
   \   0000003E   0x.... 0x....      BL       emberEnergyScanRequest
    383              emberAfAppPrint("scan status 0x%x", status);
   \   00000042   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000046   0x4602             MOV      R2,R0
   \   00000048   0x.... 0x....      ADR.W    R1,?_11
   \   0000004C                      REQUIRE ?Subroutine2
   \   0000004C                      ;; // Fall through to label ?Subroutine2
    384            }
    385          }
    386          

   \                                 In section .text, align 2, keep-with-next
    387          void zdoNetworkUpdateSetCommand(void)
    388          {
   \                     zdoNetworkUpdateSetCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    389            EmberNodeId networkManager = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000006   0x.... 0x....      BL       ?Subroutine5
    390            int32u activeChannels = emberUnsignedCommandArgument(1);
    391            EmberStatus status = emberSetNetworkManagerRequest(networkManager,
    392                                                               activeChannels);
   \                     ??CrossCallReturnLabel_19: (+1)
   \   0000000A   0x4601             MOV      R1,R0
   \   0000000C   0xB2A3             UXTH     R3,R4
   \   0000000E   0x22FF             MOVS     R2,#+255
   \   00000010   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000014   0x.... 0x....      BL       emberEnergyScanRequest
    393            emberAfAppPrint("network update set status 0x%x", status);  
   \   00000018   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001C   0x4602             MOV      R2,R0
   \   0000001E   0x.... 0x....      ADR.W    R1,?_12
   \   00000022   0x....             B.N      ?Subroutine2
    394          }
    395          

   \                                 In section .text, align 2, keep-with-next
    396          void zdoActiveEpCommand(void)
    397          {
   \                     zdoActiveEpCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    398            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
    399            EmberStatus status = emberActiveEndpointsRequest(target,
    400                                                             EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000006   0x2240             MOVS     R2,#+64
   \   00000008   0x2105             MOVS     R1,#+5
   \   0000000A   0xB280             UXTH     R0,R0
   \   0000000C   0x.... 0x....      BL       emberSendZigDevRequestTarget
    401            emberAfAppPrint("Active EP request status: 0x%X",
    402                            status);
   \   00000010   0xE8BD 0x4008      POP      {R3,LR}
   \   00000014   0x4602             MOV      R2,R0
   \   00000016   0x.... 0x....      ADR.W    R1,?_13
   \   0000001A   0x....             B.N      ?Subroutine2
    403          }
    404          

   \                                 In section .text, align 2, keep-with-next
    405          void zdoMgmtLqiCommand(void)
    406          {
   \                     zdoMgmtLqiCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    407            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000006   0x.... 0x....      BL       ?Subroutine5
    408            int8u index = emberUnsignedCommandArgument(1);
    409            EmberStatus status = emberLqiTableRequest(target,
    410                                                      index,
    411                                                      EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_18: (+1)
   \   0000000A   0xB2C2             UXTB     R2,R0
   \   0000000C   0x2340             MOVS     R3,#+64
   \   0000000E   0xB2A1             UXTH     R1,R4
   \   00000010   0x2031             MOVS     R0,#+49
   \   00000012   0x.... 0x....      BL       emberTableRequest
    412            emberAfAppPrint("LQI Table request: 0x%X", status);
   \   00000016   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001A   0x4602             MOV      R2,R0
   \   0000001C   0x.... 0x....      ADR.W    R1,?_14
   \   00000020   0x....             B.N      ?Subroutine2
    413          }
    414          

   \                                 In section .text, align 2, keep-with-next
    415          void zdoLeaveRequestCommand(void)
    416          {
   \                     zdoLeaveRequestCommand: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    417            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000008   0x.... 0x....      BL       ?Subroutine5
    418            boolean removeChildren = (boolean)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_17: (+1)
   \   0000000C   0x.... 0x....      BL       ?Subroutine6
    419            boolean rejoin = (boolean)emberUnsignedCommandArgument(2);
    420            EmberEUI64 nullEui64 = { 0, 0, 0, 0, 0, 0, 0, 0 };
   \                     ??CrossCallReturnLabel_25: (+1)
   \   00000010   0xA900             ADD      R1,SP,#+0
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2300             MOVS     R3,#+0
   \   00000016   0xC10C             STM      R1!,{R2,R3}
    421          
    422            int8u options = ((rejoin
    423                             ? 0x01
    424                             : 0x00)
    425                             || (removeChildren
    426                                 ? 0x02
    427                                 : 0x00));
   \   00000018   0xB2C0             UXTB     R0,R0
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xBF06             ITTE     EQ 
   \   0000001E   0xB2EA             UXTBEQ   R2,R5
   \   00000020   0x2A00             CMPEQ    R2,#+0
   \   00000022   0x2201             MOVNE    R2,#+1
    428          
    429            EmberStatus status = emberLeaveRequest(target,
    430                                                   nullEui64,
    431                                                   options,
    432                                                   EMBER_APS_OPTION_RETRY);
   \   00000024   0x2340             MOVS     R3,#+64
   \   00000026   0xA900             ADD      R1,SP,#+0
   \   00000028   0xB2A0             UXTH     R0,R4
   \   0000002A   0x.... 0x....      BL       emberLeaveRequest
   \   0000002E   0x4603             MOV      R3,R0
    433          
    434            emberAfAppPrintln("Leave %p0x%X", "Request: ", status);
   \   00000030   0x.... 0x....      ADR.W    R2,?_17
   \   00000034   0x.... 0x....      ADR.W    R1,?_16
   \   00000038   0x2004             MOVS     R0,#+4
   \   0000003A   0x.... 0x....      BL       emberAfPrintln
    435          }
   \   0000003E   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    436          

   \                                 In section .text, align 2, keep-with-next
    437          void zdoPowerDescriptorRequestCommand(void)
    438          {
   \                     zdoPowerDescriptorRequestCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    439            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
    440            EmberStatus status = emberPowerDescriptorRequest(target, 
    441                                                             EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000006   0x2240             MOVS     R2,#+64
   \   00000008   0x2103             MOVS     R1,#+3
   \   0000000A   0xB280             UXTH     R0,R0
   \   0000000C   0x.... 0x....      BL       emberSendZigDevRequestTarget
    442            emberAfAppPrintln("Power Descriptor %p0x%X", "Request: ", status);
   \   00000010   0xE8BD 0x5000      POP      {R12,LR}
   \   00000014   0x4603             MOV      R3,R0
   \   00000016   0x.... 0x....      ADR.W    R2,?_17
   \   0000001A   0x.... 0x....      ADR.W    R1,?_18
   \   0000001E   0x....             B.N      ?Subroutine3
    443          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    444          

   \                                 In section .text, align 2, keep-with-next
    445          void zdoEndDeviceBindRequestCommand(void)
    446          {
   \                     zdoEndDeviceBindRequestCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    447            int8u endpoint = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
    448            EmberStatus status = emberAfSendEndDeviceBind(endpoint);
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000006   0xB2C0             UXTB     R0,R0
   \   00000008   0x.... 0x....      BL       emberAfSendEndDeviceBind
    449            emberAfAppPrintln("End Device Bind %p0x%X", "Request: ", status);
   \   0000000C   0xE8BD 0x5000      POP      {R12,LR}
   \   00000010   0x4603             MOV      R3,R0
   \   00000012   0x.... 0x....      ADR.W    R2,?_17
   \   00000016   0x.... 0x....      ADR.W    R1,?_19
   \   0000001A                      REQUIRE ?Subroutine3
   \   0000001A                      ;; // Fall through to label ?Subroutine3
    450          }
    451          

   \                                 In section .text, align 2, keep-with-next
    452          static void unbindRequest(boolean isGroupAddress,
    453                                    void* destination,
    454                                    int8u destinationEndpoint)
    455          {
   \                     unbindRequest: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0xB08A             SUB      SP,SP,#+40
   \   00000008   0x468A             MOV      R10,R1
   \   0000000A   0x4690             MOV      R8,R2
    456            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   0000000C   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000010   0x4606             MOV      R6,R0
    457            int8u sourceEndpoint = (int8u)emberUnsignedCommandArgument(2);
   \   00000012   0x.... 0x....      BL       ??Subroutine6_0
   \                     ??CrossCallReturnLabel_24: (+1)
   \   00000016   0x4681             MOV      R9,R0
    458            EmberAfClusterId clusterId = (EmberAfClusterId)emberUnsignedCommandArgument(3);
   \   00000018   0x2003             MOVS     R0,#+3
   \   0000001A   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000001E   0x4605             MOV      R5,R0
    459            EmberEUI64 sourceEui64;
    460            EmberEUI64 destinationEui64;
    461            EmberStatus status;
    462            EmberNodeId groupAddress;
    463          
    464            if (EMBER_SUCCESS != copyOrLookupEui64(1, target, sourceEui64)) {
   \   00000020   0xAA08             ADD      R2,SP,#+32
   \   00000022   0xB2B1             UXTH     R1,R6
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       copyOrLookupEui64
   \   0000002A   0xBB50             CBNZ.N   R0,??unbindRequest_0
    465              return;
    466            }
    467          
    468            if (isGroupAddress) {
   \   0000002C   0xB11C             CBZ.N    R4,??unbindRequest_1
    469               groupAddress = *((EmberNodeId*)destination);
   \   0000002E   0xF8BA 0x7000      LDRH     R7,[R10, #+0]
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0xE005             B.N      ??unbindRequest_2
    470            } else {
    471              MEMCOPY(destinationEui64, destination, EUI64_SIZE);
   \                     ??unbindRequest_1: (+1)
   \   00000036   0x2208             MOVS     R2,#+8
   \   00000038   0x4651             MOV      R1,R10
   \   0000003A   0xA806             ADD      R0,SP,#+24
   \   0000003C   0x.... 0x....      BL       halCommonMemCopy
   \   00000040   0x2003             MOVS     R0,#+3
   \                     ??unbindRequest_2: (+1)
   \   00000042   0x2140             MOVS     R1,#+64
   \   00000044   0x9105             STR      R1,[SP, #+20]
   \   00000046   0xF8CD 0x8010      STR      R8,[SP, #+16]
   \   0000004A   0xB2BF             UXTH     R7,R7
   \   0000004C   0x9703             STR      R7,[SP, #+12]
   \   0000004E   0xA906             ADD      R1,SP,#+24
   \   00000050   0x9102             STR      R1,[SP, #+8]
   \   00000052   0x9001             STR      R0,[SP, #+4]
   \   00000054   0xB2AD             UXTH     R5,R5
   \   00000056   0x9500             STR      R5,[SP, #+0]
   \   00000058   0xFA5F 0xF389      UXTB     R3,R9
   \   0000005C   0xAA08             ADD      R2,SP,#+32
   \   0000005E   0x2122             MOVS     R1,#+34
   \   00000060   0xB2B0             UXTH     R0,R6
   \   00000062   0x.... 0x....      BL       emberSendZigDevBindRequest
    472            }
    473          
    474            status = emberUnbindRequest(target,
    475                                        sourceEui64,
    476                                        sourceEndpoint,
    477                                        clusterId,
    478                                        (isGroupAddress
    479                                         ? MULTICAST_BINDING
    480                                         : UNICAST_BINDING),
    481                                        destinationEui64,
    482                                        groupAddress,
    483                                        destinationEndpoint,
    484                                        EMBER_APS_OPTION_RETRY);
    485            emberAfAppPrintln("Unbind %p %p0x%X", 
    486                              (isGroupAddress
    487                               ? "Group"
    488                               : "Unicast"),
    489                              "Request: ", 
    490                              status);
   \   00000066   0x2C00             CMP      R4,#+0
   \   00000068   0x9000             STR      R0,[SP, #+0]
   \   0000006A   0xBF14             ITE      NE 
   \   0000006C   0x.... 0x....      ADRNE.W  R2,?_21
   \   00000070   0x.... 0x....      ADREQ.W  R2,?_22
   \   00000074   0x.... 0x....      ADR.W    R3,?_17
   \   00000078   0x.... 0x....      ADR.W    R1,?_20
   \   0000007C   0x2004             MOVS     R0,#+4
   \   0000007E   0x.... 0x....      BL       emberAfPrintln
    491          }
   \                     ??unbindRequest_0: (+1)
   \   00000082   0xB00A             ADD      SP,SP,#+40
   \   00000084   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    492          

   \                                 In section .text, align 2, keep-with-next
    493          void zdoUnbindGroupCommand(void)
    494          {
   \                     zdoUnbindGroupCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    495            EmberNodeId groupAddress = (EmberNodeId)emberUnsignedCommandArgument(4);
   \   00000002   0x2004             MOVS     R0,#+4
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000008   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    496            unbindRequest(TRUE,  // group addressed binding?
    497                          &groupAddress,
    498                          0);   // destination endpoint (unused)
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0xA900             ADD      R1,SP,#+0
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       unbindRequest
    499          }
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    500          

   \                                 In section .text, align 2, keep-with-next
    501          void zdoUnbindUnicastCommand(void)
    502          {
   \                     zdoUnbindUnicastCommand: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    503            EmberEUI64 destinationEui64;
    504            int8u destinationEndpoint = (int8u)emberUnsignedCommandArgument(5);
   \   00000002   0x2005             MOVS     R0,#+5
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000008   0x4604             MOV      R4,R0
    505          
    506            // If the destination EUI64 of the binding (not the destination of the 
    507            // actual message) is empty, use our local EUI64.
    508            if (0 == emberAfCopyBigEndianEui64Argument(4, destinationEui64)) {
   \   0000000A   0xA900             ADD      R1,SP,#+0
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       emberAfCopyBigEndianEui64Argument
   \   00000012   0xB930             CBNZ.N   R0,??zdoUnbindUnicastCommand_0
    509              emberAfAppPrintln("Using my local EUI64 for dest EUI64 in unbinding");
   \   00000014   0x.... 0x....      ADR.W    R1,?_23
   \   00000018   0x.... 0x....      BL       ?Subroutine7
    510              emberAfGetEui64(destinationEui64);
   \                     ??CrossCallReturnLabel_28: (+1)
   \   0000001C   0xA800             ADD      R0,SP,#+0
   \   0000001E   0x.... 0x....      BL       emberAfGetEui64
    511            }
    512          
    513            unbindRequest(FALSE,   // group addressed binding?
    514                          destinationEui64,
    515                          destinationEndpoint);
   \                     ??zdoUnbindUnicastCommand_0: (+1)
   \   00000022   0xB2E2             UXTB     R2,R4
   \   00000024   0xA900             ADD      R1,SP,#+0
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       unbindRequest
    516          }
   \   0000002C   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    517          

   \                                 In section .text, align 2, keep-with-next
    518          void zdoRouteRequestCommand(void)
    519          {
   \                     zdoRouteRequestCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    520            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000006   0x.... 0x....      BL       ?Subroutine5
    521            int8u index = (int8u)emberUnsignedCommandArgument(1);
    522            EmberStatus status = emberRoutingTableRequest(target,
    523                                                          index,
    524                                                          EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_16: (+1)
   \   0000000A   0xB2C2             UXTB     R2,R0
   \   0000000C   0x2340             MOVS     R3,#+64
   \   0000000E   0xB2A1             UXTH     R1,R4
   \   00000010   0x2032             MOVS     R0,#+50
   \   00000012   0x.... 0x....      BL       emberTableRequest
    525            emberAfAppPrintln("Route Table %p0x%X", "Request: ", status);
   \   00000016   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001A   0x4603             MOV      R3,R0
   \   0000001C   0x.... 0x....      ADR.W    R2,?_17
   \   00000020   0x.... 0x....      ADR.W    R1,?_24
   \   00000024   0x....             B.N      ?Subroutine3
    526          }
    527          
    528          
    529          //------------------------------------------------------------------------------
    530          // Platform specific code
    531          
    532          #if defined(EZSP_HOST)
    533          EmberStatus matchDescriptorsRequest(EmberNodeId target,
    534                                              int16u profile,
    535                                              int8u inCount,
    536                                              int8u outCount,
    537                                              int16u *inClusters,
    538                                              int16u *outClusters,
    539                                              EmberApsOption options)
    540          {
    541            return ezspMatchDescriptorsRequest(target, 
    542                                               profile,
    543                                               inCount,
    544                                               outCount,
    545                                               inClusters,
    546                                               outClusters,
    547                                               options);
    548          }
    549          
    550          #else
    551          
    552          // Copy the list of int16u input and output cluster lists into
    553          // message buffers.

   \                                 In section .text, align 2, keep-with-next
    554          EmberStatus matchDescriptorsRequest(EmberNodeId target,
    555                                              int16u profile,
    556                                              int8u inCount,
    557                                              int8u outCount,
    558                                              int16u *inClusters,
    559                                              int16u *outClusters,
    560                                              EmberApsOption options)
    561          {
   \                     matchDescriptorsRequest: (+1)
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
    562            int8u i;
    563            int8u output;
    564            EmberMessageBuffer inClusterBuffer = EMBER_NULL_MESSAGE_BUFFER;
   \   00000006   0x20FF             MOVS     R0,#+255
    565            EmberMessageBuffer outClusterBuffer = EMBER_NULL_MESSAGE_BUFFER;
    566            EmberStatus status = EMBER_NO_BUFFERS;
    567            for (output = 0; output < 2; output++) {
   \   00000008   0x9E0F             LDR      R6,[SP, #+60]
   \   0000000A   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \   0000000E   0x4699             MOV      R9,R3
   \   00000010   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000014   0xF04F 0x0B18      MOV      R11,#+24
   \   00000018   0x2500             MOVS     R5,#+0
   \   0000001A   0xE000             B.N      ??matchDescriptorsRequest_0
    568              EmberMessageBuffer* bufferPtr;
    569              int8u count;
    570              int16u* list;
    571              if (output) {
   \                     ??matchDescriptorsRequest_1: (+1)
   \   0000001C   0xB935             CBNZ.N   R5,??matchDescriptorsRequest_2
    572                count = outCount;
    573                list = outClusters;
    574                bufferPtr = &outClusterBuffer;
    575              } else {  // input
    576                count = inCount;
   \                     ??matchDescriptorsRequest_0: (+1)
   \   0000001E   0xF89D 0xA010      LDRB     R10,[SP, #+16]
    577                list = inClusters;
   \   00000022   0xF8DD 0x8038      LDR      R8,[SP, #+56]
    578                bufferPtr = &inClusterBuffer;
   \   00000026   0xF10D 0x0405      ADD      R4,SP,#+5
   \   0000002A   0xE002             B.N      ??matchDescriptorsRequest_3
    579              }
   \                     ??matchDescriptorsRequest_2: (+1)
   \   0000002C   0x46CA             MOV      R10,R9
   \   0000002E   0x46B0             MOV      R8,R6
   \   00000030   0xAC01             ADD      R4,SP,#+4
    580              if (count == 0) {
   \                     ??matchDescriptorsRequest_3: (+1)
   \   00000032   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000036   0xD01C             BEQ.N    ??matchDescriptorsRequest_4
    581                continue;
    582              }
    583          
    584              *bufferPtr = emberAllocateStackBuffer();
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       emberAllocateLinkedBuffers
    585              if (*bufferPtr == EMBER_NULL_MESSAGE_BUFFER) {
   \   0000003E   0x28FF             CMP      R0,#+255
   \   00000040   0x7020             STRB     R0,[R4, #+0]
   \   00000042   0xD027             BEQ.N    ??matchDescriptorsRequest_5
    586                goto cleanup;
    587              }
    588          
    589              for (i = 0; i < count; i++) {
   \   00000044   0x2700             MOVS     R7,#+0
   \   00000046   0xE012             B.N      ??matchDescriptorsRequest_6
    590                int8u cluster[2];
    591                cluster[0] = LOW_BYTE(list[i]);
   \                     ??matchDescriptorsRequest_7: (+1)
   \   00000048   0xF838 0x0017      LDRH     R0,[R8, R7, LSL #+1]
   \   0000004C   0xF88D 0x0000      STRB     R0,[SP, #+0]
    592                cluster[1] = HIGH_BYTE(list[i]);
    593                status = emberAppendToLinkedBuffers(*bufferPtr,
    594                                                    cluster,
    595                                                    2);
   \   00000050   0x2202             MOVS     R2,#+2
   \   00000052   0xF838 0x0017      LDRH     R0,[R8, R7, LSL #+1]
   \   00000056   0x0A00             LSRS     R0,R0,#+8
   \   00000058   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   0000005C   0xA900             ADD      R1,SP,#+0
   \   0000005E   0x7820             LDRB     R0,[R4, #+0]
   \   00000060   0x.... 0x....      BL       emberAppendToLinkedBuffers
   \   00000064   0xEA5F 0x0B00      MOVS     R11,R0
    596                if (EMBER_SUCCESS != status) {
   \   00000068   0xD114             BNE.N    ??matchDescriptorsRequest_5
    597                  goto cleanup;
    598                }
    599              }
   \   0000006A   0x1C7F             ADDS     R7,R7,#+1
   \   0000006C   0xB2FF             UXTB     R7,R7
   \                     ??matchDescriptorsRequest_6: (+1)
   \   0000006E   0x4557             CMP      R7,R10
   \   00000070   0xDBEA             BLT.N    ??matchDescriptorsRequest_7
    600            }
   \                     ??matchDescriptorsRequest_4: (+1)
   \   00000072   0x1C6D             ADDS     R5,R5,#+1
   \   00000074   0xB2ED             UXTB     R5,R5
   \   00000076   0x2D02             CMP      R5,#+2
   \   00000078   0xDBD0             BLT.N    ??matchDescriptorsRequest_1
    601            status = emberMatchDescriptorsRequest(target,
    602                                                  profile,
    603                                                  inClusterBuffer,
    604                                                  outClusterBuffer,
    605                                                  options);
   \   0000007A   0x9810             LDR      R0,[SP, #+64]
   \   0000007C   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \   00000080   0xF89D 0x2005      LDRB     R2,[SP, #+5]
   \   00000084   0xF8BD 0x100C      LDRH     R1,[SP, #+12]
   \   00000088   0x9000             STR      R0,[SP, #+0]
   \   0000008A   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   0000008E   0x.... 0x....      BL       emberMatchDescriptorsRequest
   \   00000092   0x4683             MOV      R11,R0
    606           cleanup:
    607            if (inClusterBuffer != EMBER_NULL_MESSAGE_BUFFER) {
   \                     ??matchDescriptorsRequest_5: (+1)
   \   00000094   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \   00000098   0x28FF             CMP      R0,#+255
   \   0000009A   0xBF18             IT       NE 
    608              emberReleaseMessageBuffer(inClusterBuffer);
   \   0000009C   0x.... 0x....      BLNE     emReleaseMessageBuffer
    609            }
    610            if (outClusterBuffer != EMBER_NULL_MESSAGE_BUFFER) {
   \   000000A0   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   000000A4   0x28FF             CMP      R0,#+255
   \   000000A6   0xBF18             IT       NE 
    611              emberReleaseMessageBuffer(outClusterBuffer);
   \   000000A8   0x.... 0x....      BLNE     emReleaseMessageBuffer
    612            }
    613            return status;
   \   000000AC   0x4658             MOV      R0,R11
   \   000000AE   0xB005             ADD      SP,SP,#+20
   \   000000B0   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    614          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     emAfCliServiceDiscoveryCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \   00000000   0x........         DC32     inClCount

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x5A 0x44          DC8 "ZDO simple desc req %x"
   \              0x4F 0x20    
   \              0x73 0x69    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x63 0x20    
   \              0x72 0x65    
   \              0x71 0x20    
   \              0x25 0x78    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x5A 0x44          DC8 "ZDO node desc req %x"
   \              0x4F 0x20    
   \              0x6E 0x6F    
   \              0x64 0x65    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x63 0x20    
   \              0x72 0x65    
   \              0x71 0x20    
   \              0x25 0x78    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x5A 0x44          DC8 "ZDO match desc req %x"
   \              0x4F 0x20    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x64 0x65    
   \              0x73 0x63    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x20 0x25    
   \              0x78 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x45 0x72          DC8 45H, 72H, 72H, 6FH, 72H, 3AH, 20H, 20H
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x20    
   \   00000008   0x45 0x55          DC8 45H, 55H, 49H, 36H, 34H, 20H, 61H, 72H
   \              0x49 0x36    
   \              0x34 0x20    
   \              0x61 0x72    
   \   00000010   0x67 0x75          DC8 67H, 75H, 6DH, 65H, 6EH, 74H, 20H, 69H
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x69    
   \   00000018   0x73 0x20          DC8 73H, 20H, 65H, 6DH, 70H, 74H, 79H, 20H
   \              0x65 0x6D    
   \              0x70 0x74    
   \              0x79 0x20    
   \   00000020   0x61 0x6E          DC8 61H, 6EH, 64H, 20H, 6CH, 6FH, 6FH, 6BH
   \              0x64 0x20    
   \              0x6C 0x6F    
   \              0x6F 0x6B    
   \   00000028   0x75 0x70          DC8 75H, 70H, 20H, 62H, 79H, 20H, 6EH, 6FH
   \              0x20 0x62    
   \              0x79 0x20    
   \              0x6E 0x6F    
   \   00000030   0x64 0x65          DC8 64H, 65H, 20H, 49H, 44H, 20H, 66H, 61H
   \              0x20 0x49    
   \              0x44 0x20    
   \              0x66 0x61    
   \   00000038   0x69 0x6C          DC8 69H, 6CH, 65H, 64H, 2EH, 0
   \              0x65 0x64    
   \              0x2E 0x00    
   \   0000003E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x55 0x73          DC8 "Using my local EUI64 for dest EUI64 in binding"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6D 0x79    
   \              0x20 0x6C    
   \              0x6F 0x63    
   \              0x61 0x6C    
   \              0x20 0x45    
   \              0x55 0x49    
   \              0x36 0x34    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x45 0x55    
   \              0x49 0x36    
   \              0x34 0x20    
   \              0x69 0x6E    
   \              0x20 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x5A 0x44          DC8 "ZDO bind req %x"
   \              0x4F 0x20    
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x20 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x63 0x6C          DC8 "cluster limit reached"
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x6C 0x69    
   \              0x6D 0x69    
   \              0x74 0x20    
   \              0x72 0x65    
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x69 0x6E          DC8 "invalid channel: %d"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x63 0x68          DC8 "change channel status 0x%x"
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x20 0x63    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x64 0x75          DC8 "duration must be in range 0 - 5"
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6D    
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x62 0x65    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x72 0x61    
   \              0x6E 0x67    
   \              0x65 0x20    
   \              0x30 0x20    
   \              0x2D 0x20    
   \              0x35 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x63 0x6F          DC8 "count must be in range 1 - 8"
   \              0x75 0x6E    
   \              0x74 0x20    
   \              0x6D 0x75    
   \              0x73 0x74    
   \              0x20 0x62    
   \              0x65 0x20    
   \              0x69 0x6E    
   \              0x20 0x72    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x20 0x31    
   \              0x20 0x2D    
   \              0x20 0x38    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x73 0x63          DC8 "scan status 0x%x"
   \              0x61 0x6E    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x6E 0x65          DC8 "network update set status 0x%x"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x75 0x70    
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x41 0x63          DC8 "Active EP request status: 0x%X"
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x20 0x45    
   \              0x50 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x4C 0x51          DC8 "LQI Table request: 0x%X"
   \              0x49 0x20    
   \              0x54 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x4C 0x65          DC8 "Leave %p0x%X"
   \              0x61 0x76    
   \              0x65 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x52 0x65          DC8 "Request: "
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x3A    
   \              0x20 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x50 0x6F          DC8 "Power Descriptor %p0x%X"
   \              0x77 0x65    
   \              0x72 0x20    
   \              0x44 0x65    
   \              0x73 0x63    
   \              0x72 0x69    
   \              0x70 0x74    
   \              0x6F 0x72    
   \              0x20 0x25    
   \              0x70 0x30    
   \              0x78 0x25    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x45 0x6E          DC8 "End Device Bind %p0x%X"
   \              0x64 0x20    
   \              0x44 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x42    
   \              0x69 0x6E    
   \              0x64 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x55 0x6E          DC8 "Unbind %p %p0x%X"
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x47 0x72          DC8 "Group"
   \              0x6F 0x75    
   \              0x70 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x55 0x6E          DC8 "Unicast"
   \              0x69 0x63    
   \              0x61 0x73    
   \              0x74 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x55 0x73          DC8 "Using my local EUI64 for dest EUI64 in unbinding"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6D 0x79    
   \              0x20 0x6C    
   \              0x6F 0x63    
   \              0x61 0x6C    
   \              0x20 0x45    
   \              0x55 0x49    
   \              0x36 0x34    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x45 0x55    
   \              0x49 0x36    
   \              0x34 0x20    
   \              0x69 0x6E    
   \              0x20 0x75    
   \              0x6E 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x00         
   \   00000031   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x52 0x6F          DC8 "Route Table %p0x%X"
   \              0x75 0x74    
   \              0x65 0x20    
   \              0x54 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    615          
    616          #endif // !defined(EZSP_HOST)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   copyOrLookupEui64
        16   -> emberAfCopyBigEndianEui64Argument
        16   -> emberAfPrintln
        16   -> emberLookupEui64ByNodeId
      56   matchDescriptorsRequest
        56   -> emReleaseMessageBuffer
        56   -> emberAllocateLinkedBuffers
        56   -> emberAppendToLinkedBuffers
        56   -> emberMatchDescriptorsRequest
      72   unbindRequest
        72   -> copyOrLookupEui64
        72   -> emberAfPrintln
        72   -> emberSendZigDevBindRequest
        72   -> emberUnsignedCommandArgument
        72   -> halCommonMemCopy
       8   zdoActiveEpCommand
         0   -> emberAfPrint
         8   -> emberSendZigDevRequestTarget
         8   -> emberUnsignedCommandArgument
      16   zdoAddClusterCommand
         0   -> emberAfPrintln
        16   -> emberStringCommandArgument
        16   -> emberUnsignedCommandArgument
      64   zdoBindCommand
        64   -> copyOrLookupEui64
        64   -> emberAfCopyBigEndianEui64Argument
        64   -> emberAfGetEui64
        64   -> emberAfPrintln
        64   -> emberSendZigDevBindRequest
        64   -> emberUnsignedCommandArgument
       8   zdoClearClusterCommand
         8   -> emberStringCommandArgument
       8   zdoEndDeviceBindRequestCommand
         0   -> emberAfPrintln
         8   -> emberAfSendEndDeviceBind
         8   -> emberUnsignedCommandArgument
       8   zdoIeeeAddressRequestCommand
         0   -> emberAfFindIeeeAddress
         8   -> emberUnsignedCommandArgument
      24   zdoLeaveRequestCommand
        24   -> emberAfPrintln
        24   -> emberLeaveRequest
        24   -> emberUnsignedCommandArgument
      24   zdoMatchCommand
         0   -> emberAfPrintln
        24   -> emberUnsignedCommandArgument
        24   -> matchDescriptorsRequest
       8   zdoMgmtLqiCommand
         0   -> emberAfPrint
         8   -> emberTableRequest
         8   -> emberUnsignedCommandArgument
       8   zdoNetworkUpdateChannelCommand
         0   -> emberAfPrint
         0   -> emberAfPrintln
         8   -> emberEnergyScanRequest
         8   -> emberUnsignedCommandArgument
      16   zdoNetworkUpdateScanCommand
         0   -> emberAfPrint
         0   -> emberAfPrintln
        16   -> emberAfPrintln
        16   -> emberEnergyScanRequest
        16   -> emberUnsignedCommandArgument
       8   zdoNetworkUpdateSetCommand
         0   -> emberAfPrint
         8   -> emberEnergyScanRequest
         8   -> emberUnsignedCommandArgument
       8   zdoNodeCommand
         0   -> emberAfPrintln
         8   -> emberSendZigDevRequestTarget
         8   -> emberUnsignedCommandArgument
      16   zdoNwkAddressRequestCommand
        16   -> emberAfCopyBigEndianEui64Argument
        16   -> emberAfFindNodeId
       8   zdoPowerDescriptorRequestCommand
         0   -> emberAfPrintln
         8   -> emberSendZigDevRequestTarget
         8   -> emberUnsignedCommandArgument
       8   zdoRouteRequestCommand
         0   -> emberAfPrintln
         8   -> emberTableRequest
         8   -> emberUnsignedCommandArgument
       8   zdoSimpleCommand
         0   -> emberAfPrintln
         8   -> emberSimpleDescriptorRequest
         8   -> emberUnsignedCommandArgument
       8   zdoUnbindGroupCommand
         8   -> emberUnsignedCommandArgument
         8   -> unbindRequest
      16   zdoUnbindUnicastCommand
        16   -> emberAfCopyBigEndianEui64Argument
        16   -> emberAfGetEui64
        16   -> emberAfPrintln
        16   -> emberUnsignedCommandArgument
        16   -> unbindRequest


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable28
       4  ??DataTable28_1
       6  ?Subroutine0
       6  ?Subroutine1
       6  ?Subroutine2
       6  ?Subroutine3
       6  ?Subroutine4
       8  ?Subroutine5
       8  ?Subroutine6
       6  ?Subroutine7
      10  ?Subroutine8
      24  ?_0
      24  ?_1
      32  ?_10
      20  ?_11
      32  ?_12
      32  ?_13
      24  ?_14
       8  ?_15
      16  ?_16
      12  ?_17
      24  ?_18
      24  ?_19
      24  ?_2
      20  ?_20
       8  ?_21
       8  ?_22
      52  ?_23
      20  ?_24
      64  ?_3
      48  ?_4
      16  ?_5
      24  ?_6
      20  ?_7
      28  ?_8
      32  ?_9
      42  copyOrLookupEui64
      28  inClCount
          outClCount
          zdoInClusters
          zdoOutClusters
     180  matchDescriptorsRequest
     136  unbindRequest
      28  zdoActiveEpCommand
      54  zdoAddClusterCommand
     116  zdoBindCommand
      24  zdoClearClusterCommand
      26  zdoEndDeviceBindRequestCommand
      18  zdoIeeeAddressRequestCommand
      64  zdoLeaveRequestCommand
      56  zdoMatchCommand
      34  zdoMgmtLqiCommand
      56  zdoNetworkUpdateChannelCommand
      76  zdoNetworkUpdateScanCommand
      36  zdoNetworkUpdateSetCommand
      28  zdoNodeCommand
      22  zdoNwkAddressRequestCommand
      32  zdoPowerDescriptorRequestCommand
      38  zdoRouteRequestCommand
      34  zdoSimpleCommand
      24  zdoUnbindGroupCommand
      46  zdoUnbindUnicastCommand

 
    28 bytes in section .bss
     8 bytes in section .rodata
 1 868 bytes in section .text
 
 1 868 bytes of CODE  memory
     8 bytes of CONST memory
    28 bytes of DATA  memory

Errors: none
Warnings: none
