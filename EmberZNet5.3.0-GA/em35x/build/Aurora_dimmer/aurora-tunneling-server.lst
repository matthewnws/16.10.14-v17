###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:03
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-tunneling-server\aurora-tunneling-server.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-tunneling-server\aurora-tunneling-server.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"aurora-tunneling-server.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-tunneling-server\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-tunneling-server.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-tunneling-server.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-tunneling-server\aurora-tunneling-server.c
      1          // *******************************************************************
      2          // * tunneling-server.c
      3          // *
      4          // *
      5          // * Copyright 2010 by Ember Corporation. All rights reserved.              *80*
      6          // *******************************************************************
      7          
      8          #include "../../include/af.h"
      9          #include "../../util/common.h"
     10          #include "aurora-tunneling-server.h"
     11          
     12          #define UNUSED_ENDPOINT_ID 0xFF
     13          
     14          // If addressIndex is EMBER_NULL_ADDRESS_TABLE_INDEX and clientEndpoint is
     15          // UNUSED_ENDPOINT_ID, then the entry is unused and available for use by a new
     16          // tunnel.  Occasionally, clientEndpoint will be UNUSED_ENDPOINT_ID, but
     17          // addressIndex will contain a valid index.  This happens after a tunnel is
     18          // removed but before the address table entry has been cleaned up.  There is a
     19          // delay between closure and cleanup to allow the stack to continue using the
     20          // address table entry to send messages to the client.
     21          typedef struct {
     22            int8u   addressIndex;
     23            int8u   clientEndpoint;
     24            int8u   serverEndpoint;
     25            int8u   protocolId;
     26            int16u  manufacturerCode;
     27            boolean flowControlSupport;
     28            int32u  lastActive;
     29          } EmAfTunnelingServerTunnel;
     30          
     31          // this tells you both if the test protocol IS SUPPORTED and if
     32          // the current protocol requested IS the test protocol
     33          #ifdef EMBER_AF_PLUGIN_TUNNELING_SERVER_TEST_PROTOCOL_SUPPORT
     34            #define emAfIsTestProtocol(protocolId, manufacturerCode) \
     35              ((protocolId) == EMBER_ZCL_TUNNELING_PROTOCOL_ID_TEST  \
     36               && (manufacturerCode) == ZCL_TUNNELING_CLUSTER_UNUSED_MANUFACTURER_CODE)
     37            #define emAfTunnelIsTestProtocol(tunnel) \
     38              (emAfIsTestProtocol((tunnel)->protocolId, (tunnel)->manufacturerCode))
     39          #else
     40            #define emAfIsTestProtocol(protocolId, manufacturerCode) (FALSE)
     41            #define emAfTunnelIsTestProtocol(tunnel) (FALSE)
     42          #endif
     43          
     44          // global for keeping track of test-harness behavior "busy status"

   \                                 In section .bss, align 1
     45          static boolean emberAfPluginTunnelingServerBusyStatus = FALSE;
   \                     emberAfPluginTunnelingServerBusyStatus:
   \   00000000                      DS8 1
     46          

   \                                 In section .bss, align 4
     47          static EmAfTunnelingServerTunnel tunnels[EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT];
   \                     tunnels:
   \   00000000                      DS8 96
     48          
     49          static EmberAfStatus serverFindTunnel(int16u tunnelId,
     50                                                int8u addressIndex,
     51                                                int8u clientEndpoint,
     52                                                int8u serverEndpoint,
     53                                                EmAfTunnelingServerTunnel **tunnel);
     54          static void closeInactiveTunnels(int8u endpoint);
     55          

   \                                 In section .text, align 2, keep-with-next
     56          void emberAfTunnelingClusterServerInitCallback(int8u endpoint)
     57          {
   \                     emberAfTunnelingClusterServerInitCallback: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
     58            EmberAfStatus status;
     59            int16u closeTunnelTimeout = EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_CLOSE_TUNNEL_TIMEOUT;
   \   00000002   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000006   0xF8AD 0x1004      STRH     R1,[SP, #+4]
     60            int8u i;
     61          
     62            for (i = 0; i < EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT; i++) {
   \   0000000A   0x23FF             MOVS     R3,#+255
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable27_5
     63              tunnels[i].addressIndex = EMBER_NULL_ADDRESS_TABLE_INDEX;
   \                     ??emberAfTunnelingClusterServerInitCallback_0: (+1)
   \   00000012   0x240C             MOVS     R4,#+12
   \   00000014   0x434C             MULS     R4,R4,R1
     64              tunnels[i].clientEndpoint = UNUSED_ENDPOINT_ID;
     65            }
   \   00000016   0x1C49             ADDS     R1,R1,#+1
   \   00000018   0x54A3             STRB     R3,[R4, R2]
   \   0000001A   0x18A4             ADDS     R4,R4,R2
   \   0000001C   0x2908             CMP      R1,#+8
   \   0000001E   0x7063             STRB     R3,[R4, #+1]
   \   00000020   0xDBF7             BLT.N    ??emberAfTunnelingClusterServerInitCallback_0
     66          
     67            status = emberAfWriteServerAttribute(endpoint,
     68                                                 ZCL_TUNNELING_CLUSTER_ID,
     69                                                 ZCL_CLOSE_TUNNEL_TIMEOUT_ATTRIBUTE_ID,
     70                                                 (int8u *)&closeTunnelTimeout,
     71                                                 ZCL_INT16U_ATTRIBUTE_TYPE);
   \   00000022   0x2121             MOVS     R1,#+33
   \   00000024   0x9100             STR      R1,[SP, #+0]
   \   00000026   0xAB01             ADD      R3,SP,#+4
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0xF240 0x7104      MOVW     R1,#+1796
   \   0000002E   0x.... 0x....      BL       emberAfWriteServerAttribute
     72          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_TUNNELING_CLUSTER)
     73            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   00000032   0xB120             CBZ.N    R0,??CrossCallReturnLabel_5
     74              emberAfTunnelingClusterPrintln("ERR: writing close tunnel timeout 0x%x",
     75                                             status);
   \   00000034   0x4602             MOV      R2,R0
   \   00000036   0x.... 0x....      ADR.W    R1,?_0
   \   0000003A   0x.... 0x....      BL       ?Subroutine2
     76            }
     77          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_TUNNELING_CLUSTER)
     78          }
   \                     ??CrossCallReturnLabel_5: (+1)
   \   0000003E   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0xF240 0x1001      MOVW     R0,#+257
   \   00000004   0x.... 0x....      B.W      emberAfPrintln
     79          

   \                                 In section .text, align 2, keep-with-next
     80          void emberAfTunnelingClusterServerTickCallback(int8u endpoint)
     81          {
     82            closeInactiveTunnels(endpoint);
   \                     emberAfTunnelingClusterServerTickCallback: (+1)
   \   00000000   0x....             B.N      closeInactiveTunnels
     83          }
     84          

   \                                 In section .text, align 2, keep-with-next
     85          void emberAfTunnelingClusterServerAttributeChangedCallback(int8u endpoint,
     86                                                                     EmberAfAttributeId attributeId)
     87          {
     88            if (attributeId == ZCL_CLOSE_TUNNEL_TIMEOUT_ATTRIBUTE_ID) 
   \                     emberAfTunnelingClusterServerAttributeChangedCallback: (+1)
   \   00000000   0x2900             CMP      R1,#+0
   \   00000002   0xBF08             IT       EQ 
     89            {
     90              closeInactiveTunnels(endpoint);
   \   00000004   0x.... 0x....      BEQ.W    closeInactiveTunnels
     91            }
     92          }
   \   00000008   0x4770             BX       LR               ;; return
     93          

   \                                 In section .text, align 2, keep-with-next
     94          boolean emberAfTunnelingClusterRequestTunnelCallback(int8u protocolId,
     95                                                               int16u manufacturerCode,
     96                                                               int8u flowControlSupport,
     97                                                               int16u maximumIncomingTransferSize)
     98          {
   \                     emberAfTunnelingClusterRequestTunnelCallback: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4680             MOV      R8,R0
   \   00000008   0x4689             MOV      R9,R1
   \   0000000A   0x4614             MOV      R4,R2
     99            int16u tunnelId = ZCL_TUNNELING_CLUSTER_INVALID_TUNNEL_ID;
    100            EmberAfTunnelingTunnelStatus status = EMBER_ZCL_TUNNELING_TUNNEL_STATUS_NO_MORE_TUNNEL_IDS;
    101          
    102            emberAfTunnelingClusterPrintln("RX: RequestTunnel 0x%x, 0x%2x, 0x%x, 0x%2x",
    103                                           protocolId,
    104                                           manufacturerCode,
    105                                           flowControlSupport,
    106                                           maximumIncomingTransferSize);
   \   0000000C   0xF240 0x1B01      MOVW     R11,#+257
   \   00000010   0x9301             STR      R3,[SP, #+4]
   \   00000012   0x9400             STR      R4,[SP, #+0]
   \   00000014   0x464B             MOV      R3,R9
   \   00000016   0x4642             MOV      R2,R8
   \   00000018   0x.... 0x....      ADR.W    R1,?_1
   \   0000001C   0x4658             MOV      R0,R11
   \   0000001E   0x.... 0x....      BL       emberAfPrintln
    107          
    108            if (!emAfIsTestProtocol(protocolId, manufacturerCode)
    109                && !emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback(protocolId,
    110                                                                            manufacturerCode)) 
   \   00000022   0x4649             MOV      R1,R9
   \   00000024   0x4640             MOV      R0,R8
   \   00000026   0x.... 0x....      BL       emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback
   \   0000002A   0xF64F 0x7AFF      MOVW     R10,#+65535
   \   0000002E   0x2702             MOVS     R7,#+2
   \   00000030   0xB908             CBNZ.N   R0,??emberAfTunnelingClusterRequestTunnelCallback_0
    111            {
    112              status = EMBER_ZCL_TUNNELING_TUNNEL_STATUS_PROTOCOL_NOT_SUPPORTED;
   \   00000032   0x2703             MOVS     R7,#+3
   \   00000034   0xE058             B.N      ??emberAfTunnelingClusterRequestTunnelCallback_1
    113            } 
    114            else if (flowControlSupport) 
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_0: (+1)
   \   00000036   0xB10C             CBZ.N    R4,??emberAfTunnelingClusterRequestTunnelCallback_2
    115            {
    116              // TODO: Implement support for flow control.
    117              status = EMBER_ZCL_TUNNELING_TUNNEL_STATUS_FLOW_CONTROL_NOT_SUPPORTED;
   \   00000038   0x2704             MOVS     R7,#+4
   \   0000003A   0xE055             B.N      ??emberAfTunnelingClusterRequestTunnelCallback_1
    118            } 
    119            else if (emberAfPluginTunnelingServerBusyStatus) 
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_2: (+1)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable27_6
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0xB108             CBZ.N    R0,??emberAfTunnelingClusterRequestTunnelCallback_3
    120            {
    121              status = EMBER_ZCL_TUNNELING_TUNNEL_STATUS_BUSY;
   \   00000044   0x2701             MOVS     R7,#+1
   \   00000046   0xE04F             B.N      ??emberAfTunnelingClusterRequestTunnelCallback_1
    122            } 
    123            else 
    124            {
    125              int8u i;
    126              for (i = 0; i < EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT; i++) 
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_3: (+1)
   \   00000048   0x210C             MOVS     R1,#+12
    127              {
    128                if (tunnels[i].addressIndex == EMBER_NULL_ADDRESS_TABLE_INDEX
    129                    && tunnels[i].clientEndpoint == UNUSED_ENDPOINT_ID) 
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_4: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable27_5
   \   0000004E   0xFB01 0x0504      MLA      R5,R1,R4,R0
   \   00000052   0x7828             LDRB     R0,[R5, #+0]
   \   00000054   0x28FF             CMP      R0,#+255
   \   00000056   0xBF04             ITT      EQ 
   \   00000058   0x7868             LDRBEQ   R0,[R5, #+1]
   \   0000005A   0x28FF             CMPEQ    R0,#+255
   \   0000005C   0xD140             BNE.N    ??emberAfTunnelingClusterRequestTunnelCallback_5
    130                {
    131                  EmberEUI64 eui64;
    132                  EmberNodeId client = emberAfCurrentCommand()->source;
   \   0000005E   0x.... 0x....      LDR.W    R6,??DataTable27_7
   \   00000062   0x6830             LDR      R0,[R6, #+0]
   \   00000064   0x88C0             LDRH     R0,[R0, #+6]
   \   00000066   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    133                  status = EMBER_ZCL_TUNNELING_TUNNEL_STATUS_BUSY;
   \   0000006A   0xA901             ADD      R1,SP,#+4
    134                  if (emberLookupEui64ByNodeId(client, eui64) == EMBER_SUCCESS) 
   \   0000006C   0x.... 0x....      BL       emberLookupEui64ByNodeId
   \   00000070   0x2701             MOVS     R7,#+1
   \   00000072   0xBB68             CBNZ.N   R0,??emberAfTunnelingClusterRequestTunnelCallback_6
    135                  {
    136                    tunnels[i].addressIndex = emberAfAddAddressTableEntry(eui64, client);
   \   00000074   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000078   0xA801             ADD      R0,SP,#+4
   \   0000007A   0x.... 0x....      BL       emberAfAddAddressTableEntry
    137                    if (tunnels[i].addressIndex != EMBER_NULL_ADDRESS_TABLE_INDEX) 
   \   0000007E   0x28FF             CMP      R0,#+255
   \   00000080   0x7028             STRB     R0,[R5, #+0]
   \   00000082   0xD020             BEQ.N    ??emberAfTunnelingClusterRequestTunnelCallback_7
    138                    {
    139                      tunnelId = i;
    140                      tunnels[i].clientEndpoint = emberAfCurrentCommand()->apsFrame->sourceEndpoint;
   \   00000084   0x6830             LDR      R0,[R6, #+0]
   \   00000086   0x6801             LDR      R1,[R0, #+0]
   \   00000088   0x7909             LDRB     R1,[R1, #+4]
   \   0000008A   0x7069             STRB     R1,[R5, #+1]
   \   0000008C   0x46A2             MOV      R10,R4
    141                      tunnels[i].serverEndpoint = emberAfCurrentCommand()->apsFrame->destinationEndpoint;
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x7940             LDRB     R0,[R0, #+5]
   \   00000092   0x70A8             STRB     R0,[R5, #+2]
    142                      tunnels[i].protocolId = protocolId;
   \   00000094   0xF885 0x8003      STRB     R8,[R5, #+3]
    143                      tunnels[i].manufacturerCode = manufacturerCode;
   \   00000098   0xF8A5 0x9004      STRH     R9,[R5, #+4]
    144                      tunnels[i].flowControlSupport = flowControlSupport;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x71A8             STRB     R0,[R5, #+6]
   \   000000A0   0x2700             MOVS     R7,#+0
    145                      tunnels[i].lastActive = emberAfGetCurrentTime();
   \   000000A2   0x.... 0x....      BL       emberAfGetCurrentTime
   \   000000A6   0x60A8             STR      R0,[R5, #+8]
    146                      status = EMBER_ZCL_TUNNELING_TUNNEL_STATUS_SUCCESS;
    147                      // This will reschedule the tick that will timeout tunnels.
    148                      closeInactiveTunnels(emberAfCurrentCommand()->apsFrame->destinationEndpoint);
   \   000000A8   0x6830             LDR      R0,[R6, #+0]
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x7940             LDRB     R0,[R0, #+5]
   \   000000AE   0x.... 0x....      BL       closeInactiveTunnels
    149                    } 
    150                    else 
    151                    {
    152                      emberAfTunnelingClusterPrintln("ERR: Could not create address"
    153                                                     " table entry for node 0x%2x",
    154                                                     client);
    155                    }
    156                  } 
    157                  else 
    158                  {
    159                    emberAfTunnelingClusterPrintln("ERR: EUI64 for node 0x%2x"
    160                                                   " is unknown",
    161                                                   client);
    162                  }
    163                  break;
    164                }
    165              }
    166            }
    167          
    168            if (status == EMBER_ZCL_TUNNELING_TUNNEL_STATUS_SUCCESS) {
    169              emberAfPluginAuroraTunnelingServerTunnelOpenedCallback(tunnelId,
    170                                                               protocolId,
    171                                                               manufacturerCode,
    172                                                               flowControlSupport,
    173                                                               maximumIncomingTransferSize);
   \   000000B2   0xF8BD 0x0010      LDRH     R0,[SP, #+16]
   \   000000B6   0x9000             STR      R0,[SP, #+0]
   \   000000B8   0x2300             MOVS     R3,#+0
   \   000000BA   0x464A             MOV      R2,R9
   \   000000BC   0x4641             MOV      R1,R8
   \   000000BE   0x4650             MOV      R0,R10
   \   000000C0   0x.... 0x....      BL       emberAfPluginAuroraTunnelingServerTunnelOpenedCallback
   \   000000C4   0xE010             B.N      ??emberAfTunnelingClusterRequestTunnelCallback_1
    174            }
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_7: (+1)
   \   000000C6   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   000000CA   0x.... 0x....      ADR.W    R1,?_2
   \   000000CE   0xE003             B.N      ??emberAfTunnelingClusterRequestTunnelCallback_8
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_6: (+1)
   \   000000D0   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   000000D4   0x.... 0x....      ADR.W    R1,?_3
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_8: (+1)
   \   000000D8   0x4658             MOV      R0,R11
   \   000000DA   0x.... 0x....      BL       emberAfPrintln
   \   000000DE   0xE003             B.N      ??emberAfTunnelingClusterRequestTunnelCallback_1
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_5: (+1)
   \   000000E0   0x1C64             ADDS     R4,R4,#+1
   \   000000E2   0xB2E4             UXTB     R4,R4
   \   000000E4   0x2C08             CMP      R4,#+8
   \   000000E6   0xDBB0             BLT.N    ??emberAfTunnelingClusterRequestTunnelCallback_4
    175          
    176            emberAfFillCommandTunnelingClusterRequestTunnelResponse(tunnelId,
    177                                                                    status,
    178                                                                    EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_MAXIMUM_INCOMING_TRANSFER_SIZE);
   \                     ??emberAfTunnelingClusterRequestTunnelCallback_1: (+1)
   \   000000E8   0x2080             MOVS     R0,#+128
   \   000000EA   0x9002             STR      R0,[SP, #+8]
   \   000000EC   0x9701             STR      R7,[SP, #+4]
   \   000000EE   0xF8CD 0xA000      STR      R10,[SP, #+0]
   \   000000F2   0x....             ADR.N    R3,??DataTable27  ;; "vuv"
   \   000000F4   0x2200             MOVS     R2,#+0
   \   000000F6   0x.... 0x....      BL       ?Subroutine1
    179            emberAfGetCommandApsFrame()->options |= EMBER_APS_OPTION_SOURCE_EUI64;
   \                     ??CrossCallReturnLabel_2: (+1)
   \   000000FA   0x.... 0x....      BL       emberAfGetCommandApsFrame
   \   000000FE   0x.... 0x....      BL       ?Subroutine4
    180            emberAfSendResponse();
    181            return TRUE;
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000102   0x2001             MOVS     R0,#+1
   \   00000104   0xB005             ADD      SP,SP,#+20
   \   00000106   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    182          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x88C1             LDRH     R1,[R0, #+6]
   \   00000002   0xF441 0x6180      ORR      R1,R1,#0x400
   \   00000006   0x80C1             STRH     R1,[R0, #+6]
   \   00000008   0x.... 0x....      B.W      emberAfSendResponse

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xF240 0x7104      MOVW     R1,#+1796
   \   00000004   0x2009             MOVS     R0,#+9
   \   00000006   0x.... 0x....      B.W      emberAfFillExternalBuffer
    183          

   \                                 In section .text, align 2, keep-with-next
    184          boolean emberAfTunnelingClusterCloseTunnelCallback(int16u tunnelId)
    185          {
   \                     emberAfTunnelingClusterCloseTunnelCallback: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    186            EmAfTunnelingServerTunnel *tunnel;
    187            EmberAfStatus status;
    188          
    189            emberAfTunnelingClusterPrintln("RX: CloseTunnel 0x%2x", tunnelId);
   \   00000004   0x4622             MOV      R2,R4
   \   00000006   0x.... 0x....      ADR.W    R1,?_5
   \   0000000A   0x....             LDR.N    R5,??DataTable27_7
   \   0000000C   0x.... 0x....      BL       ?Subroutine2
    190          
    191            status = serverFindTunnel(tunnelId,
    192                                      emberAfGetAddressIndex(),
    193                                      emberAfCurrentCommand()->apsFrame->sourceEndpoint,
    194                                      emberAfCurrentCommand()->apsFrame->destinationEndpoint,
    195                                      &tunnel);
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000010   0x.... 0x....      BL       emberAfGetAddressIndex
   \   00000014   0x6829             LDR      R1,[R5, #+0]
   \   00000016   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_8: (+1)
   \   0000001A   0x0006             MOVS     R6,R0
    196            if (status == EMBER_ZCL_STATUS_SUCCESS) 
   \   0000001C   0xD10F             BNE.N    ??emberAfTunnelingClusterCloseTunnelCallback_0
    197            {
    198              // Mark the entry as unused and schedule a tick to clean up the address
    199              // table entry.  The delay before cleaning up the address table is to give
    200              // the stack some time to continue using it for sending the response to the
    201              // server.
    202              tunnel->clientEndpoint = UNUSED_ENDPOINT_ID;
   \   0000001E   0x9901             LDR      R1,[SP, #+4]
   \   00000020   0x20FF             MOVS     R0,#+255
   \   00000022   0x7048             STRB     R0,[R1, #+1]
    203              emberAfScheduleServerTick(emberAfCurrentCommand()->apsFrame->destinationEndpoint,
    204                                        ZCL_TUNNELING_CLUSTER_ID,
    205                                        MILLISECOND_TICKS_PER_SECOND);
   \   00000024   0xF44F 0x6280      MOV      R2,#+1024
   \   00000028   0x6828             LDR      R0,[R5, #+0]
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x7940             LDRB     R0,[R0, #+5]
   \   0000002E   0xF240 0x7104      MOVW     R1,#+1796
   \   00000032   0x.... 0x....      BL       emberAfScheduleServerTick
    206              emberAfPluginAuroraTunnelingServerTunnelClosedCallback(tunnelId,
    207                                                               CLOSE_INITIATED_BY_CLIENT);
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0x4620             MOV      R0,R4
   \   0000003A   0x.... 0x....      BL       emberAfPluginAuroraTunnelingServerTunnelClosedCallback
    208            }
    209          
    210            emberAfSendImmediateDefaultResponse(status);
   \                     ??emberAfTunnelingClusterCloseTunnelCallback_0: (+1)
   \   0000003E   0x....             B.N      ?Subroutine0
    211            return TRUE;
    212          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x6809             LDR      R1,[R1, #+0]
   \   00000002   0xAA01             ADD      R2,SP,#+4
   \   00000004   0x9200             STR      R2,[SP, #+0]
   \                     ??Subroutine3_0: (+1)
   \   00000006   0x794B             LDRB     R3,[R1, #+5]
   \   00000008   0x790A             LDRB     R2,[R1, #+4]
   \   0000000A   0x4601             MOV      R1,R0
   \   0000000C   0x4620             MOV      R0,R4
   \   0000000E   0x....             B.N      serverFindTunnel

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x4630             MOV      R0,R6
   \   00000002   0x.... 0x....      BL       emberAfSendImmediateDefaultResponse
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    213          

   \                                 In section .text, align 2, keep-with-next
    214          boolean emberAfTunnelingClusterTransferDataClientToServerCallback(int16u tunnelId,
    215                                                                            int8u* data)
    216          {
   \                     emberAfTunnelingClusterTransferDataClientToServerCallback: (+1)
   \   00000000   0xE92D 0x46FE      PUSH     {R1-R7,R9,R10,LR}
    217            EmAfTunnelingServerTunnel *tunnel;
    218            EmberAfStatus status;
    219            int16u dataLen = (emberAfCurrentCommand()->bufLen
    220                              - (emberAfCurrentCommand()->payloadStartIndex
    221                                 + sizeof(tunnelId)));
   \   00000004   0x....             LDR.N    R5,??DataTable27_7
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x6828             LDR      R0,[R5, #+0]
   \   0000000A   0x4689             MOV      R9,R1
   \   0000000C   0x8981             LDRH     R1,[R0, #+12]
   \   0000000E   0x7D00             LDRB     R0,[R0, #+20]
   \   00000010   0x1A08             SUBS     R0,R1,R0
   \   00000012   0x1E86             SUBS     R6,R0,#+2
    222            EmberAfTunnelingTransferDataStatus tunnelError = EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_DATA_OVERFLOW;
    223          
    224            emberAfTunnelingClusterPrint("RX: TransferData 0x%2x, [", tunnelId);
   \   00000014   0xF240 0x1A01      MOVW     R10,#+257
   \   00000018   0x4622             MOV      R2,R4
   \   0000001A   0x.... 0x....      ADR.W    R1,?_6
   \   0000001E   0x4650             MOV      R0,R10
   \   00000020   0x.... 0x....      BL       emberAfPrint
    225            emberAfTunnelingClusterPrintBuffer(data, dataLen, FALSE);
   \   00000024   0x2300             MOVS     R3,#+0
   \   00000026   0xB2B2             UXTH     R2,R6
   \   00000028   0x4649             MOV      R1,R9
   \   0000002A   0x4650             MOV      R0,R10
   \   0000002C   0x.... 0x....      BL       emberAfPrintBuffer
    226            emberAfTunnelingClusterPrintln("]");
   \   00000030   0x....             ADR.N    R1,??DataTable27_1  ;; "]"
   \   00000032   0x4650             MOV      R0,R10
   \   00000034   0x.... 0x....      BL       emberAfPrintln
    227          
    228            status = serverFindTunnel(tunnelId,
    229                                      emberAfGetAddressIndex(),
    230                                      emberAfCurrentCommand()->apsFrame->sourceEndpoint,
    231                                      emberAfCurrentCommand()->apsFrame->destinationEndpoint,
    232                                      &tunnel);
   \   00000038   0x.... 0x....      BL       emberAfGetAddressIndex
   \   0000003C   0x6829             LDR      R1,[R5, #+0]
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0xAA02             ADD      R2,SP,#+8
   \   00000042   0x9200             STR      R2,[SP, #+0]
   \   00000044   0x2702             MOVS     R7,#+2
   \   00000046   0x.... 0x....      BL       ??Subroutine3_0
    233            if (status == EMBER_ZCL_STATUS_SUCCESS) 
   \                     ??CrossCallReturnLabel_6: (+1)
   \   0000004A   0xB978             CBNZ.N   R0,??emberAfTunnelingClusterTransferDataClientToSe_0
    234            {
    235              if (dataLen <= EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_MAXIMUM_INCOMING_TRANSFER_SIZE) 
   \   0000004C   0xB2B6             UXTH     R6,R6
   \   0000004E   0x2E81             CMP      R6,#+129
   \   00000050   0xDA10             BGE.N    ??emberAfTunnelingClusterTransferDataClientToSe_1
    236              {
    237                tunnel->lastActive = emberAfGetCurrentTime();
   \   00000052   0x.... 0x....      BL       emberAfGetCurrentTime
   \   00000056   0x9902             LDR      R1,[SP, #+8]
   \   00000058   0x6088             STR      R0,[R1, #+8]
    238          
    239                // If this is the test protocol (and the option for test protocol support
    240                // is enabled), just turn the data around without notifying the
    241                // application.  Otherwise, everything goes to the application via a
    242                // callback.
    243                if (emAfTunnelIsTestProtocol(tunnel)) 
    244                {
    245                  emberAfPluginTunnelingServerTransferData(tunnelId, data, dataLen);
    246                } 
    247                else 
    248                {
    249                  emberAfPluginAuroraTunnelingServerDataReceivedCallback(tunnelId, data, dataLen);
   \   0000005A   0x4632             MOV      R2,R6
   \   0000005C   0x4649             MOV      R1,R9
   \   0000005E   0x4620             MOV      R0,R4
   \   00000060   0x.... 0x....      BL       emberAfPluginAuroraTunnelingServerDataReceivedCallback
    250                }
    251                emberAfSendImmediateDefaultResponse(status);
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       emberAfSendImmediateDefaultResponse
    252                return TRUE;
   \   0000006A   0xE00D             B.N      ??CrossCallReturnLabel_9
    253              }
    254              // else
    255              //  tunnelError code already set (overflow)
    256          
    257            } 
    258            else 
    259            {
    260              tunnelError = (status == EMBER_ZCL_STATUS_NOT_AUTHORIZED
    261                             ? EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_WRONG_DEVICE
    262                             : EMBER_ZCL_TUNNELING_TRANSFER_DATA_STATUS_NO_SUCH_TUNNEL);
   \                     ??emberAfTunnelingClusterTransferDataClientToSe_0: (+1)
   \   0000006C   0x287E             CMP      R0,#+126
   \   0000006E   0xBF0C             ITE      EQ 
   \   00000070   0x2701             MOVEQ    R7,#+1
   \   00000072   0x2700             MOVNE    R7,#+0
    263            }
    264          
    265            // Error
    266            emberAfFillCommandTunnelingClusterTransferDataErrorServerToClient(tunnelId,
    267                                                                              tunnelError);
   \                     ??emberAfTunnelingClusterTransferDataClientToSe_1: (+1)
   \   00000074   0x9701             STR      R7,[SP, #+4]
   \   00000076   0x9400             STR      R4,[SP, #+0]
   \   00000078   0x....             ADR.N    R3,??DataTable27_2  ;; 0x76, 0x75, 0x00, 0x00
   \   0000007A   0x2202             MOVS     R2,#+2
   \   0000007C   0x.... 0x....      BL       ?Subroutine1
    268            emberAfGetCommandApsFrame()->options |= EMBER_APS_OPTION_SOURCE_EUI64;
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000080   0x.... 0x....      BL       emberAfGetCommandApsFrame
   \   00000084   0x.... 0x....      BL       ?Subroutine4
    269            emberAfSendResponse();
    270            return TRUE;
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0xE8BD 0x86FE      POP      {R1-R7,R9,R10,PC}  ;; return
    271          }
    272          

   \                                 In section .text, align 2, keep-with-next
    273          boolean emberAfTunnelingClusterTransferDataErrorClientToServerCallback(int16u tunnelId,
    274                                                                                 int8u transferDataStatus)
    275          {
   \                     emberAfTunnelingClusterTransferDataErrorClientToServerCallback: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    276            EmAfTunnelingServerTunnel *tunnel;
    277            EmberAfStatus status;
    278          
    279            emberAfTunnelingClusterPrintln("RX: TransferDataError 0x%2x, 0x%x",
    280                                           tunnelId,
    281                                           transferDataStatus);
   \   00000006   0x462B             MOV      R3,R5
   \   00000008   0x4622             MOV      R2,R4
   \   0000000A   0x.... 0x....      ADR.W    R1,?_9
   \   0000000E   0xF240 0x1001      MOVW     R0,#+257
   \   00000012   0x.... 0x....      BL       emberAfPrintln
    282          
    283            status = serverFindTunnel(tunnelId,
    284                                      emberAfGetAddressIndex(),
    285                                      emberAfCurrentCommand()->apsFrame->sourceEndpoint,
    286                                      emberAfCurrentCommand()->apsFrame->destinationEndpoint,
    287                                      &tunnel);
   \   00000016   0x.... 0x....      BL       emberAfGetAddressIndex
   \   0000001A   0x....             LDR.N    R1,??DataTable27_7
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000022   0x0006             MOVS     R6,R0
    288            if (status == EMBER_ZCL_STATUS_SUCCESS) 
   \   00000024   0xD103             BNE.N    ??emberAfTunnelingClusterTransferDataErrorClien_0
    289            {
    290              emberAfPluginAuroraTunnelingServerDataErrorCallback(tunnelId,
    291                                                            (EmberAfTunnelingTransferDataStatus)transferDataStatus);
   \   00000026   0x4629             MOV      R1,R5
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       emberAfPluginAuroraTunnelingServerDataErrorCallback
    292            }
    293          
    294            emberAfSendImmediateDefaultResponse(status);
   \                     ??emberAfTunnelingClusterTransferDataErrorClien_0: (+1)
   \   0000002E                      REQUIRE ?Subroutine0
   \   0000002E                      ;; // Fall through to label ?Subroutine0
    295            return TRUE;
    296          }
    297          

   \                                 In section .text, align 2, keep-with-next
    298          EmberAfStatus emberAfPluginTunnelingServerTransferData(int16u tunnelId,
    299                                                                 int8u *data,
    300                                                                 int16u dataLen)
    301          {
   \                     emberAfPluginTunnelingServerTransferData: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
    302            if (tunnelId < EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT
    303                && tunnels[tunnelId].clientEndpoint != UNUSED_ENDPOINT_ID) {
   \   00000002   0x2808             CMP      R0,#+8
   \   00000004   0xDA23             BGE.N    ??emberAfPluginTunnelingServerTransferData_0
   \   00000006   0x....             LDR.N    R3,??DataTable27_5
   \   00000008   0x240C             MOVS     R4,#+12
   \   0000000A   0xFB04 0x3400      MLA      R4,R4,R0,R3
   \   0000000E   0x7863             LDRB     R3,[R4, #+1]
   \   00000010   0x2BFF             CMP      R3,#+255
   \   00000012   0xD01C             BEQ.N    ??emberAfPluginTunnelingServerTransferData_0
    304              EmberStatus status;
    305              emberAfFillCommandTunnelingClusterTransferDataServerToClient(tunnelId,
    306                                                                           data,
    307                                                                           dataLen);
   \   00000014   0x9202             STR      R2,[SP, #+8]
   \   00000016   0x9101             STR      R1,[SP, #+4]
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0x....             ADR.N    R3,??DataTable27_3  ;; 0x76, 0x62, 0x00, 0x00
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x.... 0x....      BL       ?Subroutine1
    308              emberAfSetCommandEndpoints(tunnels[tunnelId].serverEndpoint,
    309                                         tunnels[tunnelId].clientEndpoint);
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000022   0x7861             LDRB     R1,[R4, #+1]
   \   00000024   0x78A0             LDRB     R0,[R4, #+2]
   \   00000026   0x.... 0x....      BL       emberAfSetCommandEndpoints
    310              emberAfGetCommandApsFrame()->options |= EMBER_APS_OPTION_SOURCE_EUI64;
   \   0000002A   0x.... 0x....      BL       emberAfGetCommandApsFrame
   \   0000002E   0x88C1             LDRH     R1,[R0, #+6]
   \   00000030   0xF441 0x6180      ORR      R1,R1,#0x400
   \   00000034   0x80C1             STRH     R1,[R0, #+6]
    311              status = emberAfSendCommandUnicast(EMBER_OUTGOING_VIA_ADDRESS_TABLE,
    312                                                 tunnels[tunnelId].addressIndex);
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x7821             LDRB     R1,[R4, #+0]
   \   0000003A   0x.... 0x....      BL       emberAfSendCommandUnicast
   \   0000003E   0x4605             MOV      R5,R0
    313              tunnels[tunnelId].lastActive = emberAfGetCurrentTime();
   \   00000040   0x.... 0x....      BL       emberAfGetCurrentTime
   \   00000044   0x60A0             STR      R0,[R4, #+8]
    314              return (status == EMBER_SUCCESS
    315                      ? EMBER_ZCL_STATUS_SUCCESS
    316                      : EMBER_ZCL_STATUS_FAILURE);
   \   00000046   0x0028             MOVS     R0,R5
   \   00000048   0xD002             BEQ.N    ??emberAfPluginTunnelingServerTransferData_1
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0xBD3E             POP      {R1-R5,PC}
    317            }
    318            return EMBER_ZCL_STATUS_NOT_FOUND;
   \                     ??emberAfPluginTunnelingServerTransferData_0: (+1)
   \   0000004E   0x208B             MOVS     R0,#+139
   \                     ??emberAfPluginTunnelingServerTransferData_1: (+1)
   \   00000050   0xBD3E             POP      {R1-R5,PC}       ;; return
    319          }
    320          

   \                                 In section .text, align 2, keep-with-next
    321          static EmberAfStatus serverFindTunnel(int16u tunnelId,
    322                                                int8u addressIndex,
    323                                                int8u clientEndpoint,
    324                                                int8u serverEndpoint,
    325                                                EmAfTunnelingServerTunnel **tunnel)
    326          {
   \                     serverFindTunnel: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
    327            if (tunnelId < EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT
    328                && tunnels[tunnelId].clientEndpoint != UNUSED_ENDPOINT_ID) {
   \   00000002   0x2808             CMP      R0,#+8
   \   00000004   0xDA14             BGE.N    ??serverFindTunnel_0
   \   00000006   0x....             LDR.N    R4,??DataTable27_5
   \   00000008   0x250C             MOVS     R5,#+12
   \   0000000A   0xFB05 0x4000      MLA      R0,R5,R0,R4
   \   0000000E   0x7844             LDRB     R4,[R0, #+1]
   \   00000010   0x2CFF             CMP      R4,#+255
   \   00000012   0xD00D             BEQ.N    ??serverFindTunnel_0
    329              if (tunnels[tunnelId].addressIndex == addressIndex
    330                  && tunnels[tunnelId].clientEndpoint == clientEndpoint
    331                  && tunnels[tunnelId].serverEndpoint == serverEndpoint) {
   \   00000014   0x7804             LDRB     R4,[R0, #+0]
   \   00000016   0x428C             CMP      R4,R1
   \   00000018   0xBF01             ITTTT    EQ 
   \   0000001A   0x7841             LDRBEQ   R1,[R0, #+1]
   \   0000001C   0x4291             CMPEQ    R1,R2
   \   0000001E   0x7881             LDRBEQ   R1,[R0, #+2]
   \   00000020   0x4299             CMPEQ    R1,R3
   \   00000022   0xD103             BNE.N    ??serverFindTunnel_1
    332                *tunnel = &tunnels[tunnelId];
   \   00000024   0x9903             LDR      R1,[SP, #+12]
   \   00000026   0x6008             STR      R0,[R1, #+0]
    333                return EMBER_ZCL_STATUS_SUCCESS;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0xBD30             POP      {R4,R5,PC}
    334              } else {
    335                return EMBER_ZCL_STATUS_NOT_AUTHORIZED;
   \                     ??serverFindTunnel_1: (+1)
   \   0000002C   0x207E             MOVS     R0,#+126
   \   0000002E   0xBD30             POP      {R4,R5,PC}
    336              }
    337            }
    338            return EMBER_ZCL_STATUS_NOT_FOUND;
   \                     ??serverFindTunnel_0: (+1)
   \   00000030   0x208B             MOVS     R0,#+139
   \   00000032   0xBD30             POP      {R4,R5,PC}       ;; return
    339          }
    340          

   \                                 In section .text, align 2, keep-with-next
    341          static void closeInactiveTunnels(int8u endpoint)
    342          {
   \                     closeInactiveTunnels: (+1)
   \   00000000   0xE92D 0x47FC      PUSH     {R2-R10,LR}
   \   00000004   0x4680             MOV      R8,R0
    343            EmberAfStatus status;
    344            int32u currentTime = emberAfGetCurrentTime();
   \   00000006   0x.... 0x....      BL       emberAfGetCurrentTime
   \   0000000A   0x4605             MOV      R5,R0
    345            int32u delay = MAX_INT32U_VALUE;
    346            int16u closeTunnelTimeout;
    347            int8u i;
    348          
    349            status = emberAfReadServerAttribute(endpoint,
    350                                                ZCL_TUNNELING_CLUSTER_ID,
    351                                                ZCL_CLOSE_TUNNEL_TIMEOUT_ATTRIBUTE_ID,
    352                                                (int8u *)&closeTunnelTimeout,
    353                                                sizeof(closeTunnelTimeout));
   \   0000000C   0x2002             MOVS     R0,#+2
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0xF240 0x7A04      MOVW     R10,#+1796
   \   00000014   0xAB01             ADD      R3,SP,#+4
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x4651             MOV      R1,R10
   \   0000001A   0x4640             MOV      R0,R8
   \   0000001C   0x.... 0x....      BL       emberAfReadServerAttribute
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0xF04F 0x39FF      MOV      R9,#-1
    354            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   00000026   0xD004             BEQ.N    ??closeInactiveTunnels_0
    355              emberAfTunnelingClusterPrintln("ERR: reading close tunnel timeout 0x%x",
    356                                             status);
   \   00000028   0x.... 0x....      ADR.W    R1,?_11
   \   0000002C   0x.... 0x....      BL       ?Subroutine2
    357              return;
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000030   0xE032             B.N      ??closeInactiveTunnels_1
    358            }
    359          
    360            // Every time the tick fires, we search the table for inactive tunnels that
    361            // should be closed and unused entries that still have an address table
    362            // index.  The unused tunnels have been closed, but the address table entry
    363            // was not immediately removed so the stack could continue using it.  By this
    364            // point, we've given the stack a fair shot to use it, so now remove the
    365            // address table entry.  While looking through the tunnels, the time to next
    366            // tick is calculated based on how recently the tunnels were used or by the
    367            // need to clean up newly unused tunnels.
    368            for (i = 0; i < EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT; i++) {
   \                     ??closeInactiveTunnels_0: (+1)
   \   00000032   0x2400             MOVS     R4,#+0
   \   00000034   0x27FF             MOVS     R7,#+255
    369              if (tunnels[i].serverEndpoint == endpoint) {
   \                     ??closeInactiveTunnels_2: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable27_5
   \   00000038   0x210C             MOVS     R1,#+12
   \   0000003A   0xFB01 0x0604      MLA      R6,R1,R4,R0
   \   0000003E   0x78B0             LDRB     R0,[R6, #+2]
   \   00000040   0x4540             CMP      R0,R8
   \   00000042   0xD11D             BNE.N    ??closeInactiveTunnels_3
    370                if (tunnels[i].clientEndpoint != UNUSED_ENDPOINT_ID) {
   \   00000044   0x7870             LDRB     R0,[R6, #+1]
   \   00000046   0x28FF             CMP      R0,#+255
   \   00000048   0xD014             BEQ.N    ??closeInactiveTunnels_4
    371                  int32u elapsed = currentTime - tunnels[i].lastActive;
   \   0000004A   0x68B0             LDR      R0,[R6, #+8]
    372                  if (closeTunnelTimeout <= elapsed) {
   \   0000004C   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000050   0x1A28             SUBS     R0,R5,R0
   \   00000052   0x4288             CMP      R0,R1
   \   00000054   0xD309             BCC.N    ??closeInactiveTunnels_5
    373                    // If we are closing an inactive tunnel and will not send a closure
    374                    // notification, we can immediately remove the address table entry
    375                    // for the client because it will no longer be used.  Otherwise, we
    376                    // need to schedule a tick to clean up the address table entry so we
    377                    // give the stack a chance to continue using it for sending the
    378                    // notification.
    379          #ifdef EMBER_AF_PLUGIN_TUNNELING_SERVER_CLOSURE_NOTIFICATION_SUPPORT
    380                    emberAfFillCommandTunnelingClusterTunnelClosureNotification(i);
    381                    emberAfSetCommandEndpoints(tunnels[i].serverEndpoint,
    382                                               tunnels[i].clientEndpoint);
    383                    emberAfGetCommandApsFrame()->options |= EMBER_APS_OPTION_SOURCE_EUI64;
    384                    emberAfSendCommandUnicast(EMBER_OUTGOING_VIA_ADDRESS_TABLE,
    385                                              tunnels[i].addressIndex);
    386                    delay = 1;
    387          #else
    388                    emberAfRemoveAddressTableEntry(tunnels[i].addressIndex);
   \   00000056   0x7830             LDRB     R0,[R6, #+0]
   \   00000058   0x.... 0x....      BL       emberAfRemoveAddressTableEntry
    389                    tunnels[i].addressIndex = EMBER_NULL_ADDRESS_TABLE_INDEX;
   \   0000005C   0x7037             STRB     R7,[R6, #+0]
    390          #endif
    391                    tunnels[i].clientEndpoint = UNUSED_ENDPOINT_ID;
   \   0000005E   0x7077             STRB     R7,[R6, #+1]
    392                    emberAfPluginAuroraTunnelingServerTunnelClosedCallback(i,
    393                                                                     CLOSE_INITIATED_BY_SERVER);
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0xB2E0             UXTB     R0,R4
   \   00000064   0x.... 0x....      BL       emberAfPluginAuroraTunnelingServerTunnelClosedCallback
   \   00000068   0xE00A             B.N      ??closeInactiveTunnels_3
    394                  } else {
    395                    int32u remaining = closeTunnelTimeout - elapsed;
   \                     ??closeInactiveTunnels_5: (+1)
   \   0000006A   0x1A08             SUBS     R0,R1,R0
    396                    if (remaining < delay) {
   \   0000006C   0x4548             CMP      R0,R9
   \   0000006E   0xD807             BHI.N    ??closeInactiveTunnels_3
   \   00000070   0x4681             MOV      R9,R0
   \   00000072   0xE005             B.N      ??closeInactiveTunnels_3
    397                      delay = remaining;
    398                    }
    399                  }
    400                } else if (tunnels[i].addressIndex != EMBER_NULL_ADDRESS_TABLE_INDEX) {
   \                     ??closeInactiveTunnels_4: (+1)
   \   00000074   0x7830             LDRB     R0,[R6, #+0]
   \   00000076   0x28FF             CMP      R0,#+255
   \   00000078   0xD002             BEQ.N    ??closeInactiveTunnels_3
    401                  emberAfRemoveAddressTableEntry(tunnels[i].addressIndex);
   \   0000007A   0x.... 0x....      BL       emberAfRemoveAddressTableEntry
    402                  tunnels[i].addressIndex = EMBER_NULL_ADDRESS_TABLE_INDEX;
   \   0000007E   0x7037             STRB     R7,[R6, #+0]
    403                }
    404              }
    405            }
   \                     ??closeInactiveTunnels_3: (+1)
   \   00000080   0x1C64             ADDS     R4,R4,#+1
   \   00000082   0x2C08             CMP      R4,#+8
   \   00000084   0xDBD7             BLT.N    ??closeInactiveTunnels_2
    406          
    407            if (delay != MAX_INT32U_VALUE) {
   \   00000086   0xF119 0x0F01      CMN      R9,#+1
   \   0000008A   0xD005             BEQ.N    ??closeInactiveTunnels_1
    408              emberAfScheduleServerTick(endpoint,
    409                                        ZCL_TUNNELING_CLUSTER_ID,
    410                                        delay * MILLISECOND_TICKS_PER_SECOND);
   \   0000008C   0xEA4F 0x2289      LSL      R2,R9,#+10
   \   00000090   0x4651             MOV      R1,R10
   \   00000092   0x4640             MOV      R0,R8
   \   00000094   0x.... 0x....      BL       emberAfScheduleServerTick
    411            }
    412          }
   \                     ??closeInactiveTunnels_1: (+1)
   \   00000098   0xE8BD 0x87F3      POP      {R0,R1,R4-R10,PC}  ;; return
    413          

   \                                 In section .text, align 2, keep-with-next
    414          void emberAfPluginTunnelingServerToggleBusyCommand(void)
    415          {
   \                     emberAfPluginTunnelingServerToggleBusyCommand: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    416            emberAfTunnelingClusterPrintln("");
   \   00000002   0xF240 0x1401      MOVW     R4,#+257
   \   00000006   0x....             ADR.N    R5,??DataTable27_4  ;; ""
   \   00000008   0x4629             MOV      R1,R5
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0x.... 0x....      BL       emberAfPrintln
    417            if (emberAfPluginTunnelingServerBusyStatus) {
   \   00000010   0x....             LDR.N    R0,??DataTable27_6
   \   00000012   0x7801             LDRB     R1,[R0, #+0]
   \   00000014   0xB121             CBZ.N    R1,??emberAfPluginTunnelingServerToggleBusyCommand_0
    418              emberAfPluginTunnelingServerBusyStatus = FALSE;
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x7001             STRB     R1,[R0, #+0]
    419              emberAfTunnelingClusterPrintln("  NOTE: current status is NOT BUSY (tunneling works)");
   \   0000001A   0x.... 0x....      ADR.W    R1,?_13
   \   0000001E   0xE003             B.N      ??emberAfPluginTunnelingServerToggleBusyCommand_1
    420            } else {
    421              emberAfPluginTunnelingServerBusyStatus = TRUE;
   \                     ??emberAfPluginTunnelingServerToggleBusyCommand_0: (+1)
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x7001             STRB     R1,[R0, #+0]
    422              emberAfTunnelingClusterPrintln("  NOTE: current status is BUSY (tunneling won't work)");
   \   00000024   0x.... 0x....      ADR.W    R1,?_14
   \                     ??emberAfPluginTunnelingServerToggleBusyCommand_1: (+1)
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       emberAfPrintln
    423            }
    424            emberAfTunnelingClusterPrintln("");
   \   0000002E   0x4629             MOV      R1,R5
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000036   0x.... 0x....      B.W      emberAfPrintln
    425            emberAfTunnelingClusterFlush();
    426          }
    427          

   \                                 In section .text, align 2, keep-with-next
    428          void emAfPluginTunnelingServerCliPrint(void)
    429          {
   \                     emAfPluginTunnelingServerCliPrint: (+1)
   \   00000000   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
    430            int32u currentTime = emberAfGetCurrentTime();
   \   00000004   0x.... 0x....      BL       emberAfGetCurrentTime
   \   00000008   0x4604             MOV      R4,R0
    431            int8u i;
    432            emberAfTunnelingClusterPrintln("");
   \   0000000A   0xF240 0x1B01      MOVW     R11,#+257
   \   0000000E   0x....             ADR.N    R6,??DataTable27_4  ;; ""
   \   00000010   0x.... 0x....      BL       ?Subroutine5
    433            emberAfTunnelingClusterPrintln("#   client              cep  sep  tid    pid  mfg    age");
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000014   0x.... 0x....      ADR.W    R1,?_15
   \   00000018   0x.... 0x....      ADR.W    R8,?_18
   \   0000001C   0x.... 0x....      ADR.W    R9,?_17
   \   00000020   0x.... 0x....      ADR.W    R10,?_16
   \   00000024   0x.... 0x....      BL       ??Subroutine5_0
    434            emberAfTunnelingClusterFlush();
    435            for (i = 0; i < EMBER_AF_PLUGIN_AURORA_TUNNELING_SERVER_TUNNEL_LIMIT; i++) {
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000028   0x2700             MOVS     R7,#+0
    436              emberAfTunnelingClusterPrint("%x: ", i);
   \                     ??emAfPluginTunnelingServerCliPrint_0: (+1)
   \   0000002A   0x463A             MOV      R2,R7
   \   0000002C   0x4651             MOV      R1,R10
   \   0000002E   0x4658             MOV      R0,R11
   \   00000030   0x.... 0x....      BL       emberAfPrint
    437              if (tunnels[i].clientEndpoint != UNUSED_ENDPOINT_ID) {
   \   00000034   0x....             LDR.N    R0,??DataTable27_5
   \   00000036   0x210C             MOVS     R1,#+12
   \   00000038   0xFB01 0x0507      MLA      R5,R1,R7,R0
   \   0000003C   0x7868             LDRB     R0,[R5, #+1]
   \   0000003E   0x28FF             CMP      R0,#+255
   \   00000040   0xD01A             BEQ.N    ??emAfPluginTunnelingServerCliPrint_1
    438                EmberEUI64 eui64;
    439                emberGetAddressTableRemoteEui64(tunnels[i].addressIndex, eui64);
   \   00000042   0x7828             LDRB     R0,[R5, #+0]
   \   00000044   0xA901             ADD      R1,SP,#+4
   \   00000046   0x.... 0x....      BL       emberGetAddressTableRemoteEui64
    440                emberAfTunnelingClusterDebugExec(emberAfPrintBigEndianEui64(eui64));
   \   0000004A   0x4658             MOV      R0,R11
   \   0000004C   0x.... 0x....      BL       emberAfPrintEnabled
   \   00000050   0xB110             CBZ.N    R0,??emAfPluginTunnelingServerCliPrint_2
   \   00000052   0xA801             ADD      R0,SP,#+4
   \   00000054   0x.... 0x....      BL       emberAfPrintBigEndianEui64
    441                emberAfTunnelingClusterPrint(" 0x%x 0x%x 0x%2x",
    442                                             tunnels[i].clientEndpoint,
    443                                             tunnels[i].serverEndpoint,
    444                                             i);
   \                     ??emAfPluginTunnelingServerCliPrint_2: (+1)
   \   00000058   0x9700             STR      R7,[SP, #+0]
   \   0000005A   0x78AB             LDRB     R3,[R5, #+2]
   \   0000005C   0x786A             LDRB     R2,[R5, #+1]
   \   0000005E   0x4649             MOV      R1,R9
   \   00000060   0x4658             MOV      R0,R11
   \   00000062   0x.... 0x....      BL       emberAfPrint
    445                emberAfTunnelingClusterFlush();
    446                emberAfTunnelingClusterPrint(" 0x%x 0x%2x 0x%4x",
    447                                             tunnels[i].protocolId,
    448                                             tunnels[i].manufacturerCode,
    449                                             currentTime - tunnels[i].lastActive);
   \   00000066   0x68A8             LDR      R0,[R5, #+8]
   \   00000068   0x1A20             SUBS     R0,R4,R0
   \   0000006A   0x9000             STR      R0,[SP, #+0]
   \   0000006C   0x88AB             LDRH     R3,[R5, #+4]
   \   0000006E   0x78EA             LDRB     R2,[R5, #+3]
   \   00000070   0x4641             MOV      R1,R8
   \   00000072   0x4658             MOV      R0,R11
   \   00000074   0x.... 0x....      BL       emberAfPrint
    450                emberAfTunnelingClusterFlush();
    451              }
    452              emberAfTunnelingClusterPrintln("");
   \                     ??emAfPluginTunnelingServerCliPrint_1: (+1)
   \   00000078   0x.... 0x....      BL       ?Subroutine5
    453            }
   \                     ??CrossCallReturnLabel_12: (+1)
   \   0000007C   0x1C7F             ADDS     R7,R7,#+1
   \   0000007E   0x2F08             CMP      R7,#+8
   \   00000080   0xDBD3             BLT.N    ??emAfPluginTunnelingServerCliPrint_0
    454          }
   \   00000082   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x4631             MOV      R1,R6
   \                     ??Subroutine5_0: (+1)
   \   00000002   0x4658             MOV      R0,R11
   \   00000004   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x76 0x75          DC8      "vuv"
   \              0x76 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x5D 0x00          DC8      "]",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \   00000000   0x76 0x75          DC8      0x76, 0x75, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \   00000000   0x76 0x62          DC8      0x76, 0x62, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_4:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_5:
   \   00000000   0x........         DC32     tunnels

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_6:
   \   00000000   0x........         DC32     emberAfPluginTunnelingServerBusyStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_7:
   \   00000000   0x........         DC32     emAfCurrentCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x45 0x52          DC8 "ERR: writing close tunnel timeout 0x%x"
   \              0x52 0x3A    
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x65    
   \              0x20 0x74    
   \              0x75 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x6F 0x75    
   \              0x74 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x52 0x58          DC8 "RX: RequestTunnel 0x%x, 0x%2x, 0x%x, 0x%2x"
   \              0x3A 0x20    
   \              0x52 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x54    
   \              0x75 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x2C 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x2C    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x2C    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x45 0x52          DC8 45H, 52H, 52H, 3AH, 20H, 43H, 6FH, 75H
   \              0x52 0x3A    
   \              0x20 0x43    
   \              0x6F 0x75    
   \   00000008   0x6C 0x64          DC8 6CH, 64H, 20H, 6EH, 6FH, 74H, 20H, 63H
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x63    
   \   00000010   0x72 0x65          DC8 72H, 65H, 61H, 74H, 65H, 20H, 61H, 64H
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x61 0x64    
   \   00000018   0x64 0x72          DC8 64H, 72H, 65H, 73H, 73H, 20H, 74H, 61H
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x74 0x61    
   \   00000020   0x62 0x6C          DC8 62H, 6CH, 65H, 20H, 65H, 6EH, 74H, 72H
   \              0x65 0x20    
   \              0x65 0x6E    
   \              0x74 0x72    
   \   00000028   0x79 0x20          DC8 79H, 20H, 66H, 6FH, 72H, 20H, 6EH, 6FH
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x6E 0x6F    
   \   00000030   0x64 0x65          DC8 64H, 65H, 20H, 30H, 78H, 25H, 32H, 78H
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \   00000038   0x00               DC8 0
   \   00000039   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x45 0x52          DC8 "ERR: EUI64 for node 0x%2x is unknown"
   \              0x52 0x3A    
   \              0x20 0x45    
   \              0x55 0x49    
   \              0x36 0x34    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x6E    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x69 0x73    
   \              0x20 0x75    
   \              0x6E 0x6B    
   \              0x6E 0x6F    
   \              0x77 0x6E    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x52 0x58          DC8 "RX: CloseTunnel 0x%2x"
   \              0x3A 0x20    
   \              0x43 0x6C    
   \              0x6F 0x73    
   \              0x65 0x54    
   \              0x75 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x52 0x58          DC8 "RX: TransferData 0x%2x, ["
   \              0x3A 0x20    
   \              0x54 0x72    
   \              0x61 0x6E    
   \              0x73 0x66    
   \              0x65 0x72    
   \              0x44 0x61    
   \              0x74 0x61    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x2C 0x20    
   \              0x5B 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x52 0x58          DC8 "RX: TransferDataError 0x%2x, 0x%x"
   \              0x3A 0x20    
   \              0x54 0x72    
   \              0x61 0x6E    
   \              0x73 0x66    
   \              0x65 0x72    
   \              0x44 0x61    
   \              0x74 0x61    
   \              0x45 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x2C    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x45 0x52          DC8 "ERR: reading close tunnel timeout 0x%x"
   \              0x52 0x3A    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x65    
   \              0x20 0x74    
   \              0x75 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x6F 0x75    
   \              0x74 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x20 0x20          DC8 20H, 20H, 4EH, 4FH, 54H, 45H, 3AH, 20H
   \              0x4E 0x4F    
   \              0x54 0x45    
   \              0x3A 0x20    
   \   00000008   0x63 0x75          DC8 63H, 75H, 72H, 72H, 65H, 6EH, 74H, 20H
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \   00000010   0x73 0x74          DC8 73H, 74H, 61H, 74H, 75H, 73H, 20H, 69H
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x20 0x69    
   \   00000018   0x73 0x20          DC8 73H, 20H, 4EH, 4FH, 54H, 20H, 42H, 55H
   \              0x4E 0x4F    
   \              0x54 0x20    
   \              0x42 0x55    
   \   00000020   0x53 0x59          DC8 53H, 59H, 20H, 28H, 74H, 75H, 6EH, 6EH
   \              0x20 0x28    
   \              0x74 0x75    
   \              0x6E 0x6E    
   \   00000028   0x65 0x6C          DC8 65H, 6CH, 69H, 6EH, 67H, 20H, 77H, 6FH
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x6F    
   \   00000030   0x72 0x6B          DC8 72H, 6BH, 73H, 29H, 0
   \              0x73 0x29    
   \              0x00         
   \   00000035   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x20 0x20          DC8 20H, 20H, 4EH, 4FH, 54H, 45H, 3AH, 20H
   \              0x4E 0x4F    
   \              0x54 0x45    
   \              0x3A 0x20    
   \   00000008   0x63 0x75          DC8 63H, 75H, 72H, 72H, 65H, 6EH, 74H, 20H
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \   00000010   0x73 0x74          DC8 73H, 74H, 61H, 74H, 75H, 73H, 20H, 69H
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x20 0x69    
   \   00000018   0x73 0x20          DC8 73H, 20H, 42H, 55H, 53H, 59H, 20H, 28H
   \              0x42 0x55    
   \              0x53 0x59    
   \              0x20 0x28    
   \   00000020   0x74 0x75          DC8 74H, 75H, 6EH, 6EH, 65H, 6CH, 69H, 6EH
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x69 0x6E    
   \   00000028   0x67 0x20          DC8 67H, 20H, 77H, 6FH, 6EH, 27H, 74H, 20H
   \              0x77 0x6F    
   \              0x6E 0x27    
   \              0x74 0x20    
   \   00000030   0x77 0x6F          DC8 77H, 6FH, 72H, 6BH, 29H, 0
   \              0x72 0x6B    
   \              0x29 0x00    
   \   00000036   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x23 0x20          DC8 23H, 20H, 20H, 20H, 63H, 6CH, 69H, 65H
   \              0x20 0x20    
   \              0x63 0x6C    
   \              0x69 0x65    
   \   00000008   0x6E 0x74          DC8 6EH, 74H, 20H, 20H, 20H, 20H, 20H, 20H
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \   00000010   0x20 0x20          DC8 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \   00000018   0x63 0x65          DC8 63H, 65H, 70H, 20H, 20H, 73H, 65H, 70H
   \              0x70 0x20    
   \              0x20 0x73    
   \              0x65 0x70    
   \   00000020   0x20 0x20          DC8 20H, 20H, 74H, 69H, 64H, 20H, 20H, 20H
   \              0x74 0x69    
   \              0x64 0x20    
   \              0x20 0x20    
   \   00000028   0x20 0x70          DC8 20H, 70H, 69H, 64H, 20H, 20H, 6DH, 66H
   \              0x69 0x64    
   \              0x20 0x20    
   \              0x6D 0x66    
   \   00000030   0x67 0x20          DC8 67H, 20H, 20H, 20H, 20H, 61H, 67H, 65H
   \              0x20 0x20    
   \              0x20 0x61    
   \              0x67 0x65    
   \   00000038   0x00               DC8 0
   \   00000039   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x25 0x78          DC8 "%x: "
   \              0x3A 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x20 0x30          DC8 " 0x%x 0x%x 0x%2x"
   \              0x78 0x25    
   \              0x78 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x20 0x30          DC8 " 0x%x 0x%2x 0x%4x"
   \              0x78 0x25    
   \              0x78 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x30 0x78    
   \              0x25 0x34    
   \              0x78 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x76 0x75          DC8 "vuv"
   \              0x76 0x00    

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_7:
   \   00000000   0x5D 0x00          DC8 "]"

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x76 0x75          DC8 "vu"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x76 0x62          DC8 "vb"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_12:
   \   00000000   0x00               DC8 ""

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   closeInactiveTunnels
        40   -> emberAfGetCurrentTime
        40   -> emberAfPluginAuroraTunnelingServerTunnelClosedCallback
        40   -> emberAfPrintln
        40   -> emberAfReadServerAttribute
        40   -> emberAfRemoveAddressTableEntry
        40   -> emberAfScheduleServerTick
      48   emAfPluginTunnelingServerCliPrint
        48   -> emberAfGetCurrentTime
        48   -> emberAfPrint
        48   -> emberAfPrintBigEndianEui64
        48   -> emberAfPrintEnabled
        48   -> emberAfPrintln
        48   -> emberGetAddressTableRemoteEui64
      16   emberAfPluginTunnelingServerToggleBusyCommand
         0   -> emberAfPrintln
        16   -> emberAfPrintln
      24   emberAfPluginTunnelingServerTransferData
        24   -> emberAfFillExternalBuffer
        24   -> emberAfGetCommandApsFrame
        24   -> emberAfGetCurrentTime
        24   -> emberAfSendCommandUnicast
        24   -> emberAfSetCommandEndpoints
      24   emberAfTunnelingClusterCloseTunnelCallback
        24   -> emberAfGetAddressIndex
        24   -> emberAfPluginAuroraTunnelingServerTunnelClosedCallback
        24   -> emberAfPrintln
        24   -> emberAfScheduleServerTick
        24   -> emberAfSendImmediateDefaultResponse
        24   -> serverFindTunnel
      56   emberAfTunnelingClusterRequestTunnelCallback
        56   -> closeInactiveTunnels
        56   -> emberAfAddAddressTableEntry
        56   -> emberAfFillExternalBuffer
        56   -> emberAfGetCommandApsFrame
        56   -> emberAfGetCurrentTime
        56   -> emberAfPluginAuroraTunnelingServerIsProtocolSupportedCallback
        56   -> emberAfPluginAuroraTunnelingServerTunnelOpenedCallback
        56   -> emberAfPrintln
        56   -> emberAfSendResponse
        56   -> emberLookupEui64ByNodeId
       0   emberAfTunnelingClusterServerAttributeChangedCallback
         0   -> closeInactiveTunnels
      16   emberAfTunnelingClusterServerInitCallback
        16   -> emberAfPrintln
        16   -> emberAfWriteServerAttribute
       0   emberAfTunnelingClusterServerTickCallback
         0   -> closeInactiveTunnels
      40   emberAfTunnelingClusterTransferDataClientToServerCallback
        40   -> emberAfFillExternalBuffer
        40   -> emberAfGetAddressIndex
        40   -> emberAfGetCommandApsFrame
        40   -> emberAfGetCurrentTime
        40   -> emberAfPluginAuroraTunnelingServerDataReceivedCallback
        40   -> emberAfPrint
        40   -> emberAfPrintBuffer
        40   -> emberAfPrintln
        40   -> emberAfSendImmediateDefaultResponse
        40   -> emberAfSendResponse
        40   -> serverFindTunnel
      24   emberAfTunnelingClusterTransferDataErrorClientToServerCallback
        24   -> emberAfGetAddressIndex
        24   -> emberAfPluginAuroraTunnelingServerDataErrorCallback
        24   -> emberAfPrintln
        24   -> emberAfSendImmediateDefaultResponse
        24   -> serverFindTunnel
      12   serverFindTunnel


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ??DataTable27_3
       4  ??DataTable27_4
       4  ??DataTable27_5
       4  ??DataTable27_6
       4  ??DataTable27_7
      10  ?Subroutine0
      10  ?Subroutine1
       8  ?Subroutine2
      16  ?Subroutine3
      12  ?Subroutine4
       8  ?Subroutine5
      40  ?_0
      44  ?_1
       4  ?_10
      40  ?_11
       1  ?_12
      56  ?_13
      56  ?_14
      60  ?_15
       8  ?_16
      20  ?_17
      20  ?_18
      60  ?_2
      40  ?_3
       4  ?_4
      24  ?_5
      28  ?_6
       2  ?_7
       4  ?_8
      36  ?_9
     156  closeInactiveTunnels
     134  emAfPluginTunnelingServerCliPrint
       1  emberAfPluginTunnelingServerBusyStatus
      58  emberAfPluginTunnelingServerToggleBusyCommand
      82  emberAfPluginTunnelingServerTransferData
      64  emberAfTunnelingClusterCloseTunnelCallback
     266  emberAfTunnelingClusterRequestTunnelCallback
      10  emberAfTunnelingClusterServerAttributeChangedCallback
      64  emberAfTunnelingClusterServerInitCallback
       2  emberAfTunnelingClusterServerTickCallback
     142  emberAfTunnelingClusterTransferDataClientToServerCallback
      46  emberAfTunnelingClusterTransferDataErrorClientToServerCallback
      52  serverFindTunnel
      96  tunnels

 
    97 bytes in section .bss
    15 bytes in section .rodata
 1 704 bytes in section .text
 
 1 704 bytes of CODE  memory
    15 bytes of CONST memory
    97 bytes of DATA  memory

Errors: none
Warnings: none
