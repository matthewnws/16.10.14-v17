###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:10
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\security\crypto-state.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\security\crypto-state.c" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"crypto-state.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\security\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\crypto-state.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\crypto-state.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\security\crypto-state.c
      1          // *****************************************************************************
      2          // * crypto-state.c
      3          // *
      4          // * This file records the state of crypto operations so that the application
      5          // * can defer processing until after crypto operations have completed.
      6          // *
      7          // * Copyright 2010 by Ember Corporation. All rights reserved.              *80*
      8          // *****************************************************************************
      9          
     10          
     11          #include "app/framework/util/common.h"
     12          #include "crypto-state.h"
     13          
     14          //------------------------------------------------------------------------------
     15          

   \                                 In section .bss, align 1
     16          static EmAfCryptoStatus cryptoStatus = EM_AF_NO_CRYPTO_OPERATION;
   \                     cryptoStatus:
   \   00000000                      DS8 1
     17          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_SECURITY)
     18          static PGM_P cryptoStatusText[] = EM_AF_CRYPTO_STATUS_TEXT;
     19          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_SECURITY)
     20          
     21          
     22          // If we are on a host micro, there is the possibility that a crypto
     23          // operation ends on the NCP and we fail to hear about it, in this case
     24          // we need a timeout to safeguard against this flag getting locked
     25          #if defined(EZSP_HOST)
     26          EmberEventControl emAfCryptoOperationTimeoutEventControl;
     27          void emAfCryptoOperationTimeoutEvent(void) {
     28            if (cryptoStatus == EM_AF_CRYPTO_OPERATION_IN_PROGRESS)
     29              emAfSetCryptoStatus(EM_AF_NO_CRYPTO_OPERATION);
     30          }
     31          EmberEventData emAfCryptoEvents[] = {
     32            {&emAfCryptoOperationTimeoutEventControl, emAfCryptoOperationTimeoutEvent},
     33            {NULL, NULL}
     34          };
     35          #endif //EZSP_HOST
     36          
     37          
     38          
     39          
     40          //------------------------------------------------------------------------------
     41          

   \                                 In section .text, align 2, keep-with-next
     42          EmAfCryptoStatus emAfGetCryptoStatus(void)
     43          {
     44          #if defined(EZSP_HOST)
     45            // Everytime someone asks for the crypto state, we check our
     46            // crypto timeout
     47            emberRunEvents(emAfCryptoEvents);
     48          #endif //EZSP_HOST
     49          
     50            return cryptoStatus;
   \                     emAfGetCryptoStatus: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
     51          }
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void emAfSetCryptoStatus(EmAfCryptoStatus newStatus)
     54          {
     55            cryptoStatus = newStatus;
   \                     emAfSetCryptoStatus: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable1
   \   00000002   0x7008             STRB     R0,[R1, #+0]
     56            emberAfSecurityPrintln("Crypto state: %p", cryptoStatusText[cryptoStatus]);
     57          
     58          #if defined(EZSP_HOST)
     59            // If crypto is starting, we set the timeout, otherwise we cancel it.
     60            if (cryptoStatus == EM_AF_CRYPTO_OPERATION_IN_PROGRESS)
     61              emberEventControlSetDelayMS(emAfCryptoOperationTimeoutEventControl, 
     62          				CRYPTO_OPERATION_TIMEOUT_MS);
     63            else
     64              emberEventControlSetInactive(emAfCryptoOperationTimeoutEventControl);
     65          #endif //EZSP_HOST
     66          
     67          }
   \   00000004   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     cryptoStatus

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emAfGetCryptoStatus
       0   emAfSetCryptoStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       1  cryptoStatus
       6  emAfGetCryptoStatus
       6  emAfSetCryptoStatus

 
  1 byte  in section .bss
 16 bytes in section .text
 
 16 bytes of CODE memory
  1 byte  of DATA memory

Errors: none
Warnings: none
