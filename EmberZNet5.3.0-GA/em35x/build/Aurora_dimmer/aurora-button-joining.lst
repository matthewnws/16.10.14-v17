###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:33:54
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"aurora-button-joining.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-button-joining.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\aurora-button-joining.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c
      1          //
      2          
      3          // This callback file is created for your convenience. You may add application code
      4          // to this file. If you regenerate this file over a previous version, the previous
      5          // version will be overwritten and any code you have added will be lost.
      6          #include <string.h>
      7          
      8          #include "app/framework/include/af.h"
      9          #include "app/framework/include/af-types.h"
     10          #include "app/framework/util/af-main.h"
     11          #include "app/framework/util/service-discovery.h"
     12          #include "app/util/common/form-and-join.h"
     13          #include "app/util/zigbee-framework/zigbee-device-common.h"
     14          #include "debug-printing.h"
     15          #include "aurora-button-joining.h"
     16          #include "aurora-button-joining-hal.h"
     17          //#include "app/builder/Aurora_dimmer/Aurora_dimmer_board_1.h
     18          
     19          #define REQUEST_ROUTE_TIMER                 8 // 240
     20          #define MAX_ROUTE_REQUESTS                  10
     21          
     22          // Custom event stubs. Custom events will be run along with all other events in the
     23          // application framework. They should be managed using the Ember Event API
     24          // documented in stack/include/events.h
     25          
     26          // Event control struct declarations
     27          EmberEventControl emberAfPluginAuroraButtonJoiningButtonDownEventControl;
     28          EmberEventControl emberAfPluginAuroraButtonJoiningButtonUpEventControl;
     29          EmberEventControl emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl;
     30          EmberEventControl emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl;
     31          EmberEventControl emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl;
     32          EmberEventControl emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl;
     33          EmberEventControl emberAfPluginAuroraButtonJoiningLedEventEventControl;
     34          EmberEventControl routeRequestTimerEventControl;
     35          EmberEventControl stackStatusEventControl;
     36          
     37          // Event function forward declarations
     38          void emberAfPluginAuroraButtonJoiningButtonDownEventHandler(void); 
     39          void emberAfPluginAuroraButtonJoiningButtonUpEventHandler(void); 
     40          void emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler(void); 
     41          void emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler(void); 
     42          void emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler(void); 
     43          void emberAfPluginAuroraButtonJoiningLedEventEventHandler(void); 
     44          void emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler(void);
     45          
     46          void emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(int8u newState, boolean set);
     47          
     48          static void emberAfPluginAuroraButtonJoiningJoinNetwork(void);
     49          static void emberAfPluginAuroraButtonJoiningPermitJoiningNetwork(void);
     50          static void emberAfPluginAuroraButtonJoiningLeaveNetwork(void);
     51          static void emberAfPluginAuroraButtonJoiningCheckButtonSequence(void);
     52          static void emberAfPluginAuroraButtonJoiningHandleButtonPress(int32u buttonDownTime);
     53          static void emberAfPluginAuroraButtonJoiningFlashLed(t_networkState newState);
     54          static t_ledSettings *getLedSettings(t_networkState networkState);
     55          

   \                                 In section .rodata, align 4, keep-with-next
     56          EmberEventData events[] =
   \                     events:
   \   00000000   0x........         DC32 emberAfPluginAuroraButtonJoiningLedEventEventControl
   \   00000004   0x........         DC32 emberAfPluginAuroraButtonJoiningLedEventEventHandler, 0H, 0H
   \              0x00000000   
   \              0x00000000   
     57           {
     58             { &emberAfPluginAuroraButtonJoiningLedEventEventControl,   emberAfPluginAuroraButtonJoiningLedEventEventHandler },
     59             { NULL, NULL }                            // terminator
     60           };
     61          
     62          
     63          static boolean ledsCurrentStates[] = {LED_OFF, LED_OFF};
     64          t_networkState currentNetworkState = LED_NWK_UNAVAILABLE;
     65          

   \                                 In section .text, align 4, keep-with-next
     66          const t_ledSettings ledSettings[] = {
   \                     ledSettings:
   \   00000000   0x00 0x0C          DC8 0, 12, 2, 11, 0, 3, 12, 1, 11, 0, 2, 12, 0, 11, 0, 4, 12, 0, 11, 0
   \              0x02 0x0B    
   \              0x00 0x03    
   \              0x0C 0x01    
   \              0x0B 0x00    
   \              0x02 0x0C    
   \              0x00 0x0B    
   \              0x00 0x04    
   \              0x0C 0x00    
   \              0x0B 0x00    
   \   00000014   0x01 0x0C          DC8 1, 12, 0, 11, 2, 7, 12, 0, 11, 2, 0, 0
   \              0x00 0x0B    
   \              0x02 0x07    
   \              0x0C 0x00    
   \              0x0B 0x02    
   \              0x00 0x00    
     67              {LED_NWK_UNAVAILABLE,   {{LED_RED, LED_FLASH},  {LED_GREEN, LED_OFF}}},
     68              {LED_NOT_JOINED,        {{LED_RED, LED_ON},     {LED_GREEN, LED_OFF}}},
     69              {LED_JOINED,            {{LED_RED, LED_OFF},    {LED_GREEN, LED_OFF}}},
     70              {LED_PERMIT_JOINING,    {{LED_RED, LED_OFF},    {LED_GREEN, LED_OFF}}},
     71              {LED_JOINING,           {{LED_RED, LED_OFF},    {LED_GREEN, LED_FLASH}}},
     72              {LED_IDENTIFY,          {{LED_RED, LED_OFF},    {LED_GREEN, LED_FLASH}}}
     73          };
     74          
     75          #define MAX_LED_STATES          sizeof(ledSettings) / sizeof(t_ledSettings)
     76          

   \                                 In section .data, align 4
     77          static t_buttonSeqence buttonSequence[] = {
   \                     buttonSequence:
   \   00000000   0x01 0x00          DC8 1, 0
   \   00000002   0x07D0 0x0000      DC16 2000, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000       
   \   0000000C   0x........         DC32 emberAfPluginAuroraButtonJoiningJoinNetwork
   \   00000010   0x05 0x00          DC8 5, 0
   \   00000012   0x03E8 0x03E8      DC16 1000, 1000, 1000, 1000, 1000
   \              0x03E8 0x03E8
   \              0x03E8       
   \   0000001C   0x........         DC32 emberAfPluginAuroraButtonJoiningLeaveNetwork
   \   00000020   0x02 0x00          DC8 2, 0
   \   00000022   0x03E8 0x03E8      DC16 1000, 1000, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000       
   \   0000002C   0x........         DC32 emberAfPluginAuroraButtonJoiningPermitJoiningNetwork

   \                                 In section .bss, align 4
     78            {1, {2000, 0, 0, 0, 0}, emberAfPluginAuroraButtonJoiningJoinNetwork},                         // Join
     79            {5, {1000, 1000, 1000, 1000, 1000}, emberAfPluginAuroraButtonJoiningLeaveNetwork},            // Leave
     80            {2, {1000, 1000, 0, 0, 0}, emberAfPluginAuroraButtonJoiningPermitJoiningNetwork}              // Identify / Permit Joining
     81          };
     82          
     83          static int16u buttonDownTimes[BUTTON_MAX_PRESSES];
     84          static int8u buttonDownCount;
   \                     buttonDownCount:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 1
   \   00000003                      DS8 1
   \                     emberAfPluginAuroraButtonJoiningButtonDownEventControl:
   \   00000004                      DS8 8
   \                     emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl:
   \   0000000C                      DS8 8
   \                     emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl:
   \   00000014                      DS8 8
   \                     emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl:
   \   0000001C                      DS8 8
   \   00000024                      DS8 12
   \   00000030                      DS8 4

   \                                 In section .bss, align 4
   \                     emberAfPluginAuroraButtonJoiningButtonUpEventControl:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     currentNetworkState:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \                     emberAfPluginAuroraButtonJoiningLedEventEventControl:
   \   00000004                      DS8 8

   \                                 In section .bss, align 4
   \                     routeRequestTimerEventControl:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     85          static boolean buttonDownDetectStarted = FALSE;
     86          static boolean buttonUpDetectStarted = FALSE;
     87          static int32u buttonDownTime = 0;
     88          static boolean buttonSequenceStarted = FALSE;
     89          static boolean joiningFLag = FALSE;
   \                     joiningFLag:
   \   00000000                      DS8 1
   \   00000001                      DS8 3
   \                     stackStatusEventControl:
   \   00000004                      DS8 8
     90          static int8u deviceStateFlags = DEVICE_STATE_CLEAR | DEVICE_STATE_NETWORK_UNAVAILABLE;  
     91          
     92          char deviceStateText[][20] = {
     93               "Joining",
     94               "Joined",
     95               "Identifying",
     96               "Permit Joining",
     97               "Network Unavailable"
     98               };
     99          
    100          void emRadioSetEdCcaThreshold(int8s threshold);     // ember provided
    101          
    102          
    103          
    104          void setRadioPowerAndMode(void);
    105          
    106          
    107          /** @brief Button pressed event
    108           *  
    109           *  This event handler is called when the button is pressed. This starts the
    110           *  debounce timer.
    111           * 
    112           * @param none
    113           */

   \                                 In section .text, align 2, keep-with-next
    114          void emberAfPluginAuroraButtonJoiningButtonDownEventHandler(void)
    115          {
   \                     emberAfPluginAuroraButtonJoiningButtonDownEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    116            // Deactivate the event
    117            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonDownEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000006   0x7120             STRB     R0,[R4, #+4]
    118          
    119            // See if we have already started button detect
    120            if (!buttonDownDetectStarted) 
   \   00000008   0x7860             LDRB     R0,[R4, #+1]
   \   0000000A   0xB950             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonDownEve_0
    121            {
    122              // Set event for the debounce time
    123              emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl, BUTTON_DEBOUNCE_TIME);
   \   0000000C   0x2132             MOVS     R1,#+50
   \   0000000E   0xF104 0x000C      ADD      R0,R4,#+12
   \   00000012   0x.... 0x....      BL       emEventControlSetDelayMS
    124              buttonDownDetectStarted = TRUE;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x7060             STRB     R0,[R4, #+1]
    125          
    126              if (!buttonSequenceStarted) 
   \   0000001A   0x78E0             LDRB     R0,[R4, #+3]
   \   0000001C   0xB908             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonDownEve_0
    127              {
    128                buttonSequenceStarted = TRUE;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x70E0             STRB     R0,[R4, #+3]
    129              }
    130            } 
    131          }
   \                     ??emberAfPluginAuroraButtonJoiningButtonDownEve_0: (+1)
   \   00000022   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x.... 0x....      LDR.W    R4,??DataTable36_3
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x4770             BX       LR
    132          
    133          /** @brief Debounce button press
    134           *  
    135           *  This event handler is called when the button is pressed. This debounces 
    136           *  the button press and starts a timer to measure the length of time the 
    137           *  button is pressed for.
    138           * 
    139           * @param none
    140           */

   \                                 In section .text, align 2, keep-with-next
    141          void emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler(void)
    142          {
   \                     emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    143            boolean buttonStateNow;
    144          
    145            // Deavtivate the event
    146            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000006   0x7320             STRB     R0,[R4, #+12]
    147          
    148            // Cancel the end of sequence timeout since we have a new button press
    149            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl);
   \   00000008   0x7720             STRB     R0,[R4, #+28]
    150          
    151            // Get the current state of the input and check to confirm button press
    152            buttonStateNow = buttonGetState();
    153            if (buttonStateNow == BUTTON_PRESSED) 
   \   0000000A   0x.... 0x....      BL       buttonGetState
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xD102             BNE.N    ??emberAfPluginAuroraButtonJoiningButtonDownDeb_0
    154            {
    155              buttonDownTime = halCommonGetInt32uMillisecondTick();
   \   00000012   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000016   0x6320             STR      R0,[R4, #+48]
    156            }
    157          
    158            // Indicate we are not starting detection
    159            buttonDownDetectStarted = FALSE;
   \                     ??emberAfPluginAuroraButtonJoiningButtonDownDeb_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x7060             STRB     R0,[R4, #+1]
    160          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    161          
    162          /** @brief Button released event
    163           *  
    164           *  This event handler is called when the button is released. This starts the
    165           *  debounce timer.
    166           * 
    167           * @param none
    168           */

   \                                 In section .text, align 2, keep-with-next
    169          void emberAfPluginAuroraButtonJoiningButtonUpEventHandler(void)
    170          {
   \                     emberAfPluginAuroraButtonJoiningButtonUpEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    171            // Deactivate the event
    172            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonUpEventControl);
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable36_2
    173          
    174            // If we are not already detecting button release set debounce delayed event
    175            if (!buttonUpDetectStarted) 
   \   00000006   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_10: (+1)
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
   \   0000000C   0x78A0             LDRB     R0,[R4, #+2]
   \   0000000E   0xB930             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonUpEvent_0
    176            {
    177              emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl, BUTTON_DEBOUNCE_TIME);
   \   00000010   0x2132             MOVS     R1,#+50
   \   00000012   0xF104 0x0014      ADD      R0,R4,#+20
   \   00000016   0x.... 0x....      BL       emEventControlSetDelayMS
    178              buttonUpDetectStarted = TRUE;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x70A0             STRB     R0,[R4, #+2]
    179            }
    180          }
   \                     ??emberAfPluginAuroraButtonJoiningButtonUpEvent_0: (+1)
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    181          
    182          /** @brief Debounce button release
    183           *  
    184           *  This debounces the button release and works out the time the button was pressed.
    185           *  It calls emberAfPluginAuroraButtonJoiningHandleButtonPress() to record the button press.
    186           * 
    187           * @param none
    188           */

   \                                 In section .text, align 2, keep-with-next
    189          void emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler(void)
    190          {
   \                     emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    191            boolean buttonStateNow;
    192          
    193            // Deactivate the event
    194            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000006   0x7520             STRB     R0,[R4, #+20]
    195          
    196            // Get the current state of the input and check to confirm button release
    197            buttonStateNow = buttonGetState();
    198            if (buttonStateNow == BUTTON_RELEASED) 
   \   00000008   0x.... 0x....      BL       buttonGetState
   \   0000000C   0xB9C0             CBNZ.N   R0,??emberAfPluginAuroraButtonJoiningButtonUpDebou_0
    199            {
    200              // Work out the duration of the button press
    201              buttonDownTime = halCommonGetInt32uMillisecondTick() - buttonDownTime;
   \   0000000E   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000012   0x6B21             LDR      R1,[R4, #+48]
   \   00000014   0x1A42             SUBS     R2,R0,R1
   \   00000016   0x6322             STR      R2,[R4, #+48]
    202              
    203              emberAfDebugPrint("Button release (%d)\r\n", buttonDownTime);
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      ADR.W    R1,?_0
   \   0000001E   0x.... 0x....      BL       emberAfPrint
    204             
    205              // Record the button press
    206              emberAfPluginAuroraButtonJoiningHandleButtonPress(buttonDownTime);    
   \   00000022   0x7820             LDRB     R0,[R4, #+0]
   \   00000024   0x2805             CMP      R0,#+5
   \   00000026   0xDA05             BGE.N    ??emberAfPluginAuroraButtonJoiningButtonUpDebou_1
   \   00000028   0x6B22             LDR      R2,[R4, #+48]
   \   0000002A   0xEB04 0x0140      ADD      R1,R4,R0, LSL #+1
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \   00000030   0x848A             STRH     R2,[R1, #+36]
   \   00000032   0x7020             STRB     R0,[R4, #+0]
   \                     ??emberAfPluginAuroraButtonJoiningButtonUpDebou_1: (+1)
   \   00000034   0xF44F 0x61FA      MOV      R1,#+2000
   \   00000038   0xF104 0x001C      ADD      R0,R4,#+28
   \   0000003C   0x.... 0x....      BL       emEventControlSetDelayMS
    207            }
    208          
    209            buttonUpDetectStarted = FALSE;
   \                     ??emberAfPluginAuroraButtonJoiningButtonUpDebou_0: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x70A0             STRB     R0,[R4, #+2]
    210          }
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
    211          
    212          
    213          /** @brief Records the button pressed time
    214           *  
    215           *  The time is recorded in an array and a timer to detect 
    216           *  the end of the button sequence is started.
    217           *
    218           * @param buttonDownTime - the time the button was pressed
    219           */
    220          static void emberAfPluginAuroraButtonJoiningHandleButtonPress(int32u buttonDownTime)
    221          {
    222            // Make sure we don't overrun the button presses array
    223            if (buttonDownCount < MAX_BUTTON_PRESSES) 
    224            {
    225          
    226              // Record the button press duration and count it
    227              buttonDownTimes[buttonDownCount] = buttonDownTime;
    228              buttonDownCount++;
    229            }
    230            
    231            // Set delayed event for the end of sequence
    232            emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl, BUTTON_UP_END_OF_SEQUENCE_TIMEOUT);
    233          }
    234          
    235          /** @brief End of button press sequence
    236           *  
    237           *  This is called when the end of sequence timer expires. It calls the 
    238           *  emberAfPluginAuroraButtonJoiningCheckButtonSequence()function to see if is a valid sequence and
    239           *  then resets the sequence recording data.
    240           *
    241           * @param none
    242           */

   \                                 In section .text, align 2, keep-with-next
    243          void emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler(void)
    244          {
   \                     emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    245            //emberAfDebugPrint("End sequence\r\n");
    246            
    247            // Deactivate the event
    248            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl);
   \   00000002   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_12: (+1)
   \   00000006   0x7720             STRB     R0,[R4, #+28]
    249          
    250            // Check the sequence to see if it matches any pre defined ones
    251            emberAfPluginAuroraButtonJoiningCheckButtonSequence();
   \   00000008   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningCheckButtonSequence
    252            
    253            // Reset the keypress detector for the next sequence
    254            memset(buttonDownTimes, 0, sizeof(buttonDownTimes));
   \   0000000C   0x210A             MOVS     R1,#+10
   \   0000000E   0xF104 0x0024      ADD      R0,R4,#+36
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
    255            buttonDownTime = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x6320             STR      R0,[R4, #+48]
    256            buttonDownCount = 0;
   \   0000001A   0x7020             STRB     R0,[R4, #+0]
    257          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    258          
    259          /** @brief Check for valid button sequence
    260           *  
    261           *  The set of valid button sequences is stored in buttonSequence array.
    262           *  The buttonDownTimes array is compared with the buttonSequence array. Time tolerances are 
    263           *  taken into account. If there is a match, the appropriate function is called. 
    264           *  If not the sequence is ignored.
    265           *
    266           * @param none
    267           */

   \                                 In section .text, align 2, keep-with-next
    268          static void emberAfPluginAuroraButtonJoiningCheckButtonSequence(void) 
    269          {
   \                     emberAfPluginAuroraButtonJoiningCheckButtonSequence: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    270            int8u sequenceIndex;
    271            int8u index = 0;
    272            boolean sequenceMatch;
    273            
    274            // Iterate over the defined sequences
    275            for (sequenceIndex = 0; sequenceIndex < MAX_BUTTON_SEQUENCES; sequenceIndex++) 
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable36_4
    276            {
    277              sequenceMatch = TRUE;
    278          
    279              // Iterate over the button press times
    280              for (index = 0; index < buttonSequence[sequenceIndex].presses; index++) 
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_0: (+1)
   \   00000008   0x0113             LSLS     R3,R2,#+4
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x181C             ADDS     R4,R3,R0
   \   0000000E   0xE001             B.N      ??emberAfPluginAuroraButtonJoiningCheckButtonSe_1
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_2: (+1)
   \   00000010   0x1C49             ADDS     R1,R1,#+1
   \   00000012   0xB2C9             UXTB     R1,R1
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_1: (+1)
   \   00000014   0x5C1D             LDRB     R5,[R3, R0]
   \   00000016   0x42A9             CMP      R1,R5
   \   00000018   0xDA19             BGE.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_3
   \   0000001A   0x.... 0x....      LDR.W    R5,??DataTable36_3
   \   0000001E   0xEB05 0x0541      ADD      R5,R5,R1, LSL #+1
   \   00000022   0x8CAD             LDRH     R5,[R5, #+36]
   \   00000024   0xB155             CBZ.N    R5,??emberAfPluginAuroraButtonJoiningCheckButtonSe_4
   \   00000026   0xEB04 0x0641      ADD      R6,R4,R1, LSL #+1
   \   0000002A   0x8876             LDRH     R6,[R6, #+2]
   \   0000002C   0xF5A6 0x777A      SUB      R7,R6,#+1000
   \   00000030   0x42BD             CMP      R5,R7
   \   00000032   0xDB03             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_4
   \   00000034   0xF506 0x767A      ADD      R6,R6,#+1000
   \   00000038   0x42B5             CMP      R5,R6
   \   0000003A   0xDBE9             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_2
    281              { 
    282                // If the time is outside the defined time go to the next sequence
    283                if ((buttonDownTimes[index] == 0) || 
    284                    (!((buttonDownTimes[index] >= buttonSequence[sequenceIndex].downTime[index] - BUTTON_PRESS_MINUS_TOLERANCE) && 
    285                    (buttonDownTimes[index] < buttonSequence[sequenceIndex].downTime[index] + BUTTON_PRESS_PLUS_TOLERANCE)))) 
    286                { 
    287                  sequenceMatch = FALSE;
    288                  break;
    289                } 
    290              }
    291          
    292              // If we have found a match exit the loop
    293              if (sequenceMatch) 
    294              {
    295                break;
    296              }
    297            }
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_4: (+1)
   \   0000003C   0x1C52             ADDS     R2,R2,#+1
   \   0000003E   0xB2D2             UXTB     R2,R2
   \   00000040   0x2A04             CMP      R2,#+4
   \   00000042   0xDBE1             BLT.N    ??emberAfPluginAuroraButtonJoiningCheckButtonSe_0
    298          
    299            // If we have a match, call the appropriate function
    300            if (sequenceMatch) 
    301            {
    302              emberAfDebugPrint("Match: %d\r\n", sequenceIndex);
    303              buttonSequence[sequenceIndex].buttonFunc();
    304            } 
    305            else 
    306            {
    307              emberAfDebugPrint("No match\r\n");
   \   00000044   0x.... 0x....      ADR.W    R1,?_2
   \   00000048   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000004C   0x....             B.N      ?Subroutine0
    308            }
   \                     ??emberAfPluginAuroraButtonJoiningCheckButtonSe_3: (+1)
   \   0000004E   0x.... 0x....      ADR.W    R1,?_1
   \   00000052   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000056   0x68E0             LDR      R0,[R4, #+12]
   \   00000058   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \   0000005C   0x4700             BX       R0
    309          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrint

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrint
    310          
    311          /** @brief Join a network
    312           *  
    313           *  Start the joining process. Flashes the led to indicate this and 
    314           *  sets the joining flag to prevent interruption of the joining process
    315           *  by button presses
    316           *
    317           * @param none
    318           */

   \                                 In section .text, align 2, keep-with-next
    319          static void emberAfPluginAuroraButtonJoiningJoinNetwork(void)
    320          {
   \                     emberAfPluginAuroraButtonJoiningJoinNetwork: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    321            emberAfDebugPrint("Find joinable networks (%x)\r\n", emberNetworkState());
   \   00000002   0x.... 0x....      BL       emberNetworkState
   \   00000006   0x4602             MOV      R2,R0
   \   00000008   0x.... 0x....      ADR.W    R1,?_3
   \   0000000C   0x.... 0x....      BL       ?Subroutine1
    322          
    323            if ((emberNetworkState() == EMBER_NO_NETWORK) && !joiningFLag) 
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000010   0x.... 0x....      BL       emberNetworkState
   \   00000014   0x....             LDR.N    R1,??DataTable36_5
   \   00000016   0x780A             LDRB     R2,[R1, #+0]
   \   00000018   0x4310             ORRS     R0,R2,R0
   \   0000001A   0xBF1C             ITT      NE 
    324            {
    325              joiningFLag = TRUE;
    326              
    327              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINING, DEVICE_STATE_FLAGS_SET);
    328          
    329              // Searches for and joins network
    330              emberAfStartSearchForJoinableNetwork();
    331              
    332              emberAfCorePrintln("%p: join", "BUTTON\r\n");
    333            } 
    334            else 
    335            {
    336              emberAfPluginAuroraButtonJoiningPermitJoiningNetwork();
   \   0000001C   0xE8BD 0x4001      POPNE    {R0,LR}
   \   00000020   0x.... 0x....      BNE.W    emberAfPluginAuroraButtonJoiningPermitJoiningNetwork
    337            }
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x7008             STRB     R0,[R1, #+0]
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
   \   0000002E   0x.... 0x....      BL       emberAfStartSearchForJoinableNetworkCallback
   \   00000032   0xE8BD 0x4008      POP      {R3,LR}
   \   00000036   0x.... 0x....      ADR.W    R2,?_5
   \   0000003A   0x.... 0x....      ADR.W    R1,?_4
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x.... 0x....      B.W      emberAfPrintln
    338          }
    339          
    340          /** @brief Clear the joining flag
    341           *  
    342           *  Called from emberAfPluginNetworkFindFinishedCallback(). Indicates that 
    343           *  the joining process is finished.
    344           *
    345           * @param none
    346           */

   \                                 In section .text, align 2, keep-with-next
    347          void emberAfPluginAuroraButtonJoiningClearJoiningFlag(void)
    348          {
    349            joiningFLag = FALSE;
   \                     emberAfPluginAuroraButtonJoiningClearJoiningFlag: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable36_5
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    350          }
   \   00000006   0x4770             BX       LR               ;; return
    351          
    352          /** @brief Permit joining
    353           *  
    354           *  Broadcasts a permit join request. Flashes the led to indicate this.
    355           *  Permit join is enabled for the PERMIT_JOIN_TIMEOUT period. A timer is 
    356           *  started to reset the led to the LED_JOINED state when the permit join 
    357           *  timeout expires.
    358           *  
    359           * @param none
    360           */

   \                                 In section .text, align 2, keep-with-next
    361          static void emberAfPluginAuroraButtonJoiningPermitJoiningNetwork(void)
    362          {
   \                     emberAfPluginAuroraButtonJoiningPermitJoiningNetwork: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    363            int8u permitJoinDuration;
    364            
    365            emberAfDebugPrint("Setting permit join flag\r\n");
   \   00000002   0x.... 0x....      ADR.W    R1,?_6
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       emberAfPrint
    366          
    367            if (emberNetworkState() == EMBER_JOINED_NETWORK) 
   \   0000000C   0x.... 0x....      BL       emberNetworkState
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD10E             BNE.N    ??emberAfPluginAuroraButtonJoiningPermitJoining_0
    368            {
    369              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_PERMIT_JOINING | DEVICE_STATE_IDENTIFYING, DEVICE_STATE_FLAGS_SET);
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x200C             MOVS     R0,#+12
   \   00000018   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    370              
    371              permitJoinDuration = EMBER_AF_PLUGIN_EZMODE_COMMISSIONING_IDENTIFY_TIMEOUT;
    372              emAfPermitJoin(permitJoinDuration, TRUE);  // broadcast permit join
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x20B4             MOVS     R0,#+180
   \   00000020   0x.... 0x....      BL       emAfPermitJoin
    373          
    374              emberEventControlSetDelayQS(emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl, permitJoinDuration * 4);
   \   00000024   0xE8BD 0x4004      POP      {R2,LR}
   \   00000028   0xF44F 0x7134      MOV      R1,#+720
   \   0000002C   0x....             LDR.N    R0,??DataTable36_6
   \   0000002E   0x.... 0x....      B.W      emEventControlSetDelayQS
    375            }
    376          }
   \                     ??emberAfPluginAuroraButtonJoiningPermitJoining_0: (+1)
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    377          
    378          /** @brief Permit joining
    379           *  
    380           *  Broadcasts a permit join request. Flashes the led to indicate this.
    381           *  Permit join is enabled for the PERMIT_JOIN_TIMEOUT period. A timer is 
    382           *  started to reset the led to the LED_JOINED state when the permit join 
    383           *  timeout expires.
    384           *  
    385           * @param none
    386           */

   \                                 In section .text, align 2, keep-with-next
    387          void emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler(void)
    388          {
    389            // Deavtivate the event
    390            emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl);
   \                     emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable36_6
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x7008             STRB     R0,[R1, #+0]
    391          
    392            emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_PERMIT_JOINING | DEVICE_STATE_IDENTIFYING, DEVICE_STATE_FLAGS_CLEAR);
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x200C             MOVS     R0,#+12
   \   0000000A   0x....             B.N      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    393          }
    394          
    395          /** @brief Leave network
    396           *  
    397           *  Sends a leave network request and flashes the led with 
    398           *  the LED_NOT_JOINED.
    399           *
    400           * @param none
    401           */

   \                                 In section .text, align 2, keep-with-next
    402          static void emberAfPluginAuroraButtonJoiningLeaveNetwork(void)
    403          {
   \                     emberAfPluginAuroraButtonJoiningLeaveNetwork: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    404            int8u status;
    405          
    406            emberAfDebugPrint("Leaving network\r\n");
   \   00000002   0x.... 0x....      ADR.W    R1,?_7
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       emberAfPrint
    407          
    408            if (emberNetworkState() == EMBER_JOINED_NETWORK) 
   \   0000000C   0x.... 0x....      BL       emberNetworkState
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD119             BNE.N    ??emberAfPluginAuroraButtonJoiningLeaveNetwork_0
    409            {
    410              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_JOINED, DEVICE_STATE_FLAGS_CLEAR);
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    411          
    412              status = emberLeaveNetwork();
   \   0000001A   0x.... 0x....      BL       emberLeaveNetwork
    413              
    414              switch (status)
   \   0000001E   0x0001             MOVS     R1,R0
   \   00000020   0xD008             BEQ.N    ??emberAfPluginAuroraButtonJoiningLeaveNetwork_1
   \   00000022   0x2870             CMP      R0,#+112
   \   00000024   0xBF07             ITTEE    EQ 
   \   00000026   0x2270             MOVEQ    R2,#+112
   \   00000028   0x.... 0x....      ADREQ.W  R1,?_8
   \   0000002C   0x4602             MOVNE    R2,R0
   \   0000002E   0x.... 0x....      ADRNE.W  R1,?_10
    415              {
    416                case EMBER_INVALID_CALL :       // in case we are not part of a pan
    417                  emberAfDebugPrint("Error leaving network (%02X)\r\n", status);
    418                  break;
    419          
    420                case EMBER_SUCCESS:             // if everything is OK
    421                  emberAfDebugPrint("Success\r\n");
    422                  break;
    423          
    424                default:                        // in case of a misc error
    425                  emberAfDebugPrint("Error (%02X)\r\n", status);
   \   00000032   0xE004             B.N      ??emberAfPluginAuroraButtonJoiningLeaveNetwork_2
   \                     ??emberAfPluginAuroraButtonJoiningLeaveNetwork_1: (+1)
   \   00000034   0xE8BD 0x4004      POP      {R2,LR}
   \   00000038   0x.... 0x....      ADR.W    R1,?_9
   \   0000003C   0x....             B.N      ?Subroutine0
    426                  break;
    427              }
    428          
    429            }
   \                     ??emberAfPluginAuroraButtonJoiningLeaveNetwork_2: (+1)
   \   0000003E   0xE8BD 0x4008      POP      {R3,LR}
   \   00000042   0x2002             MOVS     R0,#+2
   \   00000044   0x.... 0x....      B.W      emberAfPrint
    430          }
   \                     ??emberAfPluginAuroraButtonJoiningLeaveNetwork_0: (+1)
   \   00000048   0xBD01             POP      {R0,PC}          ;; return
    431          
    432          // ISR context functions!!!
    433          
    434          // WARNING: these functions are in ISR so we must do minimal
    435          // processing and not make any blocking calls (like printf)
    436          // or calls that take a long time.
    437          

   \                                 In section .text, align 2, keep-with-next
    438          boolean emberAfPluginAuroraButtonJoiningButtonPress(boolean state)
    439          {
   \                     emberAfPluginAuroraButtonJoiningButtonPress: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    440              // ISR CONTEXT!!!
    441              
    442              if (state == BUTTON_DOWN) 
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xBF0C             ITE      EQ 
   \   00000006   0x....             LDREQ.N  R0,??DataTable36_7
   \   00000008   0x....             LDRNE.N  R0,??DataTable36_2
    443              {
    444                  //emberAfDebugPrint("Button Down(%d)\r\n", state);
    445                  emberEventControlSetActive(emberAfPluginAuroraButtonJoiningButtonDownEventControl);
    446              } 
    447              else 
    448              {
    449                  //emberAfDebugPrint("Button Up(%d)\r\n", state); 
    450                  emberEventControlSetActive(emberAfPluginAuroraButtonJoiningButtonUpEventControl);
   \   0000000A   0x.... 0x....      BL       emEventControlSetActive
    451              }
    452          
    453              return TRUE;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
    454          }
    455          
    456          /** @brief Flash the LED
    457           *  
    458           * Sets the led state and calls the emberAfPluginAuroraButtonJoiningLedEventEventHandler().
    459           *  
    460           * @param cadence - the new led flashing cadence
    461           */

   \                                 In section .text, align 2, keep-with-next
    462          void emberAfPluginAuroraButtonJoiningInitialiseLeds(void)
    463          {
   \                     emberAfPluginAuroraButtonJoiningInitialiseLeds: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    464            emberAfDebugPrintln("Initialise Leds");
   \   00000002   0x.... 0x....      ADR.W    R1,?_11
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       emberAfPrintln
    465            
    466            currentNetworkState = LED_NOT_JOINED;
   \   0000000C   0x....             LDR.N    R1,??DataTable36_8
   \   0000000E   0x2003             MOVS     R0,#+3
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    467            
    468            emberAfPluginAuroraButtonJoiningLedEventEventHandler();
   \   00000012   0xE8BD 0x4001      POP      {R0,LR}
   \   00000016   0x....             B.N      emberAfPluginAuroraButtonJoiningLedEventEventHandler
    469          }
    470          
    471          /** @brief Flash the LED
    472           *  
    473           * Sets the led state and calls the emberAfPluginAuroraButtonJoiningLedEventEventHandler().
    474           *  
    475           * @param cadence - the new led flashing cadence
    476           */

   \                                 In section .text, align 2, keep-with-next
    477          static void emberAfPluginAuroraButtonJoiningFlashLed(t_networkState newState)
    478          {
    479            currentNetworkState = newState;
   \                     emberAfPluginAuroraButtonJoiningFlashLed: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable36_8
   \   00000002   0x7008             STRB     R0,[R1, #+0]
    480            
    481            emberAfPluginAuroraButtonJoiningLedEventEventHandler();
   \   00000004                      REQUIRE emberAfPluginAuroraButtonJoiningLedEventEventHandler
   \   00000004                      ;; // Fall through to label emberAfPluginAuroraButtonJoiningLedEventEventHandler
    482          }
    483          
    484          /** @brief Handle led timer event
    485           *  
    486           *  Flashes the led. Uses the ledCadence array where the on and off 
    487           *  times are defined for each cadence.
    488           *  
    489           * @param none
    490           */

   \                                 In section .text, align 2, keep-with-next
    491          void emberAfPluginAuroraButtonJoiningLedEventEventHandler(void)
    492          {
   \                     emberAfPluginAuroraButtonJoiningLedEventEventHandler: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    493              t_ledSettings *settings;
    494              int8u index;
    495              
    496              emberEventControlSetInactive(emberAfPluginAuroraButtonJoiningLedEventEventControl);
   \   00000002   0x....             LDR.N    R4,??DataTable36_8
    497              
    498              settings = (t_ledSettings *)getLedSettings(currentNetworkState);
   \   00000004   0x.... 0x....      ADR.W    R2,ledSettings
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x7120             STRB     R0,[R4, #+4]
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x7820             LDRB     R0,[R4, #+0]
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_0: (+1)
   \   00000010   0xEB01 0x0381      ADD      R3,R1,R1, LSL #+2
   \   00000014   0x5C9D             LDRB     R5,[R3, R2]
   \   00000016   0x4285             CMP      R5,R0
   \   00000018   0xD004             BEQ.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_1
   \   0000001A   0x1C49             ADDS     R1,R1,#+1
   \   0000001C   0xB2C9             UXTB     R1,R1
   \   0000001E   0x2906             CMP      R1,#+6
   \   00000020   0xD3F6             BCC.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_0
   \   00000022   0xBDF1             POP      {R0,R4-R7,PC}
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_1: (+1)
   \   00000024   0x189D             ADDS     R5,R3,R2
    499              
    500              if (settings != (t_ledSettings *)NULL) 
    501              {
    502                  for (index = 0; index < MAX_LEDS; index++) 
   \   00000026   0x2600             MOVS     R6,#+0
    503                  {
    504                      if (settings->config[index].setting == LED_FLASH) 
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_2: (+1)
   \   00000028   0xEB05 0x0046      ADD      R0,R5,R6, LSL #+1
   \   0000002C   0x1937             ADDS     R7,R6,R4
   \   0000002E   0x7881             LDRB     R1,[R0, #+2]
   \   00000030   0x2902             CMP      R1,#+2
   \   00000032   0xD111             BNE.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_3
    505                      {
    506                          if (ledsCurrentStates[index] == LED_OFF) 
   \   00000034   0x78B9             LDRB     R1,[R7, #+2]
   \   00000036   0x7840             LDRB     R0,[R0, #+1]
   \   00000038   0x2900             CMP      R1,#+0
   \   0000003A   0xD103             BNE.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_4
    507                          {
    508                              halSetLed(settings->config[index].id);
   \   0000003C   0x.... 0x....      BL       halSetLed
    509                              ledsCurrentStates[index] = LED_ON;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0xE002             B.N      ??emberAfPluginAuroraButtonJoiningLedEventEvent_5
    510                          } 
    511                          else 
    512                          {
    513                              halClearLed(settings->config[index].id);
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_4: (+1)
   \   00000044   0x.... 0x....      BL       halClearLed
    514                              ledsCurrentStates[index] = LED_OFF;
   \   00000048   0x2000             MOVS     R0,#+0
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_5: (+1)
   \   0000004A   0x70B8             STRB     R0,[R7, #+2]
    515                          }    
    516                          emberEventControlSetDelayMS(emberAfPluginAuroraButtonJoiningLedEventEventControl, LED_SWITCH_TIME);
   \   0000004C   0xF44F 0x71FA      MOV      R1,#+500
   \   00000050   0x1D20             ADDS     R0,R4,#+4
   \   00000052   0x.... 0x....      BL       emEventControlSetDelayMS
   \   00000056   0xE00A             B.N      ??emberAfPluginAuroraButtonJoiningLedEventEvent_6
    517                      } 
    518                      else if (settings->config[index].setting == LED_ON) 
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_3: (+1)
   \   00000058   0x7840             LDRB     R0,[R0, #+1]
   \   0000005A   0x2901             CMP      R1,#+1
   \   0000005C   0xD103             BNE.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_7
    519                      {
    520                          halClearLed(settings->config[index].id);
   \   0000005E   0x.... 0x....      BL       halClearLed
    521                          ledsCurrentStates[index] = LED_ON;
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xE002             B.N      ??emberAfPluginAuroraButtonJoiningLedEventEvent_8
    522                      } 
    523                      else 
    524                      {
    525                          halSetLed(settings->config[index].id);
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_7: (+1)
   \   00000066   0x.... 0x....      BL       halSetLed
    526                          ledsCurrentStates[index] = LED_OFF;
   \   0000006A   0x2000             MOVS     R0,#+0
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_8: (+1)
   \   0000006C   0x70B8             STRB     R0,[R7, #+2]
    527                      }
    528                  }
   \                     ??emberAfPluginAuroraButtonJoiningLedEventEvent_6: (+1)
   \   0000006E   0x1C76             ADDS     R6,R6,#+1
   \   00000070   0x2E02             CMP      R6,#+2
   \   00000072   0xDBD9             BLT.N    ??emberAfPluginAuroraButtonJoiningLedEventEvent_2
    529              }
    530          }
   \   00000074   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    531          
    532          static t_ledSettings *getLedSettings(t_networkState networkState)
    533          {
    534              int8u index;
    535              t_ledSettings *settings = (t_ledSettings *)NULL;
    536              
    537              for (index = 0; index < MAX_LED_STATES; index++) 
    538              {
    539                  if (ledSettings[index].state == networkState) 
    540                  {
    541          //            emberAfDebugPrint("Index: (%d) Setting : (%d) Network State: (%d)\r\n", index, settings->config[index].setting, currentNetworkState);
    542          //            emberAfDebugPrint("State: (%d) Network State: (%d) Index: (%d)\r\n", ledSettings[index].state, currentNetworkState, index);
    543                      settings = (t_ledSettings *)&ledSettings[index];
    544                      break;
    545                  }
    546              } 
    547              
    548              return settings;
    549          }
    550          
    551          /** @brief Cli join command
    552           *  
    553           *  Calls emberAfPluginAuroraButtonJoiningJoinNetwork()
    554           *  
    555           * @param none
    556           */

   \                                 In section .text, align 2, keep-with-next
    557          void cliJoin(void)
    558          {
    559            emberAfPluginAuroraButtonJoiningJoinNetwork();
   \                     cliJoin: (+1)
   \   00000000   0x....             B.N      emberAfPluginAuroraButtonJoiningJoinNetwork
    560          }
    561          

   \                                 In section .text, align 2, keep-with-next
    562          void stackStatusEventHandler(void)
    563          {
   \                     stackStatusEventHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    564            emberEventControlSetInactive(stackStatusEventControl);
   \   00000002   0x....             LDR.N    R0,??DataTable36_5
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7101             STRB     R1,[R0, #+4]
    565            
    566            // Send permit join, if necessary
    567            if (joiningFLag) 
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0xB140             CBZ.N    R0,??stackStatusEventHandler_0
    568            {
    569              emAfPermitJoin(EMBER_AF_PLUGIN_EZMODE_COMMISSIONING_IDENTIFY_TIMEOUT, TRUE);  // broadcast permit join
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x20B4             MOVS     R0,#+180
   \   00000010   0x.... 0x....      BL       emAfPermitJoin
    570              emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(DEVICE_STATE_PERMIT_JOINING, DEVICE_STATE_FLAGS_SET);
   \   00000014   0xE8BD 0x4004      POP      {R2,LR}
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x2008             MOVS     R0,#+8
   \   0000001C   0x....             B.N      emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
    571            }
    572            
    573          }
   \                     ??stackStatusEventHandler_0: (+1)
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
    574          
    575          /** @brief Set the radio power and power mode
    576           *
    577           *
    578           */

   \                                 In section .text, align 2, keep-with-next
    579          void setRadioPowerAndMode(void)
    580          {
   \                     setRadioPowerAndMode: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB087             SUB      SP,SP,#+28
    581              int8u board[17] = {0};
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x2114             MOVS     R1,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    582              int8s txPower = 8;
    583              int16u txPowerMode = EMBER_TX_POWER_MODE_DEFAULT;
    584              int16u temp16u;
    585          
    586              halCommonGetToken(board,TOKEN_MFG_BOARD_NAME);
   \   0000000E   0x....             LDR.N    R0,??DataTable36_9
   \   00000010   0x....             LDR.N    R7,??DataTable36_10  ;; 0x4000b804
   \   00000012   0x8801             LDRH     R1,[R0, #+0]
   \   00000014   0x2310             MOVS     R3,#+16
   \   00000016   0x227F             MOVS     R2,#+127
   \   00000018   0xA801             ADD      R0,SP,#+4
   \   0000001A   0x.... 0x....      BL       halInternalGetTokenData
    587            
    588              if ((MEMCOMPARE(&board[8],"LRS", 3) == 0) || ((MEMCOMPARE(&board[10],"LRS", 3) == 0))) 
   \   0000001E   0x....             ADR.N    R5,??DataTable36  ;; "LRS"
   \   00000020   0x2203             MOVS     R2,#+3
   \   00000022   0x4629             MOV      R1,R5
   \   00000024   0xA803             ADD      R0,SP,#+12
   \   00000026   0x.... 0x....      BL       halCommonMemCompare
   \   0000002A   0xF04F 0x0808      MOV      R8,#+8
   \   0000002E   0x2400             MOVS     R4,#+0
   \   00000030   0xF06F 0x0940      MVN      R9,#+64
   \   00000034   0xF64F 0x760F      MOVW     R6,#+65295
   \   00000038   0xB118             CBZ.N    R0,??setRadioPowerAndMode_0
   \   0000003A   0x2203             MOVS     R2,#+3
   \   0000003C   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_14: (+1)
   \   00000040   0xB970             CBNZ.N   R0,??setRadioPowerAndMode_1
    589              {
    590                  GPIO_PBCFGL &= 0xFFF0;
   \                     ??setRadioPowerAndMode_0: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable36_11  ;; 0x4000b400
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0xF64F 0x72F0      MOVW     R2,#+65520
   \   0000004A   0x4011             ANDS     R1,R2,R1
   \   0000004C   0x6001             STR      R1,[R0, #+0]
    591                  GPIO_PBCFGL |= 0x0001;
    592                  GPIO_PBSET = 0x00000001;
    593                  GPIO_PCCFGH &=  0xFF0F;
    594                  GPIO_PCCFGH |=  0x0090;
    595                  txPower = -7;                   
   \   0000004E   0xF06F 0x0806      MVN      R8,#+6
   \   00000052   0x6801             LDR      R1,[R0, #+0]
   \   00000054   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000058   0x6001             STR      R1,[R0, #+0]
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x6101             STR      R1,[R0, #+16]
   \   0000005E   0xE00A             B.N      ??setRadioPowerAndMode_2
    596                  emRadioSetEdCcaThreshold(-65);  // M&M - this increses the RSSI threshold seen by the CSMA for the modules with LNA (by 10dBm)
    597              } 
    598              /* GB ERS Not supported
    599              else if ((MEMCOMPARE(&board[8],"ERS",3) == 0) || ((MEMCOMPARE(&board[10],"ERS",3) == 0))) 
    600              {
    601                  GPIO_PBCFGL &= 0xFFF0;
    602                  GPIO_PBCFGL |= 0x0001;
    603                  GPIO_PBCFGH &= 0xFF0F;
    604                  GPIO_PBCFGL |= 0x0010;
    605                  GPIO_PBSET = 0x00000021;
    606                  GPIO_PCCFGH &=  0xF00F;
    607                  GPIO_PCCFGH |=  0x0990;
    608                  txPower = -6;
    609                  emRadioSetEdCcaThreshold(-65); // M&M - this increses the RSSI threshold seen by the CSMA for the modules with LNA (by 10dBm)
    610              }
    611              */ 
    612              else if ((MEMCOMPARE(&board[8],"LR", 2) == 0) || ((MEMCOMPARE(&board[10],"LR", 2) == 0))) 
   \                     ??setRadioPowerAndMode_1: (+1)
   \   00000060   0x....             ADR.N    R5,??DataTable36_1  ;; 0x4C, 0x52, 0x00, 0x00
   \   00000062   0x2202             MOVS     R2,#+2
   \   00000064   0x4629             MOV      R1,R5
   \   00000066   0xA803             ADD      R0,SP,#+12
   \   00000068   0x.... 0x....      BL       halCommonMemCompare
   \   0000006C   0xB118             CBZ.N    R0,??setRadioPowerAndMode_2
   \   0000006E   0x2202             MOVS     R2,#+2
   \   00000070   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000074   0xB948             CBNZ.N   R0,??setRadioPowerAndMode_3
    613              {
    614                  GPIO_PCCFGH &=  0xFF0F;
   \                     ??setRadioPowerAndMode_2: (+1)
   \   00000076   0x6838             LDR      R0,[R7, #+0]
   \   00000078   0x4030             ANDS     R0,R6,R0
   \   0000007A   0x6038             STR      R0,[R7, #+0]
    615                  GPIO_PCCFGH |=  0x0090;
   \   0000007C   0x6838             LDR      R0,[R7, #+0]
   \   0000007E   0xF040 0x0090      ORR      R0,R0,#0x90
   \   00000082   0x6038             STR      R0,[R7, #+0]
    616                  emRadioSetEdCcaThreshold(-65); // M&M - this increses the RSSI threshold seen by the CSMA for the modules with LNA (by 10dBm)
   \   00000084   0x4648             MOV      R0,R9
   \   00000086   0x.... 0x....      BL       emRadioSetEdCcaThreshold
    617              }
    618          
    619              halCommonGetToken(&temp16u, TOKEN_MFG_PHY_CONFIG);
   \                     ??setRadioPowerAndMode_3: (+1)
   \   0000008A   0x....             LDR.N    R0,??DataTable36_12
   \   0000008C   0x8801             LDRH     R1,[R0, #+0]
   \   0000008E   0x2302             MOVS     R3,#+2
   \   00000090   0x227F             MOVS     R2,#+127
   \   00000092   0xA800             ADD      R0,SP,#+0
   \   00000094   0x.... 0x....      BL       halInternalGetTokenData
    620              if (!(temp16u & 0x0002)) 
   \   00000098   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
    621              {
    622                  txPowerMode |= EMBER_TX_POWER_MODE_ALTERNATE;
    623              }
    624          
    625              if (txPower > 3)
    626              {
    627                  txPowerMode |= EMBER_TX_POWER_MODE_BOOST;
    628              }
    629          
    630              emberAfDebugPrint("setRadioPowerAndMode txPower %d\r\n", txPower);
   \   0000009C   0x.... 0x....      ADR.W    R1,?_15
   \   000000A0   0x0780             LSLS     R0,R0,#+30
   \   000000A2   0xBF58             IT       PL 
   \   000000A4   0x2402             MOVPL    R4,#+2
   \   000000A6   0x4642             MOV      R2,R8
   \   000000A8   0x2A04             CMP      R2,#+4
   \   000000AA   0xBFA8             IT       GE 
   \   000000AC   0xF044 0x0401      ORRGE    R4,R4,#0x1
   \   000000B0   0x.... 0x....      BL       ?Subroutine1
    631              emberAfDebugPrint("setRadioPowerAndMode txPowerMode %d\r\n", txPowerMode);
   \                     ??CrossCallReturnLabel_5: (+1)
   \   000000B4   0x4622             MOV      R2,R4
   \   000000B6   0x.... 0x....      ADR.W    R1,?_16
   \   000000BA   0x.... 0x....      BL       ?Subroutine1
    632            
    633              emberSetRadioPower(txPower);
   \                     ??CrossCallReturnLabel_4: (+1)
   \   000000BE   0x4640             MOV      R0,R8
   \   000000C0   0x.... 0x....      BL       emberSetRadioPower
    634              emberSetTxPowerMode(txPowerMode);
   \   000000C4   0x4620             MOV      R0,R4
   \   000000C6   0x.... 0x....      BL       emberSetTxPowerMode
    635            
    636              emberAfDebugPrint("setRadioPowerAndMode read back power %d\r\n", emberGetRadioPower());
   \   000000CA   0x.... 0x....      BL       emberGetRadioPower
   \   000000CE   0x4602             MOV      R2,R0
   \   000000D0   0x.... 0x....      ADR.W    R1,?_17
   \   000000D4   0x.... 0x....      BL       ?Subroutine1
    637              emberAfDebugPrint("setRadioPowerAndMode read back power mode %d\r\n", emberGetTxPowerMode());
   \                     ??CrossCallReturnLabel_3: (+1)
   \   000000D8   0x.... 0x....      BL       emberGetTxPowerMode
   \   000000DC   0x4602             MOV      R2,R0
   \   000000DE   0x.... 0x....      ADR.W    R1,?_18
   \   000000E2   0x.... 0x....      BL       ?Subroutine1
    638          }
   \                     ??CrossCallReturnLabel_2: (+1)
   \   000000E6   0xB007             ADD      SP,SP,#+28
   \   000000E8   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x4629             MOV      R1,R5
   \   00000002   0xF10D 0x000E      ADD      R0,SP,#+14
   \   00000006   0x.... 0x....      B.W      halCommonMemCompare
    639          

   \                                 In section .text, align 2, keep-with-next
    640          void emberAfPluginAuroraButtonJoiningUpdateStatusLed(void)
    641          {
   \                     emberAfPluginAuroraButtonJoiningUpdateStatusLed: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    642            static int8u lastDeviceStateFlags = DEVICE_STATE_CLEAR;
    643            
    644            if (deviceStateFlags != lastDeviceStateFlags) 
   \   00000002   0x....             LDR.N    R4,??DataTable36_13
   \   00000004   0x7822             LDRB     R2,[R4, #+0]
   \   00000006   0x7860             LDRB     R0,[R4, #+1]
   \   00000008   0x4282             CMP      R2,R0
   \   0000000A   0xD027             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_0
    645            {
    646              emberAfDebugPrint("update status led: (%x)\r\n", deviceStateFlags);
   \   0000000C   0x.... 0x....      ADR.W    R1,?_19
   \   00000010   0x.... 0x....      BL       ?Subroutine1
    647              
    648              switch(deviceStateFlags) 
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000014   0x7822             LDRB     R2,[R4, #+0]
   \   00000016   0x0010             MOVS     R0,R2
   \   00000018   0xD012             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_1
   \   0000001A   0x2A01             CMP      R2,#+1
   \   0000001C   0xD00E             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_2
   \   0000001E   0x2A02             CMP      R2,#+2
   \   00000020   0xD013             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3
   \   00000022   0x2A06             CMP      R2,#+6
   \   00000024   0xD00E             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_4
   \   00000026   0x2A0A             CMP      R2,#+10
   \   00000028   0xD00E             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_5
   \   0000002A   0x2A0E             CMP      R2,#+14
   \   0000002C   0xD00A             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_4
   \   0000002E   0x2A10             CMP      R2,#+16
   \   00000030   0xD002             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_6
   \   00000032   0x2A11             CMP      R2,#+17
   \   00000034   0xD002             BEQ.N    ??emberAfPluginAuroraButtonJoiningUpdateStatusL_2
   \   00000036   0xE00B             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_7
    649              {
    650                case DEVICE_STATE_NETWORK_UNAVAILABLE:
    651                  emberAfPluginAuroraButtonJoiningFlashLed(LED_NWK_UNAVAILABLE);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_6: (+1)
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0xE006             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3
    652                  break;      
    653                
    654                case DEVICE_STATE_NETWORK_UNAVAILABLE | DEVICE_STATE_JOINING:
    655                case DEVICE_STATE_JOINING:
    656                  emberAfPluginAuroraButtonJoiningFlashLed(LED_JOINING);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_2: (+1)
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE004             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3
    657                  break;
    658            
    659                case DEVICE_STATE_CLEAR:
    660                  emberAfPluginAuroraButtonJoiningFlashLed(LED_NOT_JOINED);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_1: (+1)
   \   00000040   0x2003             MOVS     R0,#+3
   \   00000042   0xE002             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3
    661                  break;
    662                  
    663                case DEVICE_STATE_JOINED:
    664                  emberAfPluginAuroraButtonJoiningFlashLed(LED_JOINED);
    665                  break;
    666                
    667                case DEVICE_STATE_JOINED | DEVICE_STATE_IDENTIFYING:
    668                case DEVICE_STATE_JOINED | DEVICE_STATE_IDENTIFYING | DEVICE_STATE_PERMIT_JOINING:
    669                  emberAfPluginAuroraButtonJoiningFlashLed(LED_IDENTIFY);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_4: (+1)
   \   00000044   0x2007             MOVS     R0,#+7
   \   00000046   0xE000             B.N      ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3
    670                  break;
    671          
    672                case DEVICE_STATE_JOINED | DEVICE_STATE_PERMIT_JOINING:
    673                  emberAfPluginAuroraButtonJoiningFlashLed(LED_PERMIT_JOINING);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_5: (+1)
   \   00000048   0x2004             MOVS     R0,#+4
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_3: (+1)
   \   0000004A   0x.... 0x....      BL       emberAfPluginAuroraButtonJoiningFlashLed
    674                  break;
   \   0000004E   0xE003             B.N      ??CrossCallReturnLabel_0
    675          
    676                default:
    677                  emberAfDebugPrint("update status led (default): (%x)\r\n", deviceStateFlags);
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_7: (+1)
   \   00000050   0x.... 0x....      ADR.W    R1,?_20
   \   00000054   0x.... 0x....      BL       ?Subroutine1
    678                  break;
    679              }
    680          
    681              lastDeviceStateFlags = deviceStateFlags;
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000058   0x7820             LDRB     R0,[R4, #+0]
   \   0000005A   0x7060             STRB     R0,[R4, #+1]
    682            }
    683            
    684          }
   \                     ??emberAfPluginAuroraButtonJoiningUpdateStatusL_0: (+1)
   \   0000005C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .data, align 1
   \                     deviceStateFlags:
   \   00000000   0x10               DC8 16
   \   00000001   0x00               DC8 0

   \                                 In section .data, align 4
   \                     deviceStateText:
   \   00000000   0x4A 0x6F          DC8 "Joining"
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   00000008   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x4A 0x6F          DC8 "Joined"
   \              0x69 0x6E    
   \              0x65 0x64    
   \              0x00         
   \   0000001B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000028   0x49 0x64          DC8 "Identifying"
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000003C   0x50 0x65          DC8 "Permit Joining"
   \              0x72 0x6D    
   \              0x69 0x74    
   \              0x20 0x4A    
   \              0x6F 0x69    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x00         
   \   0000004B   0x00 0x00          DC8 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
   \   00000050   0x4E 0x65          DC8 "Network Unavailable"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x55 0x6E    
   \              0x61 0x76    
   \              0x61 0x69    
   \              0x6C 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    
    685          

   \                                 In section .text, align 2, keep-with-next
    686          void emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags(int8u newState, boolean set)
    687          {
    688            if (set) 
   \                     emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags: (+1)
   \   00000000   0x....             LDR.N    R2,??DataTable36_13
   \   00000002   0x7813             LDRB     R3,[R2, #+0]
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xBF14             ITE      NE 
   \   00000008   0x4318             ORRNE    R0,R0,R3
   \   0000000A   0xEA23 0x0000      BICEQ    R0,R3,R0
    689            {
    690              deviceStateFlags |= newState;
    691            } 
    692            else 
    693            {
    694              deviceStateFlags &= ~(newState);
   \   0000000E   0x7010             STRB     R0,[R2, #+0]
    695            }
    696          }
   \   00000010   0x4770             BX       LR               ;; return
    697          

   \                                 In section .text, align 2, keep-with-next
    698          void sendMatchDescriptor(void)
    699          {
    700            EmberAfStatus status;
    701            
    702            status = emAfSendMatchDescriptor(0x0000, 0x0104, 0x000, TRUE);
                          ^
Warning[Pe188]: enumerated type mixed with another type

    EmberAfStatus status;
                  ^
"C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\aurora-button-joining\aurora-button-joining.c",700  Warning[Pe550]: 
          variable "status" was set but never used
   \                     sendMatchDescriptor: (+1)
   \   00000000   0x2301             MOVS     R3,#+1
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0xF44F 0x7182      MOV      R1,#+260
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      B.W      emAfSendMatchDescriptor
    703          }
    704          
    705          /** @brief Poll Completed
    706           *
    707           * This function is called by the application framework after a poll is
    708           * completed.
    709           *
    710           * @param status Return status of a completed poll operation  Ver.: always
    711           */

   \                                 In section .text, align 2, keep-with-next
    712          void emberAfPluginEndDeviceSupportPollCompletedCallback(EmberStatus status)
    713          {
    714            
    715          }
   \                     emberAfPluginEndDeviceSupportPollCompletedCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   0x4C 0x52          DC8      "LRS"
   \              0x53 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_1:
   \   00000000   0x4C 0x52          DC8      0x4C, 0x52, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_2:
   \   00000000   0x........         DC32     emberAfPluginAuroraButtonJoiningButtonUpEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_3:
   \   00000000   0x........         DC32     buttonDownCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_4:
   \   00000000   0x........         DC32     buttonSequence

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_5:
   \   00000000   0x........         DC32     joiningFLag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_6:
   \   00000000   0x........         DC32     emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_7:
   \   00000000   0x........         DC32     buttonDownCount+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_8:
   \   00000000   0x........         DC32     currentNetworkState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_9:
   \   00000000   0x........         DC32     TOKEN_MFG_BOARD_NAME

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_10:
   \   00000000   0x4000B804         DC32     0x4000b804

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_11:
   \   00000000   0x4000B400         DC32     0x4000b400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_12:
   \   00000000   0x........         DC32     TOKEN_MFG_PHY_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_13:
   \   00000000   0x........         DC32     deviceStateFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x42 0x75          DC8 "Button release (%d)\015\012"
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x20 0x72    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x20 0x28    
   \              0x25 0x64    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x4D 0x61          DC8 "Match: %d\015\012"
   \              0x74 0x63    
   \              0x68 0x3A    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x4E 0x6F          DC8 "No match\015\012"
   \              0x20 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x46 0x69          DC8 "Find joinable networks (%x)\015\012"
   \              0x6E 0x64    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x73    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x25 0x70          DC8 "%p: join"
   \              0x3A 0x20    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x42 0x55          DC8 "BUTTON\015\012"
   \              0x54 0x54    
   \              0x4F 0x4E    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x53 0x65          DC8 "Setting permit join flag\015\012"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x70 0x65    
   \              0x72 0x6D    
   \              0x69 0x74    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x20    
   \              0x66 0x6C    
   \              0x61 0x67    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x4C 0x65          DC8 "Leaving network\015\012"
   \              0x61 0x76    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x45 0x72          DC8 "Error leaving network (%02X)\015\012"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x6C 0x65    
   \              0x61 0x76    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x28 0x25    
   \              0x30 0x32    
   \              0x58 0x29    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x53 0x75          DC8 "Success\015\012"
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x45 0x72          DC8 "Error (%02X)\015\012"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x28 0x25    
   \              0x30 0x32    
   \              0x58 0x29    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x49 0x6E          DC8 "Initialise Leds"
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x69    
   \              0x73 0x65    
   \              0x20 0x4C    
   \              0x65 0x64    
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode txPower %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x74    
   \              0x78 0x50    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode txPowerMode %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x74    
   \              0x78 0x50    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode read back power %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x20    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x20 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x73 0x65          DC8 "setRadioPowerAndMode read back power mode %d\015\012"
   \              0x74 0x52    
   \              0x61 0x64    
   \              0x69 0x6F    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x41    
   \              0x6E 0x64    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x20    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x20 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x75 0x70          DC8 "update status led: (%x)\015\012"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x75 0x70          DC8 "update status led (default): (%x)\015\012"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x28 0x64    
   \              0x65 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x29 0x3A    
   \              0x20 0x28    
   \              0x25 0x78    
   \              0x29 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x4C 0x52          DC8 "LRS"
   \              0x53 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x4C 0x52          DC8 "LR"
   \              0x00         
   \   00000003   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   cliJoin
         0   -> emberAfPluginAuroraButtonJoiningJoinNetwork
       8   emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler
         8   -> buttonGetState
         8   -> halCommonGetInt32uMillisecondTick
       8   emberAfPluginAuroraButtonJoiningButtonDownEventHandler
         8   -> emEventControlSetDelayMS
       8   emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler
         8   -> __aeabi_memclr4
         8   -> emberAfPluginAuroraButtonJoiningCheckButtonSequence
       8   emberAfPluginAuroraButtonJoiningButtonPress
         8   -> emEventControlSetActive
       8   emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler
         8   -> buttonGetState
         8   -> emEventControlSetDelayMS
         8   -> emberAfPrint
         8   -> halCommonGetInt32uMillisecondTick
       8   emberAfPluginAuroraButtonJoiningButtonUpEventHandler
         8   -> emEventControlSetDelayMS
      24   emberAfPluginAuroraButtonJoiningCheckButtonSequence
         0   -- Indirect call
         0   -> emberAfPrint
        24   -> emberAfPrint
       0   emberAfPluginAuroraButtonJoiningClearJoiningFlag
       0   emberAfPluginAuroraButtonJoiningFlashLed
         0   -> emberAfPluginAuroraButtonJoiningLedEventEventHandler
       8   emberAfPluginAuroraButtonJoiningInitialiseLeds
         0   -> emberAfPluginAuroraButtonJoiningLedEventEventHandler
         8   -> emberAfPrintln
       8   emberAfPluginAuroraButtonJoiningJoinNetwork
         8   -> emberAfPluginAuroraButtonJoiningPermitJoiningNetwork
         8   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         8   -> emberAfPrint
         0   -> emberAfPrintln
         8   -> emberAfStartSearchForJoinableNetworkCallback
         8   -> emberNetworkState
       8   emberAfPluginAuroraButtonJoiningLeaveNetwork
         8   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         0   -> emberAfPrint
         8   -> emberAfPrint
         8   -> emberLeaveNetwork
         8   -> emberNetworkState
      24   emberAfPluginAuroraButtonJoiningLedEventEventHandler
        24   -> emEventControlSetDelayMS
        24   -> halClearLed
        24   -> halSetLed
       0   emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler
         0   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
       8   emberAfPluginAuroraButtonJoiningPermitJoiningNetwork
         8   -> emAfPermitJoin
         8   -> emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
         8   -> emberAfPrint
         8   -> emberNetworkState
       0   emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
       8   emberAfPluginAuroraButtonJoiningUpdateStatusLed
         8   -> emberAfPluginAuroraButtonJoiningFlashLed
         8   -> emberAfPrint
       0   emberAfPluginEndDeviceSupportPollCompletedCallback
       0   sendMatchDescriptor
         0   -> emAfSendMatchDescriptor
      56   setRadioPowerAndMode
        56   -> __aeabi_memclr4
        56   -> emRadioSetEdCcaThreshold
        56   -> emberAfPrint
        56   -> emberGetRadioPower
        56   -> emberGetTxPowerMode
        56   -> emberSetRadioPower
        56   -> emberSetTxPowerMode
        56   -> halCommonMemCompare
        56   -> halInternalGetTokenData
       8   stackStatusEventHandler
         8   -> emAfPermitJoin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable36
       4  ??DataTable36_1
       4  ??DataTable36_10
       4  ??DataTable36_11
       4  ??DataTable36_12
       4  ??DataTable36_13
       4  ??DataTable36_2
       4  ??DataTable36_3
       4  ??DataTable36_4
       4  ??DataTable36_5
       4  ??DataTable36_6
       4  ??DataTable36_7
       4  ??DataTable36_8
       4  ??DataTable36_9
       6  ?Subroutine0
       6  ?Subroutine1
       8  ?Subroutine2
      10  ?Subroutine3
      24  ?_0
      12  ?_1
      16  ?_10
      16  ?_11
      20  ?_12
       4  ?_13
       4  ?_14
      36  ?_15
      40  ?_16
      44  ?_17
      48  ?_18
      28  ?_19
      12  ?_2
      36  ?_20
      32  ?_3
      12  ?_4
      12  ?_5
      28  ?_6
      20  ?_7
      32  ?_8
      12  ?_9
      52  buttonDownCount
          buttonDownDetectStarted
          buttonUpDetectStarted
          buttonSequenceStarted
          emberAfPluginAuroraButtonJoiningButtonDownEventControl
          emberAfPluginAuroraButtonJoiningButtonDownDebounceEventControl
          emberAfPluginAuroraButtonJoiningButtonUpDebounceEventControl
          emberAfPluginAuroraButtonJoiningButtonEndSequenceEventControl
          buttonDownTimes
          buttonDownTime
      48  buttonSequence
       2  cliJoin
      12  currentNetworkState
          ledsCurrentStates
          emberAfPluginAuroraButtonJoiningLedEventEventControl
       2  deviceStateFlags
          lastDeviceStateFlags
     100  deviceStateText
      30  emberAfPluginAuroraButtonJoiningButtonDownDebounceEventHandler
      36  emberAfPluginAuroraButtonJoiningButtonDownEventHandler
      30  emberAfPluginAuroraButtonJoiningButtonEndSequenceEventHandler
      18  emberAfPluginAuroraButtonJoiningButtonPress
      70  emberAfPluginAuroraButtonJoiningButtonUpDebounceEventHandler
       8  emberAfPluginAuroraButtonJoiningButtonUpEventControl
      32  emberAfPluginAuroraButtonJoiningButtonUpEventHandler
      94  emberAfPluginAuroraButtonJoiningCheckButtonSequence
       8  emberAfPluginAuroraButtonJoiningClearJoiningFlag
       4  emberAfPluginAuroraButtonJoiningFlashLed
      24  emberAfPluginAuroraButtonJoiningInitialiseLeds
      68  emberAfPluginAuroraButtonJoiningJoinNetwork
      74  emberAfPluginAuroraButtonJoiningLeaveNetwork
     118  emberAfPluginAuroraButtonJoiningLedEventEventHandler
       8  emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventControl
      12  emberAfPluginAuroraButtonJoiningPermitJoiningExpiryEventHandler
      52  emberAfPluginAuroraButtonJoiningPermitJoiningNetwork
      18  emberAfPluginAuroraButtonJoiningUpdateDeviceStateFlags
      94  emberAfPluginAuroraButtonJoiningUpdateStatusLed
       2  emberAfPluginEndDeviceSupportPollCompletedCallback
      16  events
      12  joiningFLag
          stackStatusEventControl
      32  ledSettings
       8  routeRequestTimerEventControl
      14  sendMatchDescriptor
     236  setRadioPowerAndMode
      32  stackStatusEventHandler

 
   100 bytes in section .bss
   150 bytes in section .data
    44 bytes in section .rodata
 1 646 bytes in section .text
 
 1 646 bytes of CODE  memory
    44 bytes of CONST memory
   250 bytes of DATA  memory

Errors: none
Warnings: 2
