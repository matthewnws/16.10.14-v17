###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:23
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ota-storage-common\ota-storage-common-cli.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ota-storage-common\ota-storage-common-cli.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"ota-storage-common-cli.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ota-storage-common\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\ota-storage-common-cli.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\ota-storage-common-cli.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ota-storage-common\ota-storage-common-cli.c
      1          // *******************************************************************
      2          // * ota-storage-common-cli.c
      3          // *
      4          // * Zigbee Over-the-air bootload cluster for upgrading firmware and 
      5          // * downloading specific file.
      6          // * 
      7          // * Copyright 2009 by Ember Corporation. All rights reserved.              *80*
      8          // *******************************************************************
      9          
     10          #include "app/framework/util/common.h"
     11          #include "app/util/serial/command-interpreter2.h"
     12          #include "app/framework/plugin/ota-common/ota.h"
     13          #include "app/framework/plugin/ota-common/ota-cli.h"
     14          
     15          #include "callback.h"
     16          
     17          // client and server use same storage interface
     18          #include "app/framework/plugin/ota-storage-common/ota-storage.h"  
     19          
     20          #if defined (EMBER_AF_PLUGIN_OTA_STORAGE_COMMON)
     21          
     22          //------------------------------------------------------------------------------
     23          // Globals
     24          
     25          #define MAX_TAGS 10
     26          
     27          #ifndef EMBER_AF_GENERATE_CLI
     28          EmberCommandEntry emberAfPluginOtaStorageCommonCommands[] = {
     29            OTA_COMMON_COMMANDS
     30            { NULL },
     31          };
     32          #endif // EMBER_AF_GENERATE_CLI
     33          
     34          //------------------------------------------------------------------------------
     35          // Forward Declarations
     36          
     37          // Create a shorter name for printing to make the code more readable.
     38          #define otaPrintln(...) emberAfOtaBootloadClusterPrintln(__VA_ARGS__)
     39          
     40          //------------------------------------------------------------------------------
     41          // Functions
     42          

   \                                 In section .text, align 2, keep-with-next
     43          void emAfOtaPrintAllImages(void)
     44          {
   \                     emAfOtaPrintAllImages: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0AF             SUB      SP,SP,#+188
     45            int8u i = 0;
   \   00000006   0xA805             ADD      R0,SP,#+20
   \   00000008   0x.... 0x....      BL       emberAfOtaStorageIteratorFirstCallback
     46            EmberAfOtaImageId id = emberAfOtaStorageIteratorFirstCallback();
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0xA905             ADD      R1,SP,#+20
   \   00000010   0x.... 0x....      BL       ??Subroutine1_0
   \                     ??CrossCallReturnLabel_18: (+1)
   \   00000014   0x2500             MOVS     R5,#+0
   \   00000016   0xAC17             ADD      R4,SP,#+92
   \   00000018   0xF10D 0x0A30      ADD      R10,SP,#+48
   \   0000001C   0xF10D 0x0626      ADD      R6,SP,#+38
   \   00000020   0x.... 0x....      ADR.W    R11,?_18
   \   00000024   0x.... 0x....      ADR.W    R8,?_17
   \   00000028   0x.... 0x....      ADR.W    R9,?_0
   \   0000002C   0xE00C             B.N      ??emAfOtaPrintAllImages_0
     47            while (emberAfIsOtaImageIdValid(&id)) {
     48              EmberAfOtaHeader header;
     49              EmberAfTagData tagInfo[MAX_TAGS];
     50              int16u totalTags;
     51              otaPrintln("Image %d", i);
     52              if (EMBER_AF_OTA_STORAGE_SUCCESS
     53                  != emberAfOtaStorageGetFullHeaderCallback(&id,
     54                                                            &header)) {
     55                otaPrintln("  ERROR: Could not get full header!");
     56              } else {
     57                otaPrintln("  Header Version: 0x%2X", header.headerVersion);
     58                otaPrintln("  Header Length:  %d bytes", header.headerLength);
     59                otaPrintln("  Field Control:  0x%2X", header.fieldControl);
     60                emberAfOtaBootloadClusterFlush();
     61                otaPrintln("  Manuf ID:       0x%2X", header.manufacturerId);
     62                otaPrintln("  Image Type:     0x%2X", header.imageTypeId);
     63                otaPrintln("  Version:        0x%4X", header.firmwareVersion);
     64                emberAfOtaBootloadClusterFlush();
     65                otaPrintln("  Zigbee Version: 0x%2X", header.zigbeeStackVersion);
     66                otaPrintln("  Header String:  %s",    header.headerString);
     67                otaPrintln("  Image Size:     %l bytes",    header.imageSize);
     68                emberAfOtaBootloadClusterFlush();
     69                if (headerHasSecurityCredentials(&header)) {
     70                  otaPrintln("  Security Cred:  0x%X", header.securityCredentials);
     71                }
     72                if (headerHasUpgradeFileDest(&header)) {
     73                  emberAfOtaBootloadClusterPrint("  Upgrade Dest:   ");
     74                  emberAfOtaBootloadClusterDebugExec(emberAfPrintBigEndianEui64(header.upgradeFileDestination));
     75                  emberAfOtaBootloadClusterFlush();
     76                  otaPrintln("");
     77                }
     78                if (headerHasHardwareVersions(&header)) {
     79                  otaPrintln("  Min. HW Ver:    0x%2X", header.minimumHardwareVersion);
     80                  otaPrintln("  Max. HW Ver:    0x%2X", header.maximumHardwareVersion);
     81                  emberAfOtaBootloadClusterFlush();
     82                }
     83                if (EMBER_AF_OTA_STORAGE_SUCCESS == emAfOtaStorageReadAllTagInfo(&id,
     84                                                                                 tagInfo,
     85                                                                                 MAX_TAGS,
     86                                                                                 &totalTags)) {
     87                  int16u i;
     88                  otaPrintln("  Total Tags: %d", totalTags);
     89                  for (i = 0; i < MAX_TAGS && i < totalTags; i++) {
     90                    otaPrintln("    Tag: 0x%2X", tagInfo[i].id);
     91                    otaPrintln("      Length: %l", tagInfo[i].length);
     92                  }
     93                  emberAfOtaBootloadClusterFlush();
     94                } else {
     95                  otaPrintln("Error: Could not obtain tag info from image.");
   \                     ??emAfOtaPrintAllImages_1: (+1)
   \   0000002E   0x.... 0x....      ADR.W    R1,?_19
   \                     ??emAfOtaPrintAllImages_2: (+1)
   \   00000032   0x2040             MOVS     R0,#+64
   \   00000034   0x.... 0x....      BL       emberAfPrintln
   \                     ??emAfOtaPrintAllImages_3: (+1)
   \   00000038   0xA805             ADD      R0,SP,#+20
   \   0000003A   0x.... 0x....      BL       emberAfOtaStorageIteratorNextCallback
     96                }
     97              }
     98              id = emberAfOtaStorageIteratorNextCallback();
   \   0000003E   0xA801             ADD      R0,SP,#+4
   \   00000040   0xA905             ADD      R1,SP,#+20
   \   00000042   0x.... 0x....      BL       ??Subroutine1_0
     99              i++;
   \                     ??CrossCallReturnLabel_19: (+1)
   \   00000046   0x1C6D             ADDS     R5,R5,#+1
   \                     ??emAfOtaPrintAllImages_0: (+1)
   \   00000048   0xA801             ADD      R0,SP,#+4
   \   0000004A   0x.... 0x....      BL       emberAfIsOtaImageIdValid
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xF000 0x8090      BEQ.W    ??emAfOtaPrintAllImages_4
   \   00000054   0xB2ED             UXTB     R5,R5
   \   00000056   0x462A             MOV      R2,R5
   \   00000058   0x4649             MOV      R1,R9
   \   0000005A   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_17: (+1)
   \   0000005E   0xA909             ADD      R1,SP,#+36
   \   00000060   0xA801             ADD      R0,SP,#+4
   \   00000062   0x.... 0x....      BL       emberAfOtaStorageGetFullHeaderCallback
   \   00000066   0xB110             CBZ.N    R0,??emAfOtaPrintAllImages_5
   \   00000068   0x.... 0x....      ADR.W    R1,?_1
   \   0000006C   0xE7E1             B.N      ??emAfOtaPrintAllImages_2
   \                     ??emAfOtaPrintAllImages_5: (+1)
   \   0000006E   0xF8BD 0x2024      LDRH     R2,[SP, #+36]
   \   00000072   0x.... 0x....      ADR.W    R1,?_2
   \   00000076   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_16: (+1)
   \   0000007A   0xF8BD 0x2026      LDRH     R2,[SP, #+38]
   \   0000007E   0x.... 0x....      ADR.W    R1,?_3
   \   00000082   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_15: (+1)
   \   00000086   0x8872             LDRH     R2,[R6, #+2]
   \   00000088   0x.... 0x....      ADR.W    R1,?_4
   \   0000008C   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_14: (+1)
   \   00000090   0x88B2             LDRH     R2,[R6, #+4]
   \   00000092   0x.... 0x....      ADR.W    R1,?_5
   \   00000096   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_13: (+1)
   \   0000009A   0x88F2             LDRH     R2,[R6, #+6]
   \   0000009C   0x.... 0x....      ADR.W    R1,?_6
   \   000000A0   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_12: (+1)
   \   000000A4   0x9A0C             LDR      R2,[SP, #+48]
   \   000000A6   0x.... 0x....      ADR.W    R1,?_7
   \   000000AA   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_11: (+1)
   \   000000AE   0xF8BA 0x2004      LDRH     R2,[R10, #+4]
   \   000000B2   0x.... 0x....      ADR.W    R1,?_8
   \   000000B6   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_10: (+1)
   \   000000BA   0xF10D 0x0236      ADD      R2,SP,#+54
   \   000000BE   0x.... 0x....      ADR.W    R1,?_9
   \   000000C2   0x2040             MOVS     R0,#+64
   \   000000C4   0x.... 0x....      BL       emberAfPrintln
   \   000000C8   0xF8DA 0x2028      LDR      R2,[R10, #+40]
   \   000000CC   0x.... 0x....      ADR.W    R1,?_10
   \   000000D0   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_9: (+1)
   \   000000D4   0x78B0             LDRB     R0,[R6, #+2]
   \   000000D6   0x07C0             LSLS     R0,R0,#+31
   \   000000D8   0xD505             BPL.N    ??CrossCallReturnLabel_8
   \   000000DA   0xF89D 0x205C      LDRB     R2,[SP, #+92]
   \   000000DE   0x.... 0x....      ADR.W    R1,?_11
   \   000000E2   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_8: (+1)
   \   000000E6   0x78B0             LDRB     R0,[R6, #+2]
   \   000000E8   0x0780             LSLS     R0,R0,#+30
   \   000000EA   0xD510             BPL.N    ??emAfOtaPrintAllImages_6
   \   000000EC   0x.... 0x....      ADR.W    R1,?_12
   \   000000F0   0x2040             MOVS     R0,#+64
   \   000000F2   0x.... 0x....      BL       emberAfPrint
   \   000000F6   0x2040             MOVS     R0,#+64
   \   000000F8   0x.... 0x....      BL       emberAfPrintEnabled
   \   000000FC   0xB118             CBZ.N    R0,??emAfOtaPrintAllImages_7
   \   000000FE   0xF10D 0x005D      ADD      R0,SP,#+93
   \   00000102   0x.... 0x....      BL       emberAfPrintBigEndianEui64
   \                     ??emAfOtaPrintAllImages_7: (+1)
   \   00000106   0x....             ADR.N    R1,??DataTable29  ;; ""
   \   00000108   0x2040             MOVS     R0,#+64
   \   0000010A   0x.... 0x....      BL       emberAfPrintln
   \                     ??emAfOtaPrintAllImages_6: (+1)
   \   0000010E   0x78B0             LDRB     R0,[R6, #+2]
   \   00000110   0x0740             LSLS     R0,R0,#+29
   \   00000112   0xD509             BPL.N    ??CrossCallReturnLabel_6
   \   00000114   0x8962             LDRH     R2,[R4, #+10]
   \   00000116   0x.... 0x....      ADR.W    R1,?_14
   \   0000011A   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_7: (+1)
   \   0000011E   0x89A2             LDRH     R2,[R4, #+12]
   \   00000120   0x.... 0x....      ADR.W    R1,?_15
   \   00000124   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000128   0xAB00             ADD      R3,SP,#+0
   \   0000012A   0x220A             MOVS     R2,#+10
   \   0000012C   0xA91B             ADD      R1,SP,#+108
   \   0000012E   0xA801             ADD      R0,SP,#+4
   \   00000130   0x.... 0x....      BL       emAfOtaStorageReadAllTagInfo
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xF47F 0xAF7A      BNE.W    ??emAfOtaPrintAllImages_1
   \   0000013A   0xF8BD 0x2000      LDRH     R2,[SP, #+0]
   \   0000013E   0x.... 0x....      ADR.W    R1,?_16
   \   00000142   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000146   0x2700             MOVS     R7,#+0
   \                     ??emAfOtaPrintAllImages_8: (+1)
   \   00000148   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000014C   0x4287             CMP      R7,R0
   \   0000014E   0xDA10             BGE.N    ??emAfOtaPrintAllImages_9
   \   00000150   0xA81B             ADD      R0,SP,#+108
   \   00000152   0x4641             MOV      R1,R8
   \   00000154   0xF830 0x2037      LDRH     R2,[R0, R7, LSL #+3]
   \   00000158   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_4: (+1)
   \   0000015C   0xA81B             ADD      R0,SP,#+108
   \   0000015E   0xEB00 0x00C7      ADD      R0,R0,R7, LSL #+3
   \   00000162   0x4659             MOV      R1,R11
   \   00000164   0x6842             LDR      R2,[R0, #+4]
   \   00000166   0x.... 0x....      BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_3: (+1)
   \   0000016A   0x1C7F             ADDS     R7,R7,#+1
   \   0000016C   0xB2BF             UXTH     R7,R7
   \   0000016E   0x2F0A             CMP      R7,#+10
   \   00000170   0xDBEA             BLT.N    ??emAfOtaPrintAllImages_8
   \                     ??emAfOtaPrintAllImages_9: (+1)
   \   00000172   0xE761             B.N      ??emAfOtaPrintAllImages_3
    100            }
    101          
    102            otaPrintln("\n%d images in OTA storage.", emberAfOtaStorageGetCountCallback());
   \                     ??emAfOtaPrintAllImages_4: (+1)
   \   00000174   0x.... 0x....      BL       emberAfOtaStorageGetCountCallback
   \   00000178   0x4602             MOV      R2,R0
   \   0000017A   0x.... 0x....      ADR.W    R1,?_20
   \   0000017E   0x.... 0x....      BL       ?Subroutine0
    103          }
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000182   0xB02F             ADD      SP,SP,#+188
   \   00000184   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xA804             ADD      R0,SP,#+16
   \   00000002   0xA900             ADD      R1,SP,#+0
   \                     ??Subroutine1_0: (+1)
   \   00000004   0x2210             MOVS     R2,#+16
   \   00000006   0x.... 0x....      B.W      __aeabi_memcpy4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2040             MOVS     R0,#+64
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    104          

   \                                 In section .text, align 2, keep-with-next
    105          EmberAfOtaImageId emAfOtaFindImageIdByIndex(int8u index)
    106          {
   \                     emAfOtaFindImageIdByIndex: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
   \   00000004   0x4604             MOV      R4,R0
    107            int8u i = 0;
   \   00000006   0xB2CD             UXTB     R5,R1
   \   00000008   0xA800             ADD      R0,SP,#+0
   \   0000000A   0x.... 0x....      BL       emberAfOtaStorageIteratorFirstCallback
    108            EmberAfOtaImageId id = emberAfOtaStorageIteratorFirstCallback();
   \   0000000E   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_20: (+1)
   \   00000012   0x2600             MOVS     R6,#+0
    109            do {
    110              if (i == index) {
   \                     ??emAfOtaFindImageIdByIndex_0: (+1)
   \   00000014   0xB2F6             UXTB     R6,R6
   \   00000016   0x42AE             CMP      R6,R5
   \   00000018   0xD104             BNE.N    ??emAfOtaFindImageIdByIndex_1
    111                return id;
   \   0000001A   0x4620             MOV      R0,R4
   \   0000001C   0xA904             ADD      R1,SP,#+16
   \   0000001E   0x.... 0x....      BL       ??Subroutine1_0
    112              }
   \                     ??CrossCallReturnLabel_21: (+1)
   \   00000022   0xE00F             B.N      ??emAfOtaFindImageIdByIndex_2
    113              i++;
   \                     ??emAfOtaFindImageIdByIndex_1: (+1)
   \   00000024   0xA800             ADD      R0,SP,#+0
   \   00000026   0x.... 0x....      BL       emberAfOtaStorageIteratorNextCallback
    114              id = emberAfOtaStorageIteratorNextCallback();
   \   0000002A   0x.... 0x....      BL       ?Subroutine1
    115            } while (emberAfIsOtaImageIdValid(&id));
   \                     ??CrossCallReturnLabel_22: (+1)
   \   0000002E   0xA804             ADD      R0,SP,#+16
   \   00000030   0x.... 0x....      BL       emberAfIsOtaImageIdValid
   \   00000034   0x1C76             ADDS     R6,R6,#+1
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD1EC             BNE.N    ??emAfOtaFindImageIdByIndex_0
    116            
    117            return emberAfInvalidImageId;
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x....             LDR.N    R1,??DataTable29_2
   \   0000003E   0x2210             MOVS     R2,#+16
   \   00000040   0x.... 0x....      BL       __aeabi_memcpy4
   \                     ??emAfOtaFindImageIdByIndex_2: (+1)
   \   00000044   0xB008             ADD      SP,SP,#+32
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
    118          }
    119          

   \                                 In section .text, align 2, keep-with-next
    120          void emAfOtaImageDelete(void)
    121          {
   \                     emAfOtaImageDelete: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
    122            int8u index = (int8u)emberUnsignedCommandArgument(0);
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000000A   0xB2C1             UXTB     R1,R0
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       emAfOtaFindImageIdByIndex
    123            EmberAfOtaImageId id = emAfOtaFindImageIdByIndex(index);
   \   00000012   0x.... 0x....      BL       ?Subroutine1
    124            EmberAfOtaStorageStatus status;
    125          
    126            status = emberAfOtaStorageDeleteImageCallback(&id);
   \                     ??CrossCallReturnLabel_23: (+1)
   \   00000016   0xA804             ADD      R0,SP,#+16
   \   00000018   0x.... 0x....      BL       emberAfOtaStorageDeleteImageCallback
    127            if (EMBER_AF_OTA_STORAGE_SUCCESS == status
    128                || EMBER_AF_OTA_STORAGE_OPERATION_IN_PROGRESS == status) {
   \   0000001C   0xB140             CBZ.N    R0,??emAfOtaImageDelete_0
   \   0000001E   0x2804             CMP      R0,#+4
   \   00000020   0xD108             BNE.N    ??emAfOtaImageDelete_1
   \   00000022   0x.... 0x....      ADR.W    R2,?_22
   \                     ??emAfOtaImageDelete_2: (+1)
   \   00000026   0x.... 0x....      ADR.W    R1,?_21
   \   0000002A   0x.... 0x....      BL       ?Subroutine0
    129              otaPrintln("Image delete%p.",
    130                         (EMBER_AF_OTA_STORAGE_OPERATION_IN_PROGRESS == status
    131                          ? " in progress"
    132                          : "d"));
    133              return;
   \                     ??CrossCallReturnLabel_1: (+1)
   \   0000002E   0xE006             B.N      ??emAfOtaImageDelete_3
   \                     ??emAfOtaImageDelete_0: (+1)
   \   00000030   0x....             ADR.N    R2,??DataTable29_1  ;; "d"
   \   00000032   0xE7F8             B.N      ??emAfOtaImageDelete_2
    134            }
    135            otaPrintln("Error: Failed to delete image.");
   \                     ??emAfOtaImageDelete_1: (+1)
   \   00000034   0x.... 0x....      ADR.W    R1,?_24
   \   00000038   0x2040             MOVS     R0,#+64
   \   0000003A   0x.... 0x....      BL       emberAfPrintln
    136          }
   \                     ??emAfOtaImageDelete_3: (+1)
   \   0000003E   0xB009             ADD      SP,SP,#+36
   \   00000040   0xBD00             POP      {PC}             ;; return
    137          

   \                                 In section .text, align 2, keep-with-next
    138          void emAfOtaReloadStorageDevice(void)
    139          {
    140          #if defined (EMBER_AF_PLUGIN_OTA_STORAGE_POSIX_FILESYSTEM)
    141            emAfOtaStorageClose();
    142          #endif
    143            
    144            emberAfOtaStorageInitCallback();
   \                     emAfOtaReloadStorageDevice: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfOtaStorageInitCallback
    145          }
    146          
    147          #define PRINT_BLOCK_LENGTH 64
    148          

   \                                 In section .text, align 2, keep-with-next
    149          void emAfOtaStorageDataPrint(void)
    150          {
   \                     emAfOtaStorageDataPrint: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB099             SUB      SP,SP,#+100
    151            int8u index = (int8u)emberUnsignedCommandArgument(0);
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000000A   0x4604             MOV      R4,R0
    152            int32u offset = emberUnsignedCommandArgument(1);
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000012   0x4605             MOV      R5,R0
   \   00000014   0xB2E1             UXTB     R1,R4
   \   00000016   0xA800             ADD      R0,SP,#+0
   \   00000018   0x.... 0x....      BL       emAfOtaFindImageIdByIndex
    153            EmberAfOtaImageId id = emAfOtaFindImageIdByIndex(index);
   \   0000001C   0x.... 0x....      BL       ?Subroutine1
    154            int32u actualLength;
    155            int8u data[PRINT_BLOCK_LENGTH];
    156            int8u extraLength;
    157          
    158            EmberAfOtaStorageStatus status = emberAfOtaStorageReadImageDataCallback(&id,
    159                                                                                    offset,
    160                                                                                    PRINT_BLOCK_LENGTH,
    161                                                                                    data,
    162                                                                                    &actualLength);
   \                     ??CrossCallReturnLabel_24: (+1)
   \   00000020   0xA801             ADD      R0,SP,#+4
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0xAB08             ADD      R3,SP,#+32
   \   00000026   0x2240             MOVS     R2,#+64
   \   00000028   0x4629             MOV      R1,R5
   \   0000002A   0xA804             ADD      R0,SP,#+16
   \   0000002C   0x.... 0x....      BL       emberAfOtaStorageReadImageDataCallback
    163            if (status) {
   \   00000030   0xB128             CBZ.N    R0,??emAfOtaStorageDataPrint_0
    164              otaPrintln("Error:  Could not read block: 0x%X.\n", status);
   \   00000032   0x4602             MOV      R2,R0
   \   00000034   0x.... 0x....      ADR.W    R1,?_25
   \   00000038   0x.... 0x....      BL       ?Subroutine0
    165              return;
   \                     ??CrossCallReturnLabel_0: (+1)
   \   0000003C   0xE015             B.N      ??emAfOtaStorageDataPrint_1
    166            }
    167          
    168            extraLength = actualLength % 8;
   \                     ??emAfOtaStorageDataPrint_0: (+1)
   \   0000003E   0x9801             LDR      R0,[SP, #+4]
   \   00000040   0xF000 0x0407      AND      R4,R0,#0x7
    169            emberAfPrint8ByteBlocks(actualLength / 8,
    170                                    data,
    171                                    TRUE); // CR between blocks?
   \   00000044   0x0540             LSLS     R0,R0,#+21
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0xA908             ADD      R1,SP,#+32
   \   0000004A   0x0E00             LSRS     R0,R0,#+24
   \   0000004C   0x.... 0x....      BL       emberAfPrint8ByteBlocks
    172            emberAfPrintBuffer(emberAfPrintActiveArea,
    173                               &(data[actualLength - extraLength]),
    174                               extraLength,
    175                               TRUE);  // with whitespace?
   \   00000050   0x9901             LDR      R1,[SP, #+4]
   \   00000052   0xA808             ADD      R0,SP,#+32
   \   00000054   0x1B09             SUBS     R1,R1,R4
   \   00000056   0x1809             ADDS     R1,R1,R0
   \   00000058   0x....             LDR.N    R0,??DataTable29_3
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x2301             MOVS     R3,#+1
   \   0000005E   0x4622             MOV      R2,R4
   \   00000060   0x.... 0x....      BL       emberAfPrintBuffer
    176            emberAfPrintTextLine("");
   \   00000064   0x....             ADR.N    R0,??DataTable29  ;; ""
   \   00000066   0x.... 0x....      BL       printTextLine
    177          }
   \                     ??emAfOtaStorageDataPrint_1: (+1)
   \   0000006A   0xB019             ADD      SP,SP,#+100
   \   0000006C   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \   00000000   0x64 0x00          DC8      "d",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_2:
   \   00000000   0x........         DC32     emberAfInvalidImageId

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_3:
   \   00000000   0x........         DC32     emberAfPrintActiveArea

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_13:
   \   00000000   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x49 0x6D          DC8 "Image %d"
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x20 0x20          DC8 "  ERROR: Could not get full header!"
   \              0x45 0x52    
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x43    
   \              0x6F 0x75    
   \              0x6C 0x64    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x67    
   \              0x65 0x74    
   \              0x20 0x66    
   \              0x75 0x6C    
   \              0x6C 0x20    
   \              0x68 0x65    
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x21 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x20          DC8 "  Header Version: 0x%2X"
   \              0x48 0x65    
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x20 0x56    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x20          DC8 "  Header Length:  %d bytes"
   \              0x48 0x65    
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x20 0x4C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x3A    
   \              0x20 0x20    
   \              0x25 0x64    
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x20 0x20          DC8 "  Field Control:  0x%2X"
   \              0x46 0x69    
   \              0x65 0x6C    
   \              0x64 0x20    
   \              0x43 0x6F    
   \              0x6E 0x74    
   \              0x72 0x6F    
   \              0x6C 0x3A    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x20 0x20          DC8 "  Manuf ID:       0x%2X"
   \              0x4D 0x61    
   \              0x6E 0x75    
   \              0x66 0x20    
   \              0x49 0x44    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x20 0x20          DC8 "  Image Type:     0x%2X"
   \              0x49 0x6D    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x54 0x79    
   \              0x70 0x65    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x20 0x20          DC8 "  Version:        0x%4X"
   \              0x56 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x34    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x20 0x20          DC8 "  Zigbee Version: 0x%2X"
   \              0x5A 0x69    
   \              0x67 0x62    
   \              0x65 0x65    
   \              0x20 0x56    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x20 0x20          DC8 "  Header String:  %s"
   \              0x48 0x65    
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x20 0x53    
   \              0x74 0x72    
   \              0x69 0x6E    
   \              0x67 0x3A    
   \              0x20 0x20    
   \              0x25 0x73    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x20 0x20          DC8 "  Image Size:     %l bytes"
   \              0x49 0x6D    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x53 0x69    
   \              0x7A 0x65    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x25 0x6C    
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x20 0x20          DC8 "  Security Cred:  0x%X"
   \              0x53 0x65    
   \              0x63 0x75    
   \              0x72 0x69    
   \              0x74 0x79    
   \              0x20 0x43    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x20 0x20          DC8 "  Upgrade Dest:   "
   \              0x55 0x70    
   \              0x67 0x72    
   \              0x61 0x64    
   \              0x65 0x20    
   \              0x44 0x65    
   \              0x73 0x74    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x20 0x20          DC8 "  Min. HW Ver:    0x%2X"
   \              0x4D 0x69    
   \              0x6E 0x2E    
   \              0x20 0x48    
   \              0x57 0x20    
   \              0x56 0x65    
   \              0x72 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x20 0x20          DC8 "  Max. HW Ver:    0x%2X"
   \              0x4D 0x61    
   \              0x78 0x2E    
   \              0x20 0x48    
   \              0x57 0x20    
   \              0x56 0x65    
   \              0x72 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x20 0x20          DC8 "  Total Tags: %d"
   \              0x54 0x6F    
   \              0x74 0x61    
   \              0x6C 0x20    
   \              0x54 0x61    
   \              0x67 0x73    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x20 0x20          DC8 "    Tag: 0x%2X"
   \              0x20 0x20    
   \              0x54 0x61    
   \              0x67 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x20 0x20          DC8 "      Length: %l"
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x4C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x3A 0x20    
   \              0x25 0x6C    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x45 0x72          DC8 "Error: Could not obtain tag info from image."
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x43    
   \              0x6F 0x75    
   \              0x6C 0x64    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x6F    
   \              0x62 0x74    
   \              0x61 0x69    
   \              0x6E 0x20    
   \              0x74 0x61    
   \              0x67 0x20    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x20 0x66    
   \              0x72 0x6F    
   \              0x6D 0x20    
   \              0x69 0x6D    
   \              0x61 0x67    
   \              0x65 0x2E    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x0A 0x25          DC8 "\012%d images in OTA storage."
   \              0x64 0x20    
   \              0x69 0x6D    
   \              0x61 0x67    
   \              0x65 0x73    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x4F 0x54    
   \              0x41 0x20    
   \              0x73 0x74    
   \              0x6F 0x72    
   \              0x61 0x67    
   \              0x65 0x2E    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x49 0x6D          DC8 "Image delete%p."
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x64 0x65    
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x25 0x70    
   \              0x2E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x20 0x69          DC8 " in progress"
   \              0x6E 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x45 0x72          DC8 "Error: Failed to delete image."
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x74 0x6F    
   \              0x20 0x64    
   \              0x65 0x6C    
   \              0x65 0x74    
   \              0x65 0x20    
   \              0x69 0x6D    
   \              0x61 0x67    
   \              0x65 0x2E    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x45 0x72          DC8 "Error:  Could not read block: 0x%X.\012"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x20    
   \              0x43 0x6F    
   \              0x75 0x6C    
   \              0x64 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x20 0x62    
   \              0x6C 0x6F    
   \              0x63 0x6B    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x2E 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_23:
   \   00000000   0x64 0x00          DC8 "d"
    178          
    179          
    180          #endif // defined (EMBER_AF_PLUGIN_OTA_STORAGE_COMMON)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   emAfOtaFindImageIdByIndex
        48   -> __aeabi_memcpy4
        48   -> emberAfIsOtaImageIdValid
        48   -> emberAfOtaStorageIteratorFirstCallback
        48   -> emberAfOtaStorageIteratorNextCallback
      40   emAfOtaImageDelete
        40   -> __aeabi_memcpy4
        40   -> emAfOtaFindImageIdByIndex
        40   -> emberAfOtaStorageDeleteImageCallback
        40   -> emberAfPrintln
        40   -> emberUnsignedCommandArgument
     224   emAfOtaPrintAllImages
       224   -> __aeabi_memcpy4
       224   -> emAfOtaStorageReadAllTagInfo
       224   -> emberAfIsOtaImageIdValid
       224   -> emberAfOtaStorageGetCountCallback
       224   -> emberAfOtaStorageGetFullHeaderCallback
       224   -> emberAfOtaStorageIteratorFirstCallback
       224   -> emberAfOtaStorageIteratorNextCallback
       224   -> emberAfPrint
       224   -> emberAfPrintBigEndianEui64
       224   -> emberAfPrintEnabled
       224   -> emberAfPrintln
       0   emAfOtaReloadStorageDevice
         0   -> emberAfOtaStorageInitCallback
     112   emAfOtaStorageDataPrint
       112   -> __aeabi_memcpy4
       112   -> emAfOtaFindImageIdByIndex
       112   -> emberAfOtaStorageReadImageDataCallback
       112   -> emberAfPrint8ByteBlocks
       112   -> emberAfPrintBuffer
       112   -> emberAfPrintln
       112   -> emberUnsignedCommandArgument
       112   -> printTextLine


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable29_2
       4  ??DataTable29_3
       6  ?Subroutine0
      10  ?Subroutine1
      12  ?_0
      36  ?_1
      28  ?_10
      24  ?_11
      20  ?_12
       1  ?_13
      24  ?_14
      24  ?_15
      20  ?_16
      16  ?_17
      20  ?_18
      48  ?_19
      24  ?_2
      28  ?_20
      16  ?_21
      16  ?_22
       2  ?_23
      32  ?_24
      40  ?_25
      28  ?_3
      24  ?_4
      24  ?_5
      24  ?_6
      24  ?_7
      24  ?_8
      24  ?_9
      72  emAfOtaFindImageIdByIndex
      66  emAfOtaImageDelete
     392  emAfOtaPrintAllImages
       4  emAfOtaReloadStorageDevice
     110  emAfOtaStorageDataPrint

 
     3 bytes in section .rodata
 1 276 bytes in section .text
 
 1 276 bytes of CODE  memory
     3 bytes of CONST memory

Errors: none
Warnings: none
