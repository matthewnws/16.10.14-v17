###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:08
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\concentrator\concentrator-support.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\concentrator\concentrator-support.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"concentrator-support.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\concentrator\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\concentrator-support.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\concentrator-support.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\concentrator\concentrator-support.c
      1          // *****************************************************************************
      2          // * concentrator-support.c
      3          // *
      4          // * Code common to SOC and host to handle periodically broadcasting
      5          // * many-to-one route requests (MTORRs).
      6          // *
      7          // * Copyright 2012 by Ember Corporation. All rights reserved.              *80*
      8          // *****************************************************************************
      9          
     10          #include "app/framework/include/af.h"
     11          #include "app/util/source-route-common.h"
     12          #include "concentrator-support.h"
     13          // *****************************************************************************
     14          // Globals
     15          

   \                                 In section .bss, align 1
     16          static int8u routeErrorCount = 0;
   \                     routeErrorCount:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
     17          static int8u deliveryFailureCount = 0;
     18          
     19          #define MIN_QS (EMBER_AF_PLUGIN_CONCENTRATOR_MIN_TIME_BETWEEN_BROADCASTS_SECONDS << 2)
     20          #define MAX_QS (EMBER_AF_PLUGIN_CONCENTRATOR_MAX_TIME_BETWEEN_BROADCASTS_SECONDS << 2)
     21          
     22          #if (MIN_QS > MAX_QS)
     23            #error "Minimum broadcast time must be less than max (EMBER_PLUGIN_CONCENTRATOR_MIN_TIME_BETWEEN_BROADCASTS_SECONDS < EMBER_PLUGIN_CONCENTRATOR_MAX_TIME_BETWEEN_BROADCASTS_SECONDS)"
     24          #endif
     25          
     26          // Handy values to make the code more readable.
     27          #define USE_MIN_TIME TRUE
     28          #define USE_MAX_TIME FALSE
     29          

   \                                 In section .bss, align 4
     30          EmberEventControl emberAfPluginConcentratorUpdateEventControl;
   \                     emberAfPluginConcentratorUpdateEventControl:
   \   00000000                      DS8 8
     31          
     32          // Use a shorter name to make the code more readable
     33          #define myEvent emberAfPluginConcentratorUpdateEventControl
     34          
     35          #ifndef EMBER_AF_HAS_ROUTER_NETWORK
     36            #error "Concentrator support only allowed on routers and coordinators."
     37          #endif
     38          
     39          //This is used to store the sourceRouteOverhead to our last sender
     40          //It defaults to 0xFF if no valid sourceRoute is found. When available, it 
     41          //is used once to prevent the overhead of calling ezspGetSourceRouteOverhead()
     42          //and cleared subsequently. 
     43          #if defined(EZSP_HOST) && defined(EMBER_AF_PLUGIN_CONCENTRATOR_NCP_SUPPORT)
     44            static EmberNodeId targetId          = EMBER_UNKNOWN_NODE_ID;
     45            static int8u sourceRouteOverhead     = EZSP_SOURCE_ROUTE_OVERHEAD_UNKNOWN;
     46          #endif
     47          
     48          // *****************************************************************************
     49          // Functions
     50          

   \                                 In section .text, align 2, keep-with-next
     51          static int32u queueRouteDiscovery(boolean useMinTime)
     52          {
   \                     queueRouteDiscovery: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     53            int32u timeLeftQS = (useMinTime ? MIN_QS : MAX_QS); 
   \   00000002   0x....             LDR.N    R2,??DataTable6
   \   00000004   0xB928             CBNZ.N   R0,??queueRouteDiscovery_0
   \   00000006   0x24F0             MOVS     R4,#+240
     54          
     55            // NOTE:  Since timeToExecute is always in MS we must convert MIN_QS => MIN_MS
     56            if (useMinTime 
     57                && (myEvent.timeToExecute > 0)
     58                && (myEvent.timeToExecute < (MIN_QS * 250))) {
     59          
     60              // Do nothing.  Our queued event will fire shortly.
     61              // We don't want to reset its time and actually delay
     62              // when it will fire.
     63              timeLeftQS = myEvent.timeToExecute >> 2;
     64          
     65            } else {
     66              emberEventControlSetDelayQS(myEvent,
     67                                          timeLeftQS);
   \                     ??queueRouteDiscovery_1: (+1)
   \   00000008   0x4621             MOV      R1,R4
   \   0000000A   0x4610             MOV      R0,R2
   \   0000000C   0x.... 0x....      BL       emEventControlSetDelayQS
   \   00000010   0xE00A             B.N      ??queueRouteDiscovery_2
     68            }
   \                     ??queueRouteDiscovery_0: (+1)
   \   00000012   0x6850             LDR      R0,[R2, #+4]
   \   00000014   0x2428             MOVS     R4,#+40
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD0F6             BEQ.N    ??queueRouteDiscovery_1
   \   0000001A   0xF242 0x7110      MOVW     R1,#+10000
   \   0000001E   0x4288             CMP      R0,R1
   \   00000020   0xD2F2             BCS.N    ??queueRouteDiscovery_1
   \   00000022   0x0884             LSRS     R4,R0,#+2
     69             
     70            // Tell the caller we have approximately 1 quarter second left
     71            // even though we actually have less than that.  This lets them plan their
     72            // for events that are waiting to fire based on the MTORR.
     73            return (timeLeftQS > 0
     74                    ? timeLeftQS
     75                    : 1);
   \   00000024   0xBF08             IT       EQ 
   \   00000026   0x2401             MOVEQ    R4,#+1
   \                     ??queueRouteDiscovery_2: (+1)
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
     76          }
     77          

   \                                 In section .text, align 2, keep-with-next
     78          int32u emberAfPluginConcentratorQueueDiscovery(void)
     79          {
     80            return queueRouteDiscovery(USE_MIN_TIME);
   \                     emberAfPluginConcentratorQueueDiscovery: (+1)
   \   00000000   0x....             B.N      ?Subroutine1
     81          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x....             B.N      queueRouteDiscovery
     82          

   \                                 In section .text, align 2, keep-with-next
     83          void emberAfPluginConcentratorInitCallback(void)
     84          {
   \                     emberAfPluginConcentratorInitCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     85            sourceRouteInit();
   \   00000002   0x.... 0x....      BL       sourceRouteInit
     86          #if (!defined(EZSP_HOST) || !defined(EMBER_AF_PLUGIN_CONCENTRATOR_NCP_SUPPORT))
     87              queueRouteDiscovery(USE_MAX_TIME);
   \   00000006   0x....             B.N      ?Subroutine0
     88          #endif
     89          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xE8BD 0x4002      POP      {R1,LR}
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             B.N      queueRouteDiscovery
     90          

   \                                 In section .text, align 2, keep-with-next
     91          void emberAfPluginConcentratorNcpInitCallback(void)
     92          {
     93          #if defined(EZSP_HOST) && defined(EMBER_AF_PLUGIN_CONCENTRATOR_NCP_SUPPORT)
     94              ezspSetConcentrator(TRUE,
     95                                  EMBER_AF_PLUGIN_CONCENTRATOR_CONCENTRATOR_TYPE,
     96                                  EMBER_AF_PLUGIN_CONCENTRATOR_MIN_TIME_BETWEEN_BROADCASTS_SECONDS,
     97                                  EMBER_AF_PLUGIN_CONCENTRATOR_MAX_TIME_BETWEEN_BROADCASTS_SECONDS,
     98                                  EMBER_AF_PLUGIN_CONCENTRATOR_ROUTE_ERROR_THRESHOLD,
     99                                  EMBER_AF_PLUGIN_CONCENTRATOR_DELIVERY_FAILURE_THRESHOLD,
    100                                  EMBER_AF_PLUGIN_CONCENTRATOR_MAX_HOPS);
    101          #endif
    102          }
   \                     emberAfPluginConcentratorNcpInitCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    103          

   \                                 In section .text, align 2, keep-with-next
    104          void emberAfPluginConcentratorStopDiscovery(void)
    105          {
    106            emberEventControlSetInactive(myEvent);
   \                     emberAfPluginConcentratorStopDiscovery: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable6
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7001             STRB     R1,[R0, #+0]
    107            myEvent.timeToExecute = 0;
   \   00000006   0x6041             STR      R1,[R0, #+4]
    108            emberAfCorePrintln("Concentrator advertisements stopped."); 
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x.... 0x....      ADR.W    R1,?_0
   \   0000000E   0x.... 0x....      B.W      emberAfPrintln
    109          }
    110          

   \                                 In section .text, align 2, keep-with-next
    111          static void routeErrorCallback(EmberStatus status)
    112          {
    113            if (status == EMBER_SOURCE_ROUTE_FAILURE 
    114                || status == EMBER_MANY_TO_ONE_ROUTE_FAILURE) {
   \                     routeErrorCallback: (+1)
   \   00000000   0x28A9             CMP      R0,#+169
   \   00000002   0xBF18             IT       NE 
   \   00000004   0x28AA             CMPNE    R0,#+170
   \   00000006   0xD109             BNE.N    ??routeErrorCallback_0
    115              routeErrorCount += 1;
   \   00000008   0x....             LDR.N    R0,??DataTable6_1
   \   0000000A   0x7801             LDRB     R1,[R0, #+0]
   \   0000000C   0x1C49             ADDS     R1,R1,#+1
   \   0000000E   0x7001             STRB     R1,[R0, #+0]
    116              if (routeErrorCount >= EMBER_AF_PLUGIN_CONCENTRATOR_ROUTE_ERROR_THRESHOLD) {
   \   00000010   0xB2C9             UXTB     R1,R1
   \   00000012   0x2903             CMP      R1,#+3
   \   00000014   0xBFA4             ITT      GE 
    117                emberAfPluginConcentratorQueueDiscovery();
   \   00000016   0x2001             MOVGE    R0,#+1
   \   00000018   0x.... 0x....      BGE.W    queueRouteDiscovery
    118              }
    119            }
    120          }
   \                     ??routeErrorCallback_0: (+1)
   \   0000001C   0x4770             BX       LR               ;; return
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void emberAfPluginConcentratorMessageSentCallback(EmberOutgoingMessageType type,
    123                                                            int16u indexOrDestination,
    124                                                            EmberApsFrame *apsFrame,
    125                                                            EmberStatus status,
    126                                                            int16u messageLength,
    127                                                            int8u *messageContents)
    128          {
    129            if ((type == EMBER_OUTGOING_DIRECT
    130                 || type == EMBER_OUTGOING_VIA_ADDRESS_TABLE
    131                 || type == EMBER_OUTGOING_VIA_BINDING)
    132                && status == EMBER_DELIVERY_FAILED) {
   \                     emberAfPluginConcentratorMessageSentCallback: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xBF1C             ITT      NE 
   \   00000004   0x2801             CMPNE    R0,#+1
   \   00000006   0x2802             CMPNE    R0,#+2
   \   00000008   0xD10B             BNE.N    ??emberAfPluginConcentratorMessageSentCallback_0
   \   0000000A   0x2B66             CMP      R3,#+102
   \   0000000C   0xD109             BNE.N    ??emberAfPluginConcentratorMessageSentCallback_0
    133              deliveryFailureCount += 1;
   \   0000000E   0x....             LDR.N    R0,??DataTable6_1
   \   00000010   0x7841             LDRB     R1,[R0, #+1]
   \   00000012   0x1C49             ADDS     R1,R1,#+1
   \   00000014   0x7041             STRB     R1,[R0, #+1]
    134              if (deliveryFailureCount >= EMBER_AF_PLUGIN_CONCENTRATOR_DELIVERY_FAILURE_THRESHOLD) {
   \   00000016   0xB2C9             UXTB     R1,R1
   \   00000018   0x2900             CMP      R1,#+0
   \   0000001A   0xBF1C             ITT      NE 
    135                emberAfPluginConcentratorQueueDiscovery();
   \   0000001C   0x2001             MOVNE    R0,#+1
   \   0000001E   0x.... 0x....      BNE.W    queueRouteDiscovery
    136              }
    137            }
    138          }
   \                     ??emberAfPluginConcentratorMessageSentCallback_0: (+1)
   \   00000022   0x4770             BX       LR               ;; return
    139          
    140          // We only store one valid overhead for one destination. We don't want to overwrite that with
    141          // an invalid source route to another destination. We do however want to invalidate an 
    142          // overhead to our destination if it is now unknown.

   \                                 In section .text, align 2, keep-with-next
    143          void emberAfSetSourceRouteOverheadCallback(EmberNodeId destination, int8u overhead)
    144          {
    145            #if defined(EZSP_HOST) && defined(EMBER_AF_PLUGIN_CONCENTRATOR_NCP_SUPPORT)
    146              if(!(destination != targetId && overhead == EZSP_SOURCE_ROUTE_OVERHEAD_UNKNOWN)) {
    147                targetId = destination;
    148                sourceRouteOverhead = overhead;
    149              }
    150            #endif
    151          }
   \                     emberAfSetSourceRouteOverheadCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    152          
    153          // In an effort to reduce the traffic between the host and NCP, for each incoming message, 
    154          // the sourceRouteOverhead to that particular destination is sent from the NCP to the host 
    155          // as a part of the incomingMessageHandler(). This information is cached and can be used 
    156          // once to calculate the MaximumPayload() to that same destination. It is invalidated after
    157          // one use.

   \                                 In section .text, align 2, keep-with-next
    158          int8u emberAfGetSourceRouteOverheadCallback(EmberNodeId destination)
    159          {
    160          #if defined(EZSP_HOST) 
    161            #if defined(EMBER_AF_PLUGIN_CONCENTRATOR_NCP_SUPPORT)
    162              if(targetId == destination && sourceRouteOverhead != EZSP_SOURCE_ROUTE_OVERHEAD_UNKNOWN){
    163                emberAfDebugPrintln("ValidSourceRouteFound %u ",sourceRouteOverhead);
    164                return sourceRouteOverhead;
    165              } else{
    166                return ezspGetSourceRouteOverhead(destination);
    167              }
    168            #else
    169              return ezspGetSourceRouteOverhead(destination);
    170            #endif
    171          #else
    172            return emberGetSourceRouteOverhead(destination);
   \                     emberAfGetSourceRouteOverheadCallback: (+1)
   \   00000000   0x.... 0x....      B.W      emberGetSourceRouteOverhead
    173          #endif
    174          }
    175          

   \                                 In section .text, align 4, keep-with-next
    176          void emberAfPluginConcentratorUpdateEventHandler(void)
    177          {
   \                     emberAfPluginConcentratorUpdateEventHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    178            routeErrorCount = 0;
   \   00000002   0x4801             LDR.N    R0,??emberAfPluginConcentratorUpdateEventHandler_0
   \   00000004   0xE002             B.N      ??emberAfPluginConcentratorUpdateEventHandler_1
   \   00000006   0xBF00             Nop      
   \                     ??emberAfPluginConcentratorUpdateEventHandler_0:
   \   00000008   0x........         DC32     routeErrorCount
   \                     ??emberAfPluginConcentratorUpdateEventHandler_1: (+1)
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x7001             STRB     R1,[R0, #+0]
    179            deliveryFailureCount = 0;
   \   00000010   0x7041             STRB     R1,[R0, #+1]
    180            if (EMBER_SUCCESS
    181                == emberSendManyToOneRouteRequest(EMBER_AF_PLUGIN_CONCENTRATOR_CONCENTRATOR_TYPE, 
    182                                                  EMBER_AF_PLUGIN_CONCENTRATOR_MAX_HOPS)) {
   \   00000012   0xF64F 0x70F8      MOVW     R0,#+65528
   \   00000016   0x.... 0x....      BL       emberSendManyToOneRouteRequest
   \   0000001A   0xB930             CBNZ.N   R0,??emberAfPluginConcentratorUpdateEventHandler_2
    183              emberAfDebugPrintln("send MTORR");
   \   0000001C   0x.... 0x....      ADR.W    R1,?_1
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       emberAfPrintln
    184              emberAfPluginConcentratorBroadcastSentCallback();
   \   00000026   0x.... 0x....      BL       emberAfPluginConcentratorBroadcastSentCallback
    185            }
    186            queueRouteDiscovery(USE_MAX_TIME);
   \                     ??emberAfPluginConcentratorUpdateEventHandler_2: (+1)
   \   0000002A                      REQUIRE ?Subroutine0
   \   0000002A                      ;; // Fall through to label ?Subroutine0
    187          }
    188          

   \                                 In section .text, align 2, keep-with-next
    189          void emberIncomingRouteErrorHandler(EmberStatus status, EmberNodeId target)
    190          {
    191            routeErrorCallback(status);
   \                     emberIncomingRouteErrorHandler: (+1)
   \   00000000   0x....             B.N      routeErrorCallback
    192          }
    193          

   \                                 In section .text, align 2, keep-with-next
    194          void ezspIncomingRouteErrorHandler(EmberStatus status, EmberNodeId target)
    195          {
    196            routeErrorCallback(status);
   \                     ezspIncomingRouteErrorHandler: (+1)
   \   00000000   0x....             B.N      routeErrorCallback
    197          }
    198          

   \                                 In section .text, align 2, keep-with-next
    199          void emberAfPluginConcentratorStackStatusCallback(EmberStatus status)
    200          {
    201            if (status == EMBER_NETWORK_DOWN
    202                && !emberStackIsPerformingRejoin()) {
   \                     emberAfPluginConcentratorStackStatusCallback: (+1)
   \   00000000   0x2891             CMP      R0,#+145
   \   00000002   0xD000             BEQ.N    ??emberAfPluginConcentratorStackStatusCallback_0
   \   00000004   0x4770             BX       LR
   \                     ??emberAfPluginConcentratorStackStatusCallback_0: (+1)
   \   00000006   0xB580             PUSH     {R7,LR}
   \   00000008   0x.... 0x....      BL       emberStackIsPerformingRejoin
   \   0000000C   0xB940             CBNZ.N   R0,??emberAfPluginConcentratorStackStatusCallback_1
    203              emberAfCorePrintln("Clearing source route table.");
   \   0000000E   0x.... 0x....      ADR.W    R1,?_2
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x.... 0x....      BL       emberAfPrintln
    204              sourceRouteClearTable();    
   \   00000018   0xE8BD 0x4001      POP      {R0,LR}
   \   0000001C   0x.... 0x....      B.W      sourceRouteClearTable
    205            }
    206          }
   \                     ??emberAfPluginConcentratorStackStatusCallback_1: (+1)
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    207          
    208          //------------------------------------------------------------------------------
    209          // These functions are defined for legacy support for the software using the old
    210          // app/util/concentrator/ names.
    211          // I would really like to #define the old function names to the new ones,
    212          // but creating a real function with the same name will cause a duplicate symbol 
    213          // error to occur if both this plugin and the old code are included.  Users can then
    214          // remove the app/util/concentrator code from their project to prevent confusion
    215          // and redundancy.

   \                                 In section .text, align 2, keep-with-next
    216          int32u emberConcentratorQueueRouteDiscovery(void)
   \                     emberConcentratorQueueRouteDiscovery: (+1)
   \   00000000   0xBF00             Nop      
    217          {
    218            return emberAfPluginConcentratorQueueDiscovery();
   \   00000002                      REQUIRE ?Subroutine1
   \   00000002                      ;; // Fall through to label ?Subroutine1
    219          }
    220          

   \                                 In section .text, align 2, keep-with-next
    221          void emberConcentratorStartDiscovery(void)
    222          {
    223            emberAfPluginConcentratorInitCallback();  
   \                     emberConcentratorStartDiscovery: (+1)
   \   00000000   0x....             B.N      emberAfPluginConcentratorInitCallback
    224          }
    225          

   \                                 In section .text, align 2, keep-with-next
    226          void emberConcentratorStopDiscovery(void)
    227          {
    228            emberAfPluginConcentratorStopDiscovery();  
   \                     emberConcentratorStopDiscovery: (+1)
   \   00000000   0x....             B.N      emberAfPluginConcentratorStopDiscovery
    229          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     emberAfPluginConcentratorUpdateEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     routeErrorCount

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x43 0x6F          DC8 "Concentrator advertisements stopped."
   \              0x6E 0x63    
   \              0x65 0x6E    
   \              0x74 0x72    
   \              0x61 0x74    
   \              0x6F 0x72    
   \              0x20 0x61    
   \              0x64 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x73 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x73 0x20    
   \              0x73 0x74    
   \              0x6F 0x70    
   \              0x70 0x65    
   \              0x64 0x2E    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x73 0x65          DC8 "send MTORR"
   \              0x6E 0x64    
   \              0x20 0x4D    
   \              0x54 0x4F    
   \              0x52 0x52    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x43 0x6C          DC8 "Clearing source route table."
   \              0x65 0x61    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x6F 0x75    
   \              0x72 0x63    
   \              0x65 0x20    
   \              0x72 0x6F    
   \              0x75 0x74    
   \              0x65 0x20    
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x65 0x2E    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    230          
    231          //------------------------------------------------------------------------------

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emberAfGetSourceRouteOverheadCallback
         0   -> emberGetSourceRouteOverhead
       8   emberAfPluginConcentratorInitCallback
         0   -> queueRouteDiscovery
         8   -> sourceRouteInit
       0   emberAfPluginConcentratorMessageSentCallback
         0   -> queueRouteDiscovery
       0   emberAfPluginConcentratorNcpInitCallback
       0   emberAfPluginConcentratorQueueDiscovery
         0   -> queueRouteDiscovery
       8   emberAfPluginConcentratorStackStatusCallback
         8   -> emberAfPrintln
         8   -> emberStackIsPerformingRejoin
       0   emberAfPluginConcentratorStopDiscovery
         0   -> emberAfPrintln
       8   emberAfPluginConcentratorUpdateEventHandler
         8   -> emberAfPluginConcentratorBroadcastSentCallback
         8   -> emberAfPrintln
         8   -> emberSendManyToOneRouteRequest
         0   -> queueRouteDiscovery
       0   emberAfSetSourceRouteOverheadCallback
       0   emberConcentratorQueueRouteDiscovery
         0   -> queueRouteDiscovery
       0   emberConcentratorStartDiscovery
         0   -> emberAfPluginConcentratorInitCallback
       0   emberConcentratorStopDiscovery
         0   -> emberAfPluginConcentratorStopDiscovery
       0   emberIncomingRouteErrorHandler
         0   -> routeErrorCallback
       0   ezspIncomingRouteErrorHandler
         0   -> routeErrorCallback
       8   queueRouteDiscovery
         8   -> emEventControlSetDelayQS
       0   routeErrorCallback
         0   -> queueRouteDiscovery


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       8  ?Subroutine0
       4  ?Subroutine1
      40  ?_0
      12  ?_1
      32  ?_2
       4  emberAfGetSourceRouteOverheadCallback
       8  emberAfPluginConcentratorInitCallback
      36  emberAfPluginConcentratorMessageSentCallback
       2  emberAfPluginConcentratorNcpInitCallback
       2  emberAfPluginConcentratorQueueDiscovery
      34  emberAfPluginConcentratorStackStatusCallback
      18  emberAfPluginConcentratorStopDiscovery
       8  emberAfPluginConcentratorUpdateEventControl
      42  emberAfPluginConcentratorUpdateEventHandler
       2  emberAfSetSourceRouteOverheadCallback
       2  emberConcentratorQueueRouteDiscovery
       2  emberConcentratorStartDiscovery
       2  emberConcentratorStopDiscovery
       2  emberIncomingRouteErrorHandler
       2  ezspIncomingRouteErrorHandler
      44  queueRouteDiscovery
      30  routeErrorCallback
       2  routeErrorCount
          deliveryFailureCount

 
  10 bytes in section .bss
 336 bytes in section .text
 
 336 bytes of CODE memory
  10 bytes of DATA memory

Errors: none
Warnings: none
