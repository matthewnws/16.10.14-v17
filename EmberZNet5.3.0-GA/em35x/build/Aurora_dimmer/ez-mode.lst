###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:34:14
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ezmode-commissioning\ez-mode.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ezmode-commissioning\ez-mode.c"
#        -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"ez-mode.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ezmode-commissioning\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\ez-mode.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\ez-mode.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ezmode-commissioning\ez-mode.c
      1          // *****************************************************************************
      2          // * ez-mode.c
      3          // *
      4          // * This file provides a function set for initiating ez-mode commissioning
      5          // * as both a client and a server.
      6          // *
      7          // * Copyright 2013 Silicon Laboratories, Inc.                              *80*
      8          // *****************************************************************************
      9          
     10          #include "app/framework/include/af.h"
     11          #include "app/framework/util/af-main.h"
     12          #include "ez-mode.h"
     13          
     14          //------------------------------------------------------------------------------
     15          // Forward Declaration
     16          

   \                                 In section .bss, align 4
     17          EmberEventControl emberAfPluginEzmodeCommissioningStateEventControl;
     18          static void serviceDiscoveryCallback(const EmberAfServiceDiscoveryResult *result);
     19          static void createBinding(int8u *address);
     20          
     21          //------------------------------------------------------------------------------
     22          // Globals
     23          
     24          #define stateEvent emberAfPluginEzmodeCommissioningStateEventControl
     25          
     26          static int8u currentIdentifyingEndpoint;
   \                     currentIdentifyingEndpoint:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 1
   \   00000003                      DS8 1
   \   00000004                      DS8 1
   \   00000005                      DS8 1
   \   00000006                      DS8 2
   \                     emberAfPluginEzmodeCommissioningStateEventControl:
   \   00000008                      DS8 8
   \   00000010                      DS8 2
   \   00000012                      DS8 2
   \   00000014                      DS8 4
     27          static EmberNodeId currentIdentifyingAddress;
     28          
     29          static int8u ezmodeClientEndpoint;
     30          
     31          static EmberAfEzModeCommissioningDirection bindingDirection;
     32          static const int16u* clusterIdsForEzModeMatch;
     33          static int8u clusterIdsForEzModeMatchLength;
     34          static int16u ezmodeClientCluster;
     35          static int8u bindingIndex;
     36          
     37          typedef enum {
     38            EZMODE_OFF,
     39            EZMODE_BROAD_PJOIN,
     40            EZMODE_IDENTIFY,
     41            EZMODE_IDENTIFY_WAIT,
     42            EZMODE_MATCH,
     43            EZMODE_BIND,
     44            EZMODE_BOUND
     45          } EzModeState;
     46          
     47          static EzModeState ezModeState = EZMODE_OFF;
     48          
     49          // We assume the first endpoint is the one to use for end-device bind / EZ-Mode
     50          #define ENDPOINT_INDEX 0
     51          
     52          //------------------------------------------------------------------------------
     53          

   \                                 In section .text, align 2, keep-with-next
     54          static void complete(void)
     55          {
   \                     complete: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     56            emberAfPluginEzmodeCommissioningClientCompleteCallback(bindingIndex);
   \   00000002   0x....             LDR.N    R4,??DataTable13_1
   \   00000004   0x7920             LDRB     R0,[R4, #+4]
   \   00000006   0x.... 0x....      BL       emberAfPluginEzmodeCommissioningClientCompleteCallback
     57            ezModeState = EZMODE_OFF;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x7160             STRB     R0,[R4, #+5]
     58          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
     59          

   \                                 In section .text, align 2, keep-with-next
     60          static void identifyRequestMessageSentCallback(EmberOutgoingMessageType type,
     61                                                         int16u indexOrDestination,
     62                                                         EmberApsFrame *apsFrame,
     63                                                         int16u msgLen,
     64                                                         int8u *message,
     65                                                         EmberStatus status)
     66          {
   \                     identifyRequestMessageSentCallback: (+1)
   \   00000000   0xB082             SUB      SP,SP,#+8
     67            if (status == EMBER_SUCCESS) {
   \   00000002   0x9803             LDR      R0,[SP, #+12]
   \   00000004   0xB940             CBNZ.N   R0,??identifyRequestMessageSentCallback_0
     68              ezModeState = EZMODE_IDENTIFY_WAIT;
   \   00000006   0x....             LDR.N    R0,??DataTable13_1
   \   00000008   0x2103             MOVS     R1,#+3
   \   0000000A   0x7141             STRB     R1,[R0, #+5]
     69              emberEventControlSetDelayMS(stateEvent,
     70                                          (10 * MILLISECOND_TICKS_PER_SECOND));
   \   0000000C   0x3008             ADDS     R0,R0,#+8
   \   0000000E   0xF44F 0x5120      MOV      R1,#+10240
   \   00000012   0xB002             ADD      SP,SP,#+8
   \   00000014   0x.... 0x....      B.W      emEventControlSetDelayMS
     71            } else {
     72              complete();
   \                     ??identifyRequestMessageSentCallback_0: (+1)
   \   00000018   0xB002             ADD      SP,SP,#+8
   \   0000001A   0x....             B.N      complete
     73            }
     74          }
     75          

   \                                 In section .text, align 4, keep-with-next
     76          void emberAfPluginEzmodeCommissioningStateEventHandler(void) {
     77            EmberStatus status;
     78            EmberEUI64 add;
     79            emberEventControlSetInactive(stateEvent);
   \                     emberAfPluginEzmodeCommissioningStateEventHandler: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xB530             PUSH     {R4,R5,LR}
   \   00000004   0x....             LDR.N    R4,??DataTable13_1
     80            switch (ezModeState) {
   \   00000006   0x.... 0x....      ADR.W    R5,serviceDiscoveryCallback
   \   0000000A   0x7220             STRB     R0,[R4, #+8]
   \   0000000C   0xB083             SUB      SP,SP,#+12
   \   0000000E   0x7960             LDRB     R0,[R4, #+5]
   \   00000010   0x1E40             SUBS     R0,R0,#+1
   \   00000012   0x2805             CMP      R0,#+5
   \   00000014   0xD853             BHI.N    ??emberAfPluginEzmodeCommissioningStateEventHan_1
   \   00000016   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_0:
   \   0000001A   0x03 0x14          DC8      0x3,0x14,0x2C,0x2F
   \              0x2C 0x2F    
   \   0000001E   0x39 0x4C          DC8      0x39,0x4C
     81              case EZMODE_BROAD_PJOIN:
     82                emberAfCorePrintln("<ezmode bpjoin>");
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_2: (+1)
   \   00000020   0x.... 0x....      ADR.W    R1,?_0
   \   00000024   0x.... 0x....      BL       ?Subroutine0
     83                emAfPermitJoin(180, TRUE); //Send out a broadcast pjoin
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x20B4             MOVS     R0,#+180
   \   0000002C   0x.... 0x....      BL       emAfPermitJoin
     84                ezModeState = EZMODE_IDENTIFY;
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x7160             STRB     R0,[R4, #+5]
     85                emberEventControlSetDelayMS(stateEvent, MILLISECOND_TICKS_PER_SECOND);
   \   00000034   0xF44F 0x6180      MOV      R1,#+1024
   \   00000038   0xF104 0x0008      ADD      R0,R4,#+8
   \   0000003C   0x.... 0x....      BL       emEventControlSetDelayMS
     86                break;
   \   00000040   0xBD37             POP      {R0-R2,R4,R5,PC}
     87              case EZMODE_IDENTIFY:
     88                emberAfCorePrintln("<ezmode identify>");
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_3: (+1)
   \   00000042   0x.... 0x....      ADR.W    R1,?_1
   \   00000046   0x.... 0x....      BL       ?Subroutine0
     89                emAfPermitJoin(180, TRUE); //Send out a broadcast pjoin
   \                     ??CrossCallReturnLabel_3: (+1)
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x20B4             MOVS     R0,#+180
   \   0000004E   0x.... 0x....      BL       emAfPermitJoin
     90                emberAfFillCommandIdentifyClusterIdentifyQuery();
   \   00000052   0x....             ADR.N    R3,??DataTable13  ;; ""
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x2103             MOVS     R1,#+3
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       emberAfFillExternalBuffer
     91                emberAfSetCommandEndpoints(ezmodeClientEndpoint,
     92                                           EMBER_BROADCAST_ENDPOINT);
   \   0000005E   0x7860             LDRB     R0,[R4, #+1]
   \   00000060   0x21FF             MOVS     R1,#+255
   \   00000062   0x.... 0x....      BL       emberAfSetCommandEndpoints
     93                status = emberAfSendCommandBroadcastWithCallback(EMBER_SLEEPY_BROADCAST_ADDRESS,
     94                                                                 identifyRequestMessageSentCallback);
     95                if (status != EMBER_SUCCESS) {
   \   00000066   0x....             LDR.N    R1,??DataTable13_2
   \   00000068   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000006C   0x.... 0x....      BL       emberAfSendCommandBroadcastWithCallback
   \   00000070   0xE01D             B.N      ??emberAfPluginEzmodeCommissioningStateEventHan_4
     96                  complete();
     97                }
     98                break;
     99              case EZMODE_IDENTIFY_WAIT:
    100                emberAfCorePrintln("<ezmode identify timeout>");
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_5: (+1)
   \   00000072   0x.... 0x....      ADR.W    R1,?_3
   \   00000076   0xE01E             B.N      ??emberAfPluginEzmodeCommissioningStateEventHan_6
    101                complete();
    102                break;
    103              case EZMODE_MATCH:
    104                emberAfCorePrintln("<ezmode match>");
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_7: (+1)
   \   00000078   0x.... 0x....      ADR.W    R1,?_4
   \   0000007C   0x.... 0x....      BL       ?Subroutine0
    105                status = emberAfFindClustersByDeviceAndEndpoint(currentIdentifyingAddress,
    106                                                                currentIdentifyingEndpoint,
    107                                                                serviceDiscoveryCallback);
    108                if (status != EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000080   0x7821             LDRB     R1,[R4, #+0]
   \   00000082   0x8A20             LDRH     R0,[R4, #+16]
   \   00000084   0x462A             MOV      R2,R5
   \   00000086   0x.... 0x....      BL       emberAfFindClustersByDeviceAndEndpoint
   \   0000008A   0xE010             B.N      ??emberAfPluginEzmodeCommissioningStateEventHan_4
    109                  complete();
    110                }
    111                break;
    112              case EZMODE_BIND:
    113                emberAfCorePrintln("<ezmode bind>");
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_8: (+1)
   \   0000008C   0x.... 0x....      ADR.W    R1,?_5
   \   00000090   0x.... 0x....      BL       ?Subroutine0
    114                status = emberLookupEui64ByNodeId(currentIdentifyingAddress, add);
    115                if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000094   0x8A20             LDRH     R0,[R4, #+16]
   \   00000096   0xA900             ADD      R1,SP,#+0
   \   00000098   0x.... 0x....      BL       emberLookupEui64ByNodeId
   \   0000009C   0xB918             CBNZ.N   R0,??emberAfPluginEzmodeCommissioningStateEventHan_9
    116                  createBinding(add);
   \   0000009E   0xA800             ADD      R0,SP,#+0
   \   000000A0   0x.... 0x....      BL       createBinding
   \   000000A4   0xBD37             POP      {R0-R2,R4,R5,PC}
    117                } else {
    118                  status = emberAfFindIeeeAddress(currentIdentifyingAddress,
    119                                                  serviceDiscoveryCallback);
    120                  if (status != EMBER_SUCCESS) {
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_9: (+1)
   \   000000A6   0x8A20             LDRH     R0,[R4, #+16]
   \   000000A8   0x4629             MOV      R1,R5
   \   000000AA   0x.... 0x....      BL       emberAfFindIeeeAddress
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_4: (+1)
   \   000000AE   0xB130             CBZ.N    R0,??emberAfPluginEzmodeCommissioningStateEventHan_1
    121                    complete();
   \   000000B0   0xE003             B.N      ??CrossCallReturnLabel_0
    122                  }
    123                }
    124                break;
    125              case EZMODE_BOUND:
    126                emberAfCorePrintln("<ezmode bound>");
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_10: (+1)
   \   000000B2   0x.... 0x....      ADR.W    R1,?_6
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_6: (+1)
   \   000000B6   0x.... 0x....      BL       ?Subroutine0
    127                complete();
   \                     ??CrossCallReturnLabel_0: (+1)
   \   000000BA   0x.... 0x....      BL       complete
    128                break;
    129              default:
    130                break;
    131            }
    132          }
   \                     ??emberAfPluginEzmodeCommissioningStateEventHan_1: (+1)
   \   000000BE   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    133          
    134          /** EZ-MODE CLIENT **/
    135          /**
    136           * Kicks off the ezmode commissioning process by sending out
    137           * an identify query command to the given endpoint
    138           *
    139           * input:
    140           *   endpoint:
    141           *   direction: server to client / client to server
    142           *   clusterIds: list of cluster ids. *NOTE* The API only keeps the pointer to
    143           *     to the data structure. The data is expected to exist throughout the
    144           *     ezmode-commissioning calls.
    145           *   clusterIdsLength: # of ids defined in clusterIds
    146           */

   \                                 In section .text, align 2, keep-with-next
    147          EmberStatus emberAfEzmodeClientCommission(int8u endpoint,
    148                                                    EmberAfEzModeCommissioningDirection direction,
    149                                                    int16u* clusterIds,
    150                                                    int8u  clusterIdsLength) {
   \                     emberAfEzmodeClientCommission: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    151            // sanity check inputs...
    152            if (!clusterIds){
   \   00000002   0xB90A             CBNZ.N   R2,??emberAfEzmodeClientCommission_0
    153              return EMBER_BAD_ARGUMENT;
   \   00000004   0x2002             MOVS     R0,#+2
   \   00000006   0xBD32             POP      {R1,R4,R5,PC}
    154            }
    155          
    156            bindingIndex = EMBER_NULL_BINDING;
   \                     ??emberAfEzmodeClientCommission_0: (+1)
   \   00000008   0x....             LDR.N    R4,??DataTable13_1
   \   0000000A   0x25FF             MOVS     R5,#+255
   \   0000000C   0x7125             STRB     R5,[R4, #+4]
    157            bindingDirection = direction;
   \   0000000E   0x70A1             STRB     R1,[R4, #+2]
    158            clusterIdsForEzModeMatchLength = clusterIdsLength;
   \   00000010   0x70E3             STRB     R3,[R4, #+3]
    159          
    160            if (clusterIdsLength > 0){
   \   00000012   0xB903             CBNZ.N   R3,??emberAfEzmodeClientCommission_1
    161              clusterIdsForEzModeMatch = clusterIds;
    162            } else {
    163              clusterIdsForEzModeMatch = NULL;
   \   00000014   0x2200             MOVS     R2,#+0
    164            }
    165          
    166            ezmodeClientEndpoint = endpoint;
   \                     ??emberAfEzmodeClientCommission_1: (+1)
   \   00000016   0x7060             STRB     R0,[R4, #+1]
   \   00000018   0x6162             STR      R2,[R4, #+20]
    167            ezModeState = EZMODE_BROAD_PJOIN;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x7160             STRB     R0,[R4, #+5]
    168            emberEventControlSetActive(stateEvent);
   \   0000001E   0xF104 0x0008      ADD      R0,R4,#+8
   \   00000022   0x.... 0x....      BL       emEventControlSetActive
    169            return EMBER_SUCCESS;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    170          }
    171          

   \                                 In section .text, align 2, keep-with-next
    172          boolean emberAfIdentifyClusterIdentifyQueryResponseCallback(int16u timeout)
    173          {
   \                     emberAfIdentifyClusterIdentifyQueryResponseCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    174            // ignore our own broadcast and only take the first identify
    175            if (emberAfGetNodeId() != emberAfCurrentCommand()->source) {
   \   00000004   0x.... 0x....      BL       emberAfGetNodeId
   \   00000008   0x....             LDR.N    R1,??DataTable13_3
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0x88CA             LDRH     R2,[R1, #+6]
   \   0000000E   0x4290             CMP      R0,R2
   \   00000010   0xD010             BEQ.N    ??emberAfIdentifyClusterIdentifyQueryResponseCa_0
    176              if (ezModeState == EZMODE_IDENTIFY_WAIT && timeout != 0) {
   \   00000012   0x....             LDR.N    R0,??DataTable13_1
   \   00000014   0x7943             LDRB     R3,[R0, #+5]
   \   00000016   0x2B03             CMP      R3,#+3
   \   00000018   0xD109             BNE.N    ??emberAfIdentifyClusterIdentifyQueryResponseCa_1
   \   0000001A   0xB144             CBZ.N    R4,??emberAfIdentifyClusterIdentifyQueryResponseCa_1
    177                currentIdentifyingAddress = emberAfCurrentCommand()->source;
   \   0000001C   0x8202             STRH     R2,[R0, #+16]
    178                currentIdentifyingEndpoint = emberAfCurrentCommand()->apsFrame->sourceEndpoint;
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x7909             LDRB     R1,[R1, #+4]
   \   00000022   0x7001             STRB     R1,[R0, #+0]
    179                ezModeState = EZMODE_MATCH;
   \   00000024   0x2104             MOVS     R1,#+4
   \   00000026   0x7141             STRB     R1,[R0, #+5]
    180                emberEventControlSetActive(stateEvent);
   \   00000028   0x3008             ADDS     R0,R0,#+8
   \   0000002A   0x.... 0x....      BL       emEventControlSetActive
    181              }
    182              emberAfSendImmediateDefaultResponse(EMBER_ZCL_STATUS_SUCCESS);
   \                     ??emberAfIdentifyClusterIdentifyQueryResponseCa_1: (+1)
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       emberAfSendImmediateDefaultResponse
    183            }
    184            return TRUE;
   \                     ??emberAfIdentifyClusterIdentifyQueryResponseCa_0: (+1)
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0xBD10             POP      {R4,PC}          ;; return
    185          }
    186          

   \                                 In section .text, align 2, keep-with-next
    187          static void createBinding(int8u *address) {
   \                     createBinding: (+1)
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    188            // create binding
    189            int8u i;
    190            EmberBindingTableEntry candidate;
    191            EmberStatus status;
                               ^
Warning[Pe177]: variable "status" was declared but never referenced
    192              
    193            // first look for a duplicate binding, we should not add duplicates
    194            for (i = 0; i < EMBER_BINDING_TABLE_SIZE; i++) {
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x....             LDR.N    R6,??DataTable13_1
    195              if (emberGetBinding(i, &candidate) == EMBER_SUCCESS
    196                  && candidate.type == EMBER_UNICAST_BINDING
    197                  && candidate.local == ezmodeClientEndpoint
    198                  && candidate.clusterId == ezmodeClientCluster
    199                  && candidate.remote == currentIdentifyingEndpoint
    200                  && MEMCOMPARE(candidate.identifier,  address, EUI64_SIZE) == 0) {
   \                     ??createBinding_0: (+1)
   \   00000008   0xA900             ADD      R1,SP,#+0
   \   0000000A   0x4628             MOV      R0,R5
   \   0000000C   0x.... 0x....      BL       emberGetBinding
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xBF04             ITT      EQ 
   \   00000014   0xF89D 0x0000      LDRBEQ   R0,[SP, #+0]
   \   00000018   0x2801             CMPEQ    R0,#+1
   \   0000001A   0xD115             BNE.N    ??createBinding_1
   \   0000001C   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   00000020   0x7871             LDRB     R1,[R6, #+1]
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xBF02             ITTT     EQ 
   \   00000026   0xF8BD 0x0002      LDRHEQ   R0,[SP, #+2]
   \   0000002A   0x8A71             LDRHEQ   R1,[R6, #+18]
   \   0000002C   0x4288             CMPEQ    R0,R1
   \   0000002E   0xBF02             ITTT     EQ 
   \   00000030   0xF89D 0x0004      LDRBEQ   R0,[SP, #+4]
   \   00000034   0x7831             LDRBEQ   R1,[R6, #+0]
   \   00000036   0x4288             CMPEQ    R0,R1
   \   00000038   0xD106             BNE.N    ??createBinding_1
   \   0000003A   0x2208             MOVS     R2,#+8
   \   0000003C   0x4621             MOV      R1,R4
   \   0000003E   0xF10D 0x0005      ADD      R0,SP,#+5
   \   00000042   0x.... 0x....      BL       halCommonMemCompare
   \   00000046   0xB348             CBZ.N    R0,??createBinding_2
    201                bindingIndex = i;
    202                ezModeState = EZMODE_BOUND;
    203                emberEventControlSetActive(stateEvent);
    204                return;
    205              }
    206            }
   \                     ??createBinding_1: (+1)
   \   00000048   0x1C6D             ADDS     R5,R5,#+1
   \   0000004A   0xB2ED             UXTB     R5,R5
   \   0000004C   0x2D08             CMP      R5,#+8
   \   0000004E   0xDBDB             BLT.N    ??createBinding_0
    207          
    208            for (i = 0; i < EMBER_BINDING_TABLE_SIZE; i++) {
   \   00000050   0x2500             MOVS     R5,#+0
    209              if (emberGetBinding(i, &candidate) == EMBER_SUCCESS
    210                  && candidate.type == EMBER_UNUSED_BINDING) {
   \                     ??createBinding_3: (+1)
   \   00000052   0xA900             ADD      R1,SP,#+0
   \   00000054   0x4628             MOV      R0,R5
   \   00000056   0x.... 0x....      BL       emberGetBinding
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xBF04             ITT      EQ 
   \   0000005E   0xF89D 0x0000      LDRBEQ   R0,[SP, #+0]
   \   00000062   0x2800             CMPEQ    R0,#+0
   \   00000064   0xD122             BNE.N    ??createBinding_4
    211                candidate.type = EMBER_UNICAST_BINDING;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0xF88D 0x0000      STRB     R0,[SP, #+0]
    212                candidate.local = ezmodeClientEndpoint;
    213                candidate.remote = currentIdentifyingEndpoint;
    214                candidate.clusterId = ezmodeClientCluster;
    215                MEMCOPY(candidate.identifier, address, EUI64_SIZE);
   \   0000006C   0x2208             MOVS     R2,#+8
   \   0000006E   0x7870             LDRB     R0,[R6, #+1]
   \   00000070   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   00000074   0x4621             MOV      R1,R4
   \   00000076   0x7830             LDRB     R0,[R6, #+0]
   \   00000078   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   0000007C   0x8A70             LDRH     R0,[R6, #+18]
   \   0000007E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   00000082   0xF10D 0x0005      ADD      R0,SP,#+5
   \   00000086   0x.... 0x....      BL       halCommonMemCopy
    216                if (emberSetBinding(i, &candidate) == EMBER_SUCCESS) {
   \   0000008A   0xA900             ADD      R1,SP,#+0
   \   0000008C   0x4628             MOV      R0,R5
   \   0000008E   0x.... 0x....      BL       emberSetBinding
   \   00000092   0xB958             CBNZ.N   R0,??createBinding_4
    217                  emberSetBindingRemoteNodeId(i, currentIdentifyingAddress);
   \   00000094   0x8A31             LDRH     R1,[R6, #+16]
   \   00000096   0x4628             MOV      R0,R5
   \   00000098   0x.... 0x....      BL       emberSetBindingRemoteNodeId
    218                  bindingIndex = i;
    219                  ezModeState = EZMODE_BOUND;
   \                     ??createBinding_2: (+1)
   \   0000009C   0x2006             MOVS     R0,#+6
   \   0000009E   0x7170             STRB     R0,[R6, #+5]
   \   000000A0   0x7135             STRB     R5,[R6, #+4]
    220                  emberEventControlSetActive(stateEvent);
   \   000000A2   0xF106 0x0008      ADD      R0,R6,#+8
   \   000000A6   0x.... 0x....      BL       emEventControlSetActive
    221                  return;
   \   000000AA   0xBD7F             POP      {R0-R6,PC}
    222                }
    223              }
    224            }
   \                     ??createBinding_4: (+1)
   \   000000AC   0x1C6D             ADDS     R5,R5,#+1
   \   000000AE   0xB2ED             UXTB     R5,R5
   \   000000B0   0x2D08             CMP      R5,#+8
   \   000000B2   0xDBCE             BLT.N    ??createBinding_3
    225          
    226            complete();
   \   000000B4   0x.... 0x....      BL       complete
    227          }
   \   000000B8   0xBD7F             POP      {R0-R6,PC}       ;; return
    228          

   \                                 In section .text, align 4, keep-with-next
    229          static void serviceDiscoveryCallback(const EmberAfServiceDiscoveryResult *result)
    230          { 
    231            int8u i = 0;
    232            int8u j = 0;
    233            if (emberAfHaveDiscoveryResponseStatus(result->status)) {
   \                     serviceDiscoveryCallback: (+1)
   \   00000000   0x7802             LDRB     R2,[R0, #+0]
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x07D2             LSLS     R2,R2,#+31
   \   00000006   0xBF58             IT       PL 
   \   00000008   0x.... 0x....      BPL.W    complete
    234              if (result->zdoRequestClusterId == SIMPLE_DESCRIPTOR_REQUEST) {
   \   0000000C   0xB570             PUSH     {R4-R6,LR}
   \   0000000E   0x8842             LDRH     R2,[R0, #+2]
   \   00000010   0x2A04             CMP      R2,#+4
   \   00000012   0xD125             BNE.N    ??serviceDiscoveryCallback_0
    235                EmberAfClusterList *list = (EmberAfClusterList*)result->responseData;
    236                int8u clusterCount;
    237                const int16u* clusterList;
    238          
    239                // decide where to create the binding (server/client)
    240                if (bindingDirection == EMBER_AF_EZMODE_COMMISSIONING_CLIENT_TO_SERVER){
   \   00000014   0x....             LDR.N    R2,??DataTable13_1
   \   00000016   0x7893             LDRB     R3,[R2, #+2]
   \   00000018   0x6880             LDR      R0,[R0, #+8]
   \   0000001A   0x2B01             CMP      R3,#+1
   \   0000001C   0xBF19             ITTEE    NE 
   \   0000001E   0x7A03             LDRBNE   R3,[R0, #+8]
   \   00000020   0x68C0             LDRNE    R0,[R0, #+12]
   \   00000022   0x7803             LDRBEQ   R3,[R0, #+0]
   \   00000024   0x6840             LDREQ    R0,[R0, #+4]
    241                  clusterCount = list->inClusterCount;
    242                  clusterList = list->inClusterList;
    243                } else { // EMBER_AF_EZMODE_COMMISSIONING_SERVER_TO_CLIENT
    244                  clusterCount = list->outClusterCount;
    245                  clusterList = list->outClusterList;
   \   00000026   0xE000             B.N      ??serviceDiscoveryCallback_1
    246                }
    247          
    248                for (i = 0; i < clusterCount; i++) {
   \                     ??serviceDiscoveryCallback_2: (+1)
   \   00000028   0x1C49             ADDS     R1,R1,#+1
   \                     ??serviceDiscoveryCallback_1: (+1)
   \   0000002A   0xB2C9             UXTB     R1,R1
   \   0000002C   0x460C             MOV      R4,R1
   \   0000002E   0x429C             CMP      R4,R3
   \   00000030   0xDA1C             BGE.N    ??serviceDiscoveryCallback_3
    249                  int16u cluster = clusterList[i];
   \   00000032   0xF830 0x4014      LDRH     R4,[R0, R4, LSL #+1]
    250                  for (j = 0; j < clusterIdsForEzModeMatchLength; j++) {
   \   00000036   0x2500             MOVS     R5,#+0
   \   00000038   0xE000             B.N      ??serviceDiscoveryCallback_4
   \                     ??serviceDiscoveryCallback_5: (+1)
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??serviceDiscoveryCallback_4: (+1)
   \   0000003C   0x78D6             LDRB     R6,[R2, #+3]
   \   0000003E   0xB2ED             UXTB     R5,R5
   \   00000040   0x42B5             CMP      R5,R6
   \   00000042   0xD2F1             BCS.N    ??serviceDiscoveryCallback_2
    251                    if (cluster == clusterIdsForEzModeMatch[j]) {
   \   00000044   0x6956             LDR      R6,[R2, #+20]
   \   00000046   0xF836 0x6015      LDRH     R6,[R6, R5, LSL #+1]
   \   0000004A   0x42B4             CMP      R4,R6
   \   0000004C   0xD1F5             BNE.N    ??serviceDiscoveryCallback_5
    252                      ezmodeClientCluster = cluster;
   \   0000004E   0x8254             STRH     R4,[R2, #+18]
    253                      ezModeState = EZMODE_BIND;
   \   00000050   0x2005             MOVS     R0,#+5
   \   00000052   0x7150             STRB     R0,[R2, #+5]
    254                      emberEventControlSetActive(stateEvent);
   \   00000054   0xF102 0x0008      ADD      R0,R2,#+8
   \   00000058   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000005C   0x.... 0x....      B.W      emEventControlSetActive
    255                      return;
    256                    }
    257                  }
    258                }
    259              } else if (result->zdoRequestClusterId == IEEE_ADDRESS_REQUEST) {
   \                     ??serviceDiscoveryCallback_0: (+1)
   \   00000060   0x2A01             CMP      R2,#+1
   \   00000062   0xD103             BNE.N    ??serviceDiscoveryCallback_3
    260                createBinding((int8u *)result->responseData);
   \   00000064   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000068   0x6880             LDR      R0,[R0, #+8]
   \   0000006A   0x....             B.N      createBinding
    261                return;
    262              }
    263            }
    264            complete();
   \                     ??serviceDiscoveryCallback_3: (+1)
   \   0000006C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000070   0x....             B.N      complete
    265          }
    266          
    267          
    268          /** EZ-MODE SERVER **/
    269          /**
    270           * Puts the device into identify mode for the given endpoint
    271           * this is all that an ezmode server is responsible for
    272           */
    273          

   \                                 In section .text, align 2, keep-with-next
    274          EmberStatus emberAfEzmodeServerCommission(int8u endpoint) {
    275            return emberAfEzmodeServerCommissionWithTimeout(endpoint, EMBER_AF_PLUGIN_EZMODE_COMMISSIONING_IDENTIFY_TIMEOUT);
   \                     emberAfEzmodeServerCommission: (+1)
   \   00000000   0x21B4             MOVS     R1,#+180
   \   00000002                      REQUIRE emberAfEzmodeServerCommissionWithTimeout
   \   00000002                      ;; // Fall through to label emberAfEzmodeServerCommissionWithTimeout
    276          }
    277          

   \                                 In section .text, align 2, keep-with-next
    278          EmberStatus emberAfEzmodeServerCommissionWithTimeout(int8u endpoint, int16u identifyTimeoutSeconds) {
   \                     emberAfEzmodeServerCommissionWithTimeout: (+1)
   \   00000000   0xB502             PUSH     {R1,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    279            EmberAfStatus afStatus;
    280            if ((identifyTimeoutSeconds < 1) || (identifyTimeoutSeconds > 254)){
   \   00000004   0xB159             CBZ.N    R1,??emberAfEzmodeServerCommissionWithTimeout_0
   \   00000006   0x29FF             CMP      R1,#+255
   \   00000008   0xDA09             BGE.N    ??emberAfEzmodeServerCommissionWithTimeout_0
    281              return EMBER_BAD_ARGUMENT;
    282            }
    283            afStatus =  emberAfWriteAttribute(endpoint,
    284                                              ZCL_IDENTIFY_CLUSTER_ID,
    285                                              ZCL_IDENTIFY_TIME_ATTRIBUTE_ID,
    286                                              CLUSTER_MASK_SERVER,
    287                                              (int8u *)&identifyTimeoutSeconds,
    288                                              ZCL_INT16U_ATTRIBUTE_TYPE);
    289            if (afStatus != EMBER_ZCL_STATUS_SUCCESS) {
   \   0000000A   0x2121             MOVS     R1,#+33
   \   0000000C   0x9101             STR      R1,[SP, #+4]
   \   0000000E   0x2340             MOVS     R3,#+64
   \   00000010   0xA902             ADD      R1,SP,#+8
   \   00000012   0x9100             STR      R1,[SP, #+0]
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2103             MOVS     R1,#+3
   \   00000018   0x.... 0x....      BL       emberAfWriteAttribute
   \   0000001C   0xB100             CBZ.N    R0,??emberAfEzmodeServerCommissionWithTimeout_1
    290              return EMBER_BAD_ARGUMENT;
   \                     ??emberAfEzmodeServerCommissionWithTimeout_0: (+1)
   \   0000001E   0x2002             MOVS     R0,#+2
    291            } else {
    292              return EMBER_SUCCESS;
   \                     ??emberAfEzmodeServerCommissionWithTimeout_1: (+1)
   \   00000020   0xBD0E             POP      {R1-R3,PC}       ;; return
    293            }
    294          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     currentIdentifyingEndpoint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     identifyRequestMessageSentCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     emAfCurrentCommand

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_2:
   \   00000000   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x3C 0x65          DC8 "<ezmode bpjoin>"
   \              0x7A 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x62 0x70    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x3E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x3C 0x65          DC8 "<ezmode identify>"
   \              0x7A 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x69 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x3C 0x65          DC8 "<ezmode identify timeout>"
   \              0x7A 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x69 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x6F    
   \              0x75 0x74    
   \              0x3E 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x3C 0x65          DC8 "<ezmode match>"
   \              0x7A 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x3E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x3C 0x65          DC8 "<ezmode bind>"
   \              0x7A 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x3E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x3C 0x65          DC8 "<ezmode bound>"
   \              0x7A 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x62 0x6F    
   \              0x75 0x6E    
   \              0x64 0x3E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   complete
         8   -> emberAfPluginEzmodeCommissioningClientCompleteCallback
      32   createBinding
        32   -> complete
        32   -> emEventControlSetActive
        32   -> emberGetBinding
        32   -> emberSetBinding
        32   -> emberSetBindingRemoteNodeId
        32   -> halCommonMemCompare
        32   -> halCommonMemCopy
      16   emberAfEzmodeClientCommission
        16   -> emEventControlSetActive
       0   emberAfEzmodeServerCommission
         0   -> emberAfEzmodeServerCommissionWithTimeout
      16   emberAfEzmodeServerCommissionWithTimeout
        16   -> emberAfWriteAttribute
       8   emberAfIdentifyClusterIdentifyQueryResponseCallback
         8   -> emEventControlSetActive
         8   -> emberAfGetNodeId
         8   -> emberAfSendImmediateDefaultResponse
      24   emberAfPluginEzmodeCommissioningStateEventHandler
        24   -> complete
        24   -> createBinding
        24   -> emAfPermitJoin
        24   -> emEventControlSetDelayMS
        24   -> emberAfFillExternalBuffer
        24   -> emberAfFindClustersByDeviceAndEndpoint
        24   -> emberAfFindIeeeAddress
        24   -> emberAfPrintln
        24   -> emberAfSendCommandBroadcastWithCallback
        24   -> emberAfSetCommandEndpoints
        24   -> emberLookupEui64ByNodeId
       8   identifyRequestMessageSentCallback
         0   -> complete
      16   serviceDiscoveryCallback
         0   -> complete


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_2
       4  ??DataTable13_3
       6  ?Subroutine0
      16  ?_0
      20  ?_1
       1  ?_2
      28  ?_3
      16  ?_4
      16  ?_5
      16  ?_6
      16  complete
     186  createBinding
      24  currentIdentifyingEndpoint
          ezmodeClientEndpoint
          bindingDirection
          clusterIdsForEzModeMatchLength
          bindingIndex
          ezModeState
          emberAfPluginEzmodeCommissioningStateEventControl
          currentIdentifyingAddress
          ezmodeClientCluster
          clusterIdsForEzModeMatch
      42  emberAfEzmodeClientCommission
       2  emberAfEzmodeServerCommission
      34  emberAfEzmodeServerCommissionWithTimeout
      56  emberAfIdentifyClusterIdentifyQueryResponseCallback
     192  emberAfPluginEzmodeCommissioningStateEventHandler
      28  identifyRequestMessageSentCallback
     114  serviceDiscoveryCallback

 
  24 bytes in section .bss
   1 byte  in section .rodata
 804 bytes in section .text
 
 804 bytes of CODE  memory
   1 byte  of CONST memory
  24 bytes of DATA  memory

Errors: none
Warnings: 1
