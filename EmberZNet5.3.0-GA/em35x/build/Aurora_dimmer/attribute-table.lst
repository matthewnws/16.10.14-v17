###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        14/Oct/2016  17:33:53
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\util\attribute-table.c
#    Command line =  
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\framework\util\attribute-table.c" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer_tokens.h\""
#        -D "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_dimmer.h\""
#        -D APP_BTL -D "BOARD_HEADER=\"../../../16.10.14
#        v17/EmberZNet5.3.0-GA/em35x/app/builder/Aurora_dimmer/Aurora_dimmer_board.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D CORTEXM3
#        -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_config.h\""
#        -D "__SOURCEFILE__=\"attribute-table.c\"" -lC
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --diag_suppress Pa050 -o
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\util\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\include\"
#        -I "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\stack\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\" -I
#        "C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\..\..\..\16.09.23
#        Fixedonoff\EmberZNet5.3.0-GA\em35x\hal\..\" -Ohz --use_c++_inline
#    List file    =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\attribute-table.lst
#    Object file  =  
#        C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH
#        ETRX357\16.10.14
#        v17\EmberZNet5.3.0-GA\em35x\build\Aurora_dimmer\attribute-table.o
#
###############################################################################

C:\Users\matthew.shing\Documents\Projects\AONE ZigBee Dimmer\AUCH ETRX357\16.10.14 v17\EmberZNet5.3.0-GA\em35x\app\framework\util\attribute-table.c
      1          // *******************************************************************
      2          // * attribute-table.c
      3          // *
      4          // * This file contains the code to manipulate the Smart Energy attribute
      5          // * table.  This handles external calls to read/write the table, as
      6          // * well as internal ones.
      7          // *
      8          // * Copyright 2008 by Ember Corporation. All rights reserved.              *80*
      9          // *******************************************************************
     10          
     11          // this file contains all the common includes for clusters in the zcl-util
     12          #include "common.h"
     13          
     14          #include "attribute-storage.h"
     15          
     16          // for pulling in defines dealing with EITHER server or client
     17          #include "af-main.h"
     18          
     19          #include "enums.h"
     20          
     21          //------------------------------------------------------------------------------
     22          
     23          
     24          //------------------------------------------------------------------------------
     25          // External Declarations
     26          
     27          //------------------------------------------------------------------------------
     28          // Forward Declarations
     29          
     30          //------------------------------------------------------------------------------
     31          // Globals
     32          
     33          

   \                                 In section .text, align 2, keep-with-next
     34          EmberAfStatus emberAfWriteAttributeExternal(int8u endpoint,
     35                                                      EmberAfClusterId cluster,
     36                                                      EmberAfAttributeId attributeID,
     37                                                      int8u mask,
     38                                                      int16u manufacturerCode,
     39                                                      int8u* dataPtr,
     40                                                      EmberAfAttributeType dataType)
     41          {
   \                     emberAfWriteAttributeExternal: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x9F0F             LDR      R7,[SP, #+60]
   \   00000008   0x9D10             LDR      R5,[SP, #+64]
   \   0000000A   0x9C0E             LDR      R4,[SP, #+56]
     42            EmberAfAttributeWritePermission extWritePermission
     43              = emberAfAllowNetworkWriteAttributeCallback(endpoint, 
     44                                                          cluster,
     45                                                          attributeID,
     46                                                          mask,
     47                                                          manufacturerCode,
     48                                                          dataPtr,
     49                                                          dataType);
   \   0000000C   0x9502             STR      R5,[SP, #+8]
   \   0000000E   0x9701             STR      R7,[SP, #+4]
   \   00000010   0x4606             MOV      R6,R0
   \   00000012   0x468A             MOV      R10,R1
   \   00000014   0x4690             MOV      R8,R2
   \   00000016   0x4699             MOV      R9,R3
   \   00000018   0x9400             STR      R4,[SP, #+0]
   \   0000001A   0x.... 0x....      BL       emberAfAllowNetworkWriteAttributeCallback
     50            switch (extWritePermission){
   \   0000001E   0xB118             CBZ.N    R0,??emberAfWriteAttributeExternal_0
   \   00000020   0x2802             CMP      R0,#+2
   \   00000022   0xD003             BEQ.N    ??emberAfWriteAttributeExternal_1
   \   00000024   0xD302             BCC.N    ??emberAfWriteAttributeExternal_1
   \   00000026   0xE010             B.N      ??emberAfWriteAttributeExternal_2
     51            case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_DENY_WRITE:
     52              return EMBER_ZCL_STATUS_FAILURE;
   \                     ??emberAfWriteAttributeExternal_0: (+1)
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0xE00E             B.N      ??emberAfWriteAttributeExternal_2
     53              break;
     54            case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_NORMAL:
     55            case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY:
     56              return emAfWriteAttribute(endpoint,
     57                                          cluster,
     58                                          attributeID,
     59                                          mask,
     60                                          manufacturerCode,
     61                                          dataPtr,
     62                                          dataType,
     63                                          (extWritePermission
     64                                          == EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY),
     65                                          FALSE);
   \                     ??emberAfWriteAttributeExternal_1: (+1)
   \   0000002C   0xBF0C             ITE      EQ 
   \   0000002E   0x2001             MOVEQ    R0,#+1
   \   00000030   0x2000             MOVNE    R0,#+0
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x9104             STR      R1,[SP, #+16]
   \   00000036   0x9003             STR      R0,[SP, #+12]
   \   00000038   0x9502             STR      R5,[SP, #+8]
   \   0000003A   0x9701             STR      R7,[SP, #+4]
   \   0000003C   0x9400             STR      R4,[SP, #+0]
   \   0000003E   0x464B             MOV      R3,R9
   \   00000040   0x4642             MOV      R2,R8
   \   00000042   0x4651             MOV      R1,R10
   \   00000044   0x4630             MOV      R0,R6
   \   00000046   0x.... 0x....      BL       emAfWriteAttribute
     66              break;
     67            default:
     68              return (EmberAfStatus)extWritePermission;
   \                     ??emberAfWriteAttributeExternal_2: (+1)
   \   0000004A   0xB006             ADD      SP,SP,#+24
   \   0000004C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
     69              break;
     70            }
     71          }
     72          
     73          //@deprecated use emberAfWriteServerAttribute or emberAfWriteClientAttribute

   \                                 In section .text, align 2, keep-with-next
     74          EmberAfStatus emberAfWriteAttribute(int8u endpoint,
     75                                              EmberAfClusterId cluster,
     76                                              EmberAfAttributeId attributeID,
     77                                              int8u mask,
     78                                              int8u* dataPtr,
     79                                              EmberAfAttributeType dataType)
     80          {
   \                     emberAfWriteAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     81            return emAfWriteAttribute(endpoint,
     82                                      cluster,
     83                                      attributeID,
     84                                      mask,
     85                                      EMBER_AF_NULL_MANUFACTURER_CODE,
     86                                      dataPtr,
     87                                      dataType,
     88                                      TRUE,   // override read-only?
     89                                      FALSE); // just test?
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x9404             STR      R4,[SP, #+16]
   \   00000008   0x2401             MOVS     R4,#+1
   \   0000000A   0x9403             STR      R4,[SP, #+12]
   \   0000000C   0x9C09             LDR      R4,[SP, #+36]
   \   0000000E   0x9402             STR      R4,[SP, #+8]
   \   00000010   0x9C08             LDR      R4,[SP, #+32]
   \   00000012   0x9401             STR      R4,[SP, #+4]
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0x9400             STR      R4,[SP, #+0]
   \   00000018   0x....             B.N      ??Subroutine8_0
     90          }

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine8_0: (+1)
   \   00000000   0x.... 0x....      BL       emAfWriteAttribute
   \   00000004   0xB006             ADD      SP,SP,#+24
   \   00000006   0xBD10             POP      {R4,PC}          ;; return
     91          

   \                                 In section .text, align 2, keep-with-next
     92          EmberAfStatus emberAfWriteClientAttribute(int8u endpoint,
     93                                                    EmberAfClusterId cluster,
     94                                                    EmberAfAttributeId attributeID,
     95                                                    int8u* dataPtr,
     96                                                    EmberAfAttributeType dataType)
     97          {
   \                     emberAfWriteClientAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     98            return emAfWriteAttribute(endpoint,
     99                                      cluster,
    100                                      attributeID,
    101                                      CLUSTER_MASK_CLIENT,
    102                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    103                                      dataPtr,
    104                                      dataType,
    105                                      TRUE,   // override read-only?
    106                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000008   0x2380             MOVS     R3,#+128
   \   0000000A   0x....             B.N      ??Subroutine8_0
    107          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2400             MOVS     R4,#+0
   \   00000002   0x9404             STR      R4,[SP, #+16]
   \   00000004   0x9301             STR      R3,[SP, #+4]
   \   00000006   0x2401             MOVS     R4,#+1
   \   00000008   0x9403             STR      R4,[SP, #+12]
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
   \   0000000E   0x9300             STR      R3,[SP, #+0]
   \   00000010   0x9402             STR      R4,[SP, #+8]
   \   00000012   0x4770             BX       LR
    108          

   \                                 In section .text, align 2, keep-with-next
    109          EmberAfStatus emberAfWriteServerAttribute(int8u endpoint,
    110                                                    EmberAfClusterId cluster,
    111                                                    EmberAfAttributeId attributeID,
    112                                                    int8u* dataPtr,
    113                                                    EmberAfAttributeType dataType)
    114          {
   \                     emberAfWriteServerAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    115            return emAfWriteAttribute(endpoint,
    116                                      cluster,
    117                                      attributeID,
    118                                      CLUSTER_MASK_SERVER,
    119                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    120                                      dataPtr,
    121                                      dataType,
    122                                      TRUE,   // override read-only?
    123                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A   0x....             B.N      ??Subroutine8_0
    124          }
    125          

   \                                 In section .text, align 2, keep-with-next
    126          EmberAfStatus emberAfWriteManufacturerSpecificClientAttribute(int8u endpoint,
    127                                                                        EmberAfClusterId cluster,
    128                                                                        EmberAfAttributeId attributeID,
    129                                                                        int16u manufacturerCode,
    130                                                                        int8u* dataPtr,
    131                                                                        EmberAfAttributeType dataType)
    132          {
   \                     emberAfWriteManufacturerSpecificClientAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    133            return emAfWriteAttribute(endpoint,
    134                                      cluster,
    135                                      attributeID,
    136                                      CLUSTER_MASK_CLIENT,
    137                                      manufacturerCode,
    138                                      dataPtr,
    139                                      dataType,
    140                                      TRUE,   // override read-only?
    141                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000008   0x2380             MOVS     R3,#+128
   \   0000000A   0x....             B.N      ?Subroutine0
    142          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x9C09             LDR      R4,[SP, #+36]
   \   00000002   0x9402             STR      R4,[SP, #+8]
   \   00000004   0x9C08             LDR      R4,[SP, #+32]
   \   00000006   0x9401             STR      R4,[SP, #+4]
   \   00000008                      REQUIRE ??Subroutine8_0
   \   00000008                      ;; // Fall through to label ??Subroutine8_0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x2400             MOVS     R4,#+0
   \   00000002   0x9404             STR      R4,[SP, #+16]
   \   00000004   0x9300             STR      R3,[SP, #+0]
   \   00000006   0x2401             MOVS     R4,#+1
   \   00000008   0x9403             STR      R4,[SP, #+12]
   \   0000000A   0x4770             BX       LR
    143          

   \                                 In section .text, align 2, keep-with-next
    144          EmberAfStatus emberAfWriteManufacturerSpecificServerAttribute(int8u endpoint,
    145                                                                        EmberAfClusterId cluster,
    146                                                                        EmberAfAttributeId attributeID,
    147                                                                        int16u manufacturerCode,
    148                                                                        int8u* dataPtr,
    149                                                                        EmberAfAttributeType dataType)
    150          {
   \                     emberAfWriteManufacturerSpecificServerAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    151            return emAfWriteAttribute(endpoint,
    152                                      cluster,
    153                                      attributeID,
    154                                      CLUSTER_MASK_SERVER,
    155                                      manufacturerCode,
    156                                      dataPtr,
    157                                      dataType,
    158                                      TRUE,   // override read-only?
    159                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A                      REQUIRE ?Subroutine0
   \   0000000A                      ;; // Fall through to label ?Subroutine0
    160          }
    161          
    162          

   \                                 In section .text, align 2, keep-with-next
    163          EmberAfStatus emberAfVerifyAttributeWrite(int8u endpoint,
    164                                                    EmberAfClusterId cluster,
    165                                                    EmberAfAttributeId attributeID,
    166                                                    int8u mask,
    167                                                    int16u manufacturerCode,
    168                                                    int8u* dataPtr,
    169                                                    EmberAfAttributeType dataType)
    170          {
   \                     emberAfVerifyAttributeWrite: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    171            return emAfWriteAttribute(endpoint,
    172                                      cluster,
    173                                      attributeID,
    174                                      mask,
    175                                      manufacturerCode,
    176                                      dataPtr, 
    177                                      dataType,
    178                                      FALSE, // override read-only?
    179                                      TRUE); // just test?
   \   00000004   0x2401             MOVS     R4,#+1
   \   00000006   0x9404             STR      R4,[SP, #+16]
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x9403             STR      R4,[SP, #+12]
   \   0000000C   0x9C0A             LDR      R4,[SP, #+40]
   \   0000000E   0x9402             STR      R4,[SP, #+8]
   \   00000010   0x9C09             LDR      R4,[SP, #+36]
   \   00000012   0x9401             STR      R4,[SP, #+4]
   \   00000014   0x9C08             LDR      R4,[SP, #+32]
   \   00000016   0x9400             STR      R4,[SP, #+0]
   \   00000018   0x....             B.N      ??Subroutine8_0
    180          }
    181          

   \                                 In section .text, align 2, keep-with-next
    182          EmberAfStatus emberAfReadAttribute(int8u endpoint,
    183                                             EmberAfClusterId cluster,
    184                                             EmberAfAttributeId attributeID,
    185                                             int8u mask,
    186                                             int8u *dataPtr,
    187                                             int8u readLength,
    188                                             EmberAfAttributeType *dataType)
    189          {
   \                     emberAfReadAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    190            return emAfReadAttribute(endpoint,
    191                                     cluster,
    192                                     attributeID,
    193                                     mask,
    194                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    195                                     dataPtr,
    196                                     readLength,
    197                                     dataType);
   \   00000002   0x9C08             LDR      R4,[SP, #+32]
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x9C07             LDR      R4,[SP, #+28]
   \   00000008   0x9402             STR      R4,[SP, #+8]
   \   0000000A   0x9C06             LDR      R4,[SP, #+24]
   \   0000000C   0x9401             STR      R4,[SP, #+4]
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0x9400             STR      R4,[SP, #+0]
   \   00000012   0x....             B.N      ??Subroutine9_0
    198          }

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine9_0: (+1)
   \   00000000   0x.... 0x....      BL       emAfReadAttribute
   \   00000004   0xB004             ADD      SP,SP,#+16
   \   00000006   0xBD10             POP      {R4,PC}          ;; return
    199          
    200          

   \                                 In section .text, align 2, keep-with-next
    201          EmberAfStatus emberAfReadServerAttribute(int8u endpoint,
    202                                                   EmberAfClusterId cluster,
    203                                                   EmberAfAttributeId attributeID,
    204                                                   int8u* dataPtr,
    205                                                   int8u readLength)
    206          {
   \                     emberAfReadServerAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    207            return emAfReadAttribute(endpoint,
    208                                     cluster,
    209                                     attributeID,
    210                                     CLUSTER_MASK_SERVER,
    211                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    212                                     dataPtr,
    213                                     readLength,
    214                                     NULL); 
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000006   0x2340             MOVS     R3,#+64
   \   00000008   0x....             B.N      ??Subroutine9_0
    215          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x2400             MOVS     R4,#+0
   \   00000002   0x9301             STR      R3,[SP, #+4]
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x9C06             LDR      R4,[SP, #+24]
   \   0000000A   0x9300             STR      R3,[SP, #+0]
   \   0000000C   0x9402             STR      R4,[SP, #+8]
   \   0000000E   0x4770             BX       LR
    216          

   \                                 In section .text, align 2, keep-with-next
    217          EmberAfStatus emberAfReadClientAttribute(int8u endpoint,
    218                                                   EmberAfClusterId cluster,
    219                                                   EmberAfAttributeId attributeID,
    220                                                   int8u* dataPtr,
    221                                                   int8u readLength)
    222          {
   \                     emberAfReadClientAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    223            return emAfReadAttribute(endpoint,
    224                                     cluster,
    225                                     attributeID,
    226                                     CLUSTER_MASK_CLIENT,
    227                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    228                                     dataPtr,
    229                                     readLength,
    230                                     NULL); 
   \   00000002   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000006   0x2380             MOVS     R3,#+128
   \   00000008   0x....             B.N      ??Subroutine9_0
    231          }
    232          

   \                                 In section .text, align 2, keep-with-next
    233          EmberAfStatus emberAfReadManufacturerSpecificServerAttribute(int8u endpoint,
    234                                                                       EmberAfClusterId cluster,
    235                                                                       EmberAfAttributeId attributeID,
    236                                                                       int16u manufacturerCode,
    237                                                                       int8u* dataPtr,
    238                                                                       int8u readLength)
    239          {
   \                     emberAfReadManufacturerSpecificServerAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    240            return emAfReadAttribute(endpoint,
    241                                     cluster,
    242                                     attributeID,
    243                                     CLUSTER_MASK_SERVER,
    244                                     manufacturerCode,
    245                                     dataPtr,
    246                                     readLength,
    247                                     NULL);
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x9300             STR      R3,[SP, #+0]
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A   0x....             B.N      ?Subroutine1
    248          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x9C07             LDR      R4,[SP, #+28]
   \   00000002   0x9402             STR      R4,[SP, #+8]
   \   00000004   0x9C06             LDR      R4,[SP, #+24]
   \   00000006   0x9401             STR      R4,[SP, #+4]
   \   00000008                      REQUIRE ??Subroutine9_0
   \   00000008                      ;; // Fall through to label ??Subroutine9_0
    249          

   \                                 In section .text, align 2, keep-with-next
    250          EmberAfStatus emberAfReadManufacturerSpecificClientAttribute(int8u endpoint,
    251                                                                       EmberAfClusterId cluster,
    252                                                                       EmberAfAttributeId attributeID,
    253                                                                       int16u manufacturerCode,
    254                                                                       int8u* dataPtr,
    255                                                                       int8u readLength)
    256          {
   \                     emberAfReadManufacturerSpecificClientAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    257            return emAfReadAttribute(endpoint,
    258                                     cluster,
    259                                     attributeID,
    260                                     CLUSTER_MASK_CLIENT,
    261                                     manufacturerCode,
    262                                     dataPtr,
    263                                     readLength,
    264                                     NULL);                                     
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x9300             STR      R3,[SP, #+0]
   \   00000008   0x2380             MOVS     R3,#+128
   \   0000000A                      REQUIRE ?Subroutine1
   \   0000000A                      ;; // Fall through to label ?Subroutine1
    265          }
    266          

   \                                 In section .text, align 2, keep-with-next
    267          boolean emberAfReadSequentialAttributesAddToResponse(int8u endpoint,
    268                                                               EmberAfClusterId clusterId,
    269                                                               EmberAfAttributeId startAttributeId,
    270                                                               int8u mask,
    271                                                               int16u manufacturerCode,
    272                                                               int8u maxAttributeIds,
    273                                                               boolean includeAccessControl)
    274          {
   \                     emberAfReadSequentialAttributesAddToResponse: (+1)
   \   00000000   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \   00000004   0x4693             MOV      R11,R2
   \   00000006   0x469A             MOV      R10,R3
   \   00000008   0x4605             MOV      R5,R0
   \   0000000A   0x4688             MOV      R8,R1
    275            int16u i;
    276            int16u discovered = 0;
    277            int16u skipped = 0;
    278            int16u total = 0;
    279          
    280            EmberAfCluster *cluster = emberAfFindCluster(endpoint, clusterId, mask);
   \   0000000C   0x4652             MOV      R2,R10
   \   0000000E   0x.... 0x....      BL       emberAfFindCluster
   \   00000012   0x2400             MOVS     R4,#+0
   \   00000014   0x2600             MOVS     R6,#+0
   \   00000016   0x0007             MOVS     R7,R0
    281          
    282            EmberAfAttributeSearchRecord record;
    283            record.endpoint = endpoint;
    284            record.clusterId = clusterId;
    285            record.clusterMask = mask;
    286            record.attributeId = startAttributeId;
    287            record.manufacturerCode = manufacturerCode;
   \   00000018   0x980C             LDR      R0,[SP, #+48]
   \   0000001A   0xF88D 0x5000      STRB     R5,[SP, #+0]
   \   0000001E   0x46B1             MOV      R9,R6
   \   00000020   0xF8AD 0x8002      STRH     R8,[SP, #+2]
   \   00000024   0xF88D 0xA004      STRB     R10,[SP, #+4]
   \   00000028   0xF8AD 0xB006      STRH     R11,[SP, #+6]
   \   0000002C   0xF8AD 0x0008      STRH     R0,[SP, #+8]
    288          
    289            // If we don't have the cluster or it doesn't match the search, we're done.
    290            if (cluster == NULL || !emAfMatchCluster(cluster, &record)) {
   \   00000030   0xD046             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_0
   \   00000032   0xA900             ADD      R1,SP,#+0
   \   00000034   0x4638             MOV      R0,R7
   \   00000036   0x.... 0x....      BL       emAfMatchCluster
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD040             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_0
    291              return TRUE;
    292            }
    293          
    294            for (i = 0; i < cluster->attributeCount; i++) {
   \   0000003E   0xF8DD 0x8038      LDR      R8,[SP, #+56]
   \   00000042   0x46B2             MOV      R10,R6
   \   00000044   0xE006             B.N      ??emberAfReadSequentialAttributesAddToResponse_1
    295              EmberAfAttributeMetadata *metadata = &cluster->attributes[i];
    296          
    297              // If the cluster is not manufacturer-specific, an attribute is considered
    298              // only if its manufacturer code matches that of the command (which may be
    299              // unset).
    300              if (!emberAfClusterIsManufacturerSpecific(cluster)) {
    301                record.attributeId = metadata->attributeId;
    302                if (!emAfMatchAttribute(cluster, metadata, &record)) {
    303                  continue;
    304                }
    305              }
    306          
    307              if (metadata->attributeId < startAttributeId) {
    308                skipped++;
    309              } else if (discovered < maxAttributeIds) {
    310                emberAfPutInt16uInResp(metadata->attributeId);
    311                emberAfPutInt8uInResp(metadata->attributeType);
    312                if (includeAccessControl) {
    313                  // bit 0 : Readable <-- All our attributes are readable
    314                  // bit 1 : Writable <-- The only thing we track in the attribute metadata mask
    315                  // bit 2 : Reportable <-- All our attributes are reportable
    316                  emberAfPutInt8uInResp((metadata->mask & ATTRIBUTE_MASK_WRITABLE)
    317                                        ? 0x07
    318                                        : 0x05);
   \                     ??emberAfReadSequentialAttributesAddToResponse_2: (+1)
   \   00000046   0x.... 0x....      BL       emberAfPutInt8uInResp
    319                }
    320                discovered++;
   \                     ??emberAfReadSequentialAttributesAddToResponse_3: (+1)
   \   0000004A   0x1C64             ADDS     R4,R4,#+1
    321              }
    322              total++;
   \                     ??emberAfReadSequentialAttributesAddToResponse_4: (+1)
   \   0000004C   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??emberAfReadSequentialAttributesAddToResponse_5: (+1)
   \   00000050   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??emberAfReadSequentialAttributesAddToResponse_1: (+1)
   \   00000054   0x8938             LDRH     R0,[R7, #+8]
   \   00000056   0xFA1F 0xFA8A      UXTH     R10,R10
   \   0000005A   0x4582             CMP      R10,R0
   \   0000005C   0xD229             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_6
   \   0000005E   0x6878             LDR      R0,[R7, #+4]
   \   00000060   0x210C             MOVS     R1,#+12
   \   00000062   0xFB01 0x050A      MLA      R5,R1,R10,R0
   \   00000066   0x8838             LDRH     R0,[R7, #+0]
   \   00000068   0xF5B0 0x4F7C      CMP      R0,#+64512
   \   0000006C   0xDA09             BGE.N    ??emberAfReadSequentialAttributesAddToResponse_7
   \   0000006E   0x8828             LDRH     R0,[R5, #+0]
   \   00000070   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \   00000074   0xAA00             ADD      R2,SP,#+0
   \   00000076   0x4629             MOV      R1,R5
   \   00000078   0x4638             MOV      R0,R7
   \   0000007A   0x.... 0x....      BL       emAfMatchAttribute
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD0E6             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_5
   \                     ??emberAfReadSequentialAttributesAddToResponse_7: (+1)
   \   00000082   0x8828             LDRH     R0,[R5, #+0]
   \   00000084   0x4558             CMP      R0,R11
   \   00000086   0xBF38             IT       CC 
   \   00000088   0x1C76             ADDCC    R6,R6,#+1
   \   0000008A   0xD3DF             BCC.N    ??emberAfReadSequentialAttributesAddToResponse_4
   \   0000008C   0xF89D 0x1034      LDRB     R1,[SP, #+52]
   \   00000090   0xB2A4             UXTH     R4,R4
   \   00000092   0x428C             CMP      R4,R1
   \   00000094   0xD2DA             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_4
   \   00000096   0x.... 0x....      BL       emberAfPutInt16uInResp
   \   0000009A   0x78A8             LDRB     R0,[R5, #+2]
   \   0000009C   0x.... 0x....      BL       emberAfPutInt8uInResp
   \   000000A0   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000A4   0xD0D1             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_3
   \   000000A6   0x7928             LDRB     R0,[R5, #+4]
   \   000000A8   0x07C0             LSLS     R0,R0,#+31
   \   000000AA   0xBF4C             ITE      MI 
   \   000000AC   0x2007             MOVMI    R0,#+7
   \   000000AE   0x2005             MOVPL    R0,#+5
   \   000000B0   0xE7C9             B.N      ??emberAfReadSequentialAttributesAddToResponse_2
    323            }
    324          
    325            // We are finished if there are no more attributes to find, which means the
    326            // number of attributes discovered plus the number skipped equals the total
    327            // attributes in the cluster.  For manufacturer-specific clusters, the total
    328            // includes all attributes in the cluster.  For standard ZCL clusters, if the
    329            // the manufacturer code is set, the total is the number of attributes that
    330            // match the manufacturer code.  Otherwise, the total is the number of
    331            // standard ZCL attributes in the cluster.
    332            return (discovered + skipped == total);
   \                     ??emberAfReadSequentialAttributesAddToResponse_6: (+1)
   \   000000B2   0xB2A4             UXTH     R4,R4
   \   000000B4   0xB2B6             UXTH     R6,R6
   \   000000B6   0x1930             ADDS     R0,R6,R4
   \   000000B8   0xFA1F 0xF189      UXTH     R1,R9
   \   000000BC   0x4288             CMP      R0,R1
   \   000000BE   0xD101             BNE.N    ??emberAfReadSequentialAttributesAddToResponse_8
   \                     ??emberAfReadSequentialAttributesAddToResponse_0: (+1)
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0xE000             B.N      ??emberAfReadSequentialAttributesAddToResponse_9
   \                     ??emberAfReadSequentialAttributesAddToResponse_8: (+1)
   \   000000C4   0x2000             MOVS     R0,#+0
   \                     ??emberAfReadSequentialAttributesAddToResponse_9: (+1)
   \   000000C6   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    333          }
    334          
    335          static void emberAfAttributeDecodeAndPrintCluster(EmberAfClusterId cluster)
    336          {
    337          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_ATTRIBUTES)
    338            int16u index = emberAfFindClusterNameIndex(cluster);
    339            if (index != 0xFFFF) { 
    340              emberAfAttributesPrintln("(%p)", zclClusterNames[index].name);
    341            }
    342            emberAfAttributesFlush();
    343          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_ATTRIBUTES)
    344          }
    345          
    346          

   \                                 In section .text, align 2, keep-with-next
    347          void emberAfPrintAttributeTable(void) 
    348          {
   \                     emberAfPrintAttributeTable: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0C5             SUB      SP,SP,#+276
    349            int8u data[ATTRIBUTE_LARGEST];
    350            int8u endpointIndex, clusterIndex;
    351            int16u attributeIndex;
    352            EmberAfStatus status;
    353            int16u mfCode;
    354            for (endpointIndex = 0;
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x.... 0x....      ADR.W    R8,?_4
   \   0000000C   0xE000             B.N      ??emberAfPrintAttributeTable_0
    355                 endpointIndex < emberAfEndpointCount();
    356                 endpointIndex++) {
   \                     ??emberAfPrintAttributeTable_1: (+1)
   \   0000000E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??emberAfPrintAttributeTable_0: (+1)
   \   00000010   0x.... 0x....      BL       emberAfEndpointCount
   \   00000014   0xB2ED             UXTB     R5,R5
   \   00000016   0x4285             CMP      R5,R0
   \   00000018   0xF080 0x80A7      BCS.W    ??emberAfPrintAttributeTable_2
    357              EmberAfDefinedEndpoint *ep = &(emAfEndpoints[endpointIndex]);
   \   0000001C   0x....             LDR.N    R0,??DataTable26_3
    358              emberAfAttributesPrintln("ENDPOINT %x", ep->endpoint);
   \   0000001E   0x.... 0x....      ADR.W    R1,?_1
   \   00000022   0xEB00 0x1605      ADD      R6,R0,R5, LSL #+4
   \   00000026   0x2008             MOVS     R0,#+8
   \   00000028   0x7832             LDRB     R2,[R6, #+0]
   \   0000002A   0x.... 0x....      BL       emberAfPrintln
    359              emberAfAttributesPrintln("clus / side / attr / mfg  /type(len)/ rw / storage / data (raw)");
   \   0000002E   0x.... 0x....      ADR.W    R1,?_2
   \   00000032   0x.... 0x....      BL       ?Subroutine6
    360              emberAfAttributesFlush();
    361              for (clusterIndex = 0;
   \                     ??CrossCallReturnLabel_12: (+1)
   \   00000036   0xF04F 0x0A00      MOV      R10,#+0
   \   0000003A   0xE001             B.N      ??emberAfPrintAttributeTable_3
    362                   clusterIndex < ep->endpointType->clusterCount;
    363                   clusterIndex++) {
   \                     ??emberAfPrintAttributeTable_4: (+1)
   \   0000003C   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??emberAfPrintAttributeTable_3: (+1)
   \   00000040   0x68B0             LDR      R0,[R6, #+8]
   \   00000042   0x7901             LDRB     R1,[R0, #+4]
   \   00000044   0xFA5F 0xFA8A      UXTB     R10,R10
   \   00000048   0x458A             CMP      R10,R1
   \   0000004A   0xD2E0             BCS.N    ??emberAfPrintAttributeTable_1
    364                EmberAfCluster *cluster = &(ep->endpointType->cluster[clusterIndex]);
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x2114             MOVS     R1,#+20
   \   00000050   0xFB01 0x040A      MLA      R4,R1,R10,R0
    365                for (attributeIndex = 0;
   \   00000054   0xF04F 0x0900      MOV      R9,#+0
   \   00000058   0xE018             B.N      ??emberAfPrintAttributeTable_5
    366                     attributeIndex < cluster->attributeCount;
    367                     attributeIndex++) {
    368                  EmberAfAttributeMetadata *metaData = &(cluster->attributes[attributeIndex]);
    369                  emberAfAttributesPrint("%2x / %p / %2x / ",
    370                                         cluster->clusterId,
    371                                         (emberAfAttributeIsClient(metaData) ? "clnt" : "srvr"),
    372                                         metaData->attributeId);
    373                  mfCode = emAfGetManufacturerCodeForAttribute(cluster, metaData);
    374                  if (mfCode == EMBER_AF_NULL_MANUFACTURER_CODE) {
    375                    emberAfAttributesPrint("----");
    376                  } else {
    377                    emberAfAttributesPrint("%2x", mfCode);
    378                  }
    379                  emberAfAttributesPrint(" / %x (%x) / %p / %p / ",
    380                                         metaData->attributeType,
    381                                         emberAfAttributeSize(metaData),
    382                                         (emberAfAttributeIsReadOnly(metaData) ? "RO": "RW"),
    383                                         (emberAfAttributeIsTokenized(metaData)
    384                                          ? " token "
    385                                          : (emberAfAttributeIsExternal(metaData)
    386                                             ? "extern "
    387                                             : "  RAM  ")));
    388                  emberAfAttributesFlush();
    389                  status = emAfReadAttribute(ep->endpoint,
    390                                             cluster->clusterId,
    391                                             metaData->attributeId,
    392                                             (emberAfAttributeIsClient(metaData)
    393                                               ? CLUSTER_MASK_CLIENT
    394                                               : CLUSTER_MASK_SERVER),
    395                                             mfCode,
    396                                             data,
    397                                             ATTRIBUTE_LARGEST,
    398                                             NULL);
    399                  if (status == EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE) {
    400                    emberAfAttributesPrintln("Unsupported");
    401                  } else {
    402                    int16u length;
    403                    if (emberAfIsStringAttributeType(metaData->attributeType)) {
    404                      length = emberAfStringLength(data) + 1;
    405                    } else if (emberAfIsLongStringAttributeType(metaData->attributeType)) {
    406                      length = emberAfLongStringLength(data) + 2;
    407                    } else {
    408                      length = emberAfAttributeSize(metaData);
   \                     ??emberAfPrintAttributeTable_6: (+1)
   \   0000005A   0x78FA             LDRB     R2,[R7, #+3]
    409                    }
    410                    emberAfAttributesPrintBuffer(data, length, TRUE);
   \                     ??emberAfPrintAttributeTable_7: (+1)
   \   0000005C   0x2301             MOVS     R3,#+1
   \   0000005E   0xB292             UXTH     R2,R2
   \   00000060   0xA904             ADD      R1,SP,#+16
   \   00000062   0x2008             MOVS     R0,#+8
   \   00000064   0x.... 0x....      BL       emberAfPrintBuffer
    411                    emberAfAttributesFlush();
    412                    emberAfAttributeDecodeAndPrintCluster(cluster->clusterId);
   \   00000068   0x8820             LDRH     R0,[R4, #+0]
   \   0000006A   0x.... 0x....      BL       emberAfFindClusterNameIndex
   \   0000006E   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xD008             BEQ.N    ??emberAfPrintAttributeTable_8
   \   00000076   0x....             LDR.N    R1,??DataTable26_4
   \   00000078   0xEB01 0x00C0      ADD      R0,R1,R0, LSL #+3
   \   0000007C   0x.... 0x....      ADR.W    R1,?_0
   \   00000080   0x6842             LDR      R2,[R0, #+4]
   \   00000082   0x2008             MOVS     R0,#+8
   \   00000084   0x.... 0x....      BL       emberAfPrintln
   \                     ??emberAfPrintAttributeTable_8: (+1)
   \   00000088   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??emberAfPrintAttributeTable_5: (+1)
   \   0000008C   0x8920             LDRH     R0,[R4, #+8]
   \   0000008E   0xFA1F 0xF989      UXTH     R9,R9
   \   00000092   0x4581             CMP      R9,R0
   \   00000094   0xD2D2             BCS.N    ??emberAfPrintAttributeTable_4
   \   00000096   0x6860             LDR      R0,[R4, #+4]
   \   00000098   0x210C             MOVS     R1,#+12
   \   0000009A   0xFB01 0x0709      MLA      R7,R1,R9,R0
   \   0000009E   0x.... 0x....      ADR.W    R1,?_3
   \   000000A2   0x7938             LDRB     R0,[R7, #+4]
   \   000000A4   0x0640             LSLS     R0,R0,#+25
   \   000000A6   0x8838             LDRH     R0,[R7, #+0]
   \   000000A8   0x9000             STR      R0,[SP, #+0]
   \   000000AA   0xBF4C             ITE      MI 
   \   000000AC   0x4643             MOVMI    R3,R8
   \   000000AE   0x.... 0x....      ADRPL.W  R3,?_5
   \   000000B2   0x8822             LDRH     R2,[R4, #+0]
   \   000000B4   0x2008             MOVS     R0,#+8
   \   000000B6   0x.... 0x....      BL       emberAfPrint
   \   000000BA   0x4639             MOV      R1,R7
   \   000000BC   0x4620             MOV      R0,R4
   \   000000BE   0x.... 0x....      BL       emAfGetManufacturerCodeForAttribute
   \   000000C2   0xEA5F 0x0B00      MOVS     R11,R0
   \   000000C6   0xD105             BNE.N    ??emberAfPrintAttributeTable_9
   \   000000C8   0x.... 0x....      ADR.W    R1,?_6
   \   000000CC   0x2008             MOVS     R0,#+8
   \   000000CE   0x.... 0x....      BL       emberAfPrint
   \   000000D2   0xE004             B.N      ??emberAfPrintAttributeTable_10
   \                     ??emberAfPrintAttributeTable_9: (+1)
   \   000000D4   0x465A             MOV      R2,R11
   \   000000D6   0x....             ADR.N    R1,??DataTable26  ;; "%2x"
   \   000000D8   0x2008             MOVS     R0,#+8
   \   000000DA   0x.... 0x....      BL       emberAfPrint
   \                     ??emberAfPrintAttributeTable_10: (+1)
   \   000000DE   0x7938             LDRB     R0,[R7, #+4]
   \   000000E0   0x0781             LSLS     R1,R0,#+30
   \   000000E2   0xBF48             IT       MI 
   \   000000E4   0x.... 0x....      ADRMI.W  R1,?_11
   \   000000E8   0xD405             BMI.N    ??emberAfPrintAttributeTable_11
   \   000000EA   0x06C1             LSLS     R1,R0,#+27
   \   000000EC   0xBF4C             ITE      MI 
   \   000000EE   0x.... 0x....      ADRMI.W  R1,?_12
   \   000000F2   0x.... 0x....      ADRPL.W  R1,?_13
   \                     ??emberAfPrintAttributeTable_11: (+1)
   \   000000F6   0x07C0             LSLS     R0,R0,#+31
   \   000000F8   0xBF54             ITE      PL 
   \   000000FA   0x....             ADRPL.N  R0,??DataTable26_1  ;; 0x52, 0x4F, 0x00, 0x00
   \   000000FC   0x....             ADRMI.N  R0,??DataTable26_2  ;; 0x52, 0x57, 0x00, 0x00
   \   000000FE   0x9101             STR      R1,[SP, #+4]
   \   00000100   0x9000             STR      R0,[SP, #+0]
   \   00000102   0x78FB             LDRB     R3,[R7, #+3]
   \   00000104   0x78BA             LDRB     R2,[R7, #+2]
   \   00000106   0x.... 0x....      ADR.W    R1,?_8
   \   0000010A   0x2008             MOVS     R0,#+8
   \   0000010C   0x.... 0x....      BL       emberAfPrint
   \   00000110   0x7938             LDRB     R0,[R7, #+4]
   \   00000112   0xF8CD 0xB000      STR      R11,[SP, #+0]
   \   00000116   0x0640             LSLS     R0,R0,#+25
   \   00000118   0xBF4C             ITE      MI 
   \   0000011A   0x2380             MOVMI    R3,#+128
   \   0000011C   0x2340             MOVPL    R3,#+64
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x9003             STR      R0,[SP, #+12]
   \   00000122   0x20FF             MOVS     R0,#+255
   \   00000124   0x9002             STR      R0,[SP, #+8]
   \   00000126   0xA804             ADD      R0,SP,#+16
   \   00000128   0x9001             STR      R0,[SP, #+4]
   \   0000012A   0x883A             LDRH     R2,[R7, #+0]
   \   0000012C   0x8821             LDRH     R1,[R4, #+0]
   \   0000012E   0x7830             LDRB     R0,[R6, #+0]
   \   00000130   0x.... 0x....      BL       emAfReadAttribute
   \   00000134   0x2886             CMP      R0,#+134
   \   00000136   0xD104             BNE.N    ??emberAfPrintAttributeTable_12
   \   00000138   0x.... 0x....      ADR.W    R1,?_14
   \   0000013C   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000140   0xE7A2             B.N      ??emberAfPrintAttributeTable_8
   \                     ??emberAfPrintAttributeTable_12: (+1)
   \   00000142   0x78B8             LDRB     R0,[R7, #+2]
   \   00000144   0x.... 0x....      BL       emberAfIsStringAttributeType
   \   00000148   0xB120             CBZ.N    R0,??emberAfPrintAttributeTable_13
   \   0000014A   0xA804             ADD      R0,SP,#+16
   \   0000014C   0x.... 0x....      BL       emberAfStringLength
   \   00000150   0x1C42             ADDS     R2,R0,#+1
   \   00000152   0xE783             B.N      ??emberAfPrintAttributeTable_7
   \                     ??emberAfPrintAttributeTable_13: (+1)
   \   00000154   0x78B8             LDRB     R0,[R7, #+2]
   \   00000156   0x.... 0x....      BL       emberAfIsLongStringAttributeType
   \   0000015A   0x2800             CMP      R0,#+0
   \   0000015C   0xF43F 0xAF7D      BEQ.W    ??emberAfPrintAttributeTable_6
   \   00000160   0xA804             ADD      R0,SP,#+16
   \   00000162   0x.... 0x....      BL       emberAfLongStringLength
   \   00000166   0x1C82             ADDS     R2,R0,#+2
   \   00000168   0xE778             B.N      ??emberAfPrintAttributeTable_7
    413                  }
    414                }
    415              }
    416              emberAfAttributesFlush();
    417            }
    418          }
   \                     ??emberAfPrintAttributeTable_2: (+1)
   \   0000016A   0xB045             ADD      SP,SP,#+276
   \   0000016C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0x2008             MOVS     R0,#+8
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    419          
    420          // given a clusterId and an attribute to read, this crafts the response
    421          // and places it in the response buffer. Response is one of two items:
    422          // 1) unsupported: [attrId:2] [status:1]
    423          // 2) supported:   [attrId:2] [status:1] [type:1] [data:n]
    424          //

   \                                 In section .text, align 2, keep-with-next
    425          void emberAfRetrieveAttributeAndCraftResponse(int8u endpoint,
    426                                                        EmberAfClusterId clusterId,
    427                                                        EmberAfAttributeId attrId,
    428                                                        int8u mask,
    429                                                        int16u manufacturerCode,
    430                                                        int16u readLength)
    431          {
   \                     emberAfRetrieveAttributeAndCraftResponse: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB0C7             SUB      SP,SP,#+284
   \   00000006   0x4681             MOV      R9,R0
   \   00000008   0x9C4F             LDR      R4,[SP, #+316]
    432            EmberAfStatus status;
    433            int8u data[ATTRIBUTE_LARGEST];
    434            int8u dataType;
    435            int8u dataLen;
    436          
    437            // account for at least one byte of data
    438            if (readLength < 5) {
   \   0000000A   0x2C05             CMP      R4,#+5
   \   0000000C   0x4688             MOV      R8,R1
   \   0000000E   0x4617             MOV      R7,R2
   \   00000010   0x461E             MOV      R6,R3
   \   00000012   0xDB4A             BLT.N    ??CrossCallReturnLabel_15
    439              return;
    440            }
    441          
    442            emberAfAttributesPrintln("OTA READ: ep:%x cid:%2x attid:%2x msk:%x mfcode:%2x", 
    443                                     endpoint, 
    444                                     clusterId, attrId, mask, manufacturerCode);
   \   00000014   0x9D4E             LDR      R5,[SP, #+312]
   \   00000016   0x.... 0x....      ADR.W    R1,?_15
   \   0000001A   0x9502             STR      R5,[SP, #+8]
   \   0000001C   0x9601             STR      R6,[SP, #+4]
   \   0000001E   0x9700             STR      R7,[SP, #+0]
   \   00000020   0x4643             MOV      R3,R8
   \   00000022   0x464A             MOV      R2,R9
   \   00000024   0x.... 0x....      BL       ?Subroutine7
    445          
    446            // lookup the attribute in our table
    447            status = emAfReadAttribute(endpoint,
    448                                       clusterId,
    449                                       attrId,
    450                                       mask,
    451                                       manufacturerCode,
    452                                       data,
    453                                       ATTRIBUTE_LARGEST,
    454                                       &dataType);
   \                     ??CrossCallReturnLabel_16: (+1)
   \   00000028   0xA804             ADD      R0,SP,#+16
   \   0000002A   0x9003             STR      R0,[SP, #+12]
   \   0000002C   0x9500             STR      R5,[SP, #+0]
   \   0000002E   0x20FF             MOVS     R0,#+255
   \   00000030   0x9002             STR      R0,[SP, #+8]
   \   00000032   0x4633             MOV      R3,R6
   \   00000034   0xA805             ADD      R0,SP,#+20
   \   00000036   0x9001             STR      R0,[SP, #+4]
   \   00000038   0x463A             MOV      R2,R7
   \   0000003A   0x4641             MOV      R1,R8
   \   0000003C   0x4648             MOV      R0,R9
   \   0000003E   0x.... 0x....      BL       emAfReadAttribute
   \   00000042   0x0005             MOVS     R5,R0
    455            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \   00000044   0xD134             BNE.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    456              dataLen = (emberAfIsThisDataTypeAStringType(dataType)
    457                         ? emberAfStringLength(data) + 1
    458                         : emberAfGetDataSize(dataType));
   \   00000046   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000004A   0x.... 0x....      BL       emberAfIsThisDataTypeAStringType
   \   0000004E   0xB120             CBZ.N    R0,??emberAfRetrieveAttributeAndCraftResponse_1
   \   00000050   0xA805             ADD      R0,SP,#+20
   \   00000052   0x.... 0x....      BL       emberAfStringLength
   \   00000056   0x1C45             ADDS     R5,R0,#+1
   \   00000058   0xE004             B.N      ??emberAfRetrieveAttributeAndCraftResponse_2
   \                     ??emberAfRetrieveAttributeAndCraftResponse_1: (+1)
   \   0000005A   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000005E   0x.... 0x....      BL       emberAfGetDataSize
   \   00000062   0x4605             MOV      R5,R0
   \                     ??emberAfRetrieveAttributeAndCraftResponse_2: (+1)
   \   00000064   0xB2ED             UXTB     R5,R5
    459              if (readLength < (4 + dataLen)) { // Not enough space for attribute.
   \   00000066   0x1D28             ADDS     R0,R5,#+4
   \   00000068   0x4284             CMP      R4,R0
   \   0000006A   0xDB1E             BLT.N    ??CrossCallReturnLabel_15
    460                return;
    461              }
    462            } else {
    463              emberAfPutInt16uInResp(attrId);
    464              emberAfPutInt8uInResp(status);
    465              emberAfAttributesPrintln("READ: clus %2x, attr %2x failed %x",
    466                                       clusterId,
    467                                       attrId,
    468                                       status);
    469              emberAfAttributesFlush();
    470              return;
    471            }
    472            
    473            // put attribute in least sig byte first
    474            emberAfPutInt16uInResp(attrId);
   \   0000006C   0x4638             MOV      R0,R7
   \   0000006E   0x.... 0x....      BL       emberAfPutInt16uInResp
    475          
    476            // attribute is found, so copy in the status and the data type 
    477            emberAfPutInt8uInResp(EMBER_ZCL_STATUS_SUCCESS);
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       emberAfPutInt8uInResp
    478            emberAfPutInt8uInResp(dataType);
   \   00000078   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000007C   0x....             LDR.N    R4,??DataTable26_5
   \   0000007E   0x.... 0x....      BL       emberAfPutInt8uInResp
    479          
    480            if ((appResponseLength + dataLen) < EMBER_AF_RESPONSE_BUFFER_LEN) {
   \   00000082   0x8820             LDRH     R0,[R4, #+0]
   \   00000084   0x1829             ADDS     R1,R5,R0
   \   00000086   0x2952             CMP      R1,#+82
   \   00000088   0xDA08             BGE.N    ??emberAfRetrieveAttributeAndCraftResponse_3
    481          #if (BIGENDIAN_CPU)     
    482              // strings go over the air as length byte and then in human
    483              // readable format. These should not be flipped. Other attributes
    484              // need to be flipped so they go little endian OTA
    485              if (isThisDataTypeSentLittleEndianOTA(dataType)) {
    486                int8u i;
    487                for (i = 0; i<dataLen; i++) {
    488                  appResponseData[appResponseLength + i] = data[dataLen - i - 1];
    489                }
    490              } else {
    491                MEMCOPY(&(appResponseData[appResponseLength]), data, dataLen);
    492              }
    493          #else //(BIGENDIAN_CPU)
    494              MEMCOPY(&(appResponseData[appResponseLength]), data, dataLen);
   \   0000008A   0x....             LDR.N    R3,??DataTable26_6
   \   0000008C   0x462A             MOV      R2,R5
   \   0000008E   0xA905             ADD      R1,SP,#+20
   \   00000090   0x18C0             ADDS     R0,R0,R3
   \   00000092   0x.... 0x....      BL       halCommonMemCopy
    495          #endif //(BIGENDIAN_CPU)
    496              appResponseLength += dataLen;
   \   00000096   0x8820             LDRH     R0,[R4, #+0]
   \   00000098   0x1828             ADDS     R0,R5,R0
   \   0000009A   0x8020             STRH     R0,[R4, #+0]
    497            }
    498            
    499            emberAfAttributesPrintln("READ: clus %2x, attr %2x, dataLen: %x, OK",
    500                                     clusterId,
    501                                     attrId,
    502                                     dataLen);
   \                     ??emberAfRetrieveAttributeAndCraftResponse_3: (+1)
   \   0000009C   0x9500             STR      R5,[SP, #+0]
   \   0000009E   0x463B             MOV      R3,R7
   \   000000A0   0x4642             MOV      R2,R8
   \   000000A2   0x.... 0x....      ADR.W    R1,?_17
   \                     ??emberAfRetrieveAttributeAndCraftResponse_4: (+1)
   \   000000A6   0x.... 0x....      BL       ?Subroutine7
    503            emberAfAttributesFlush();
    504          }
   \                     ??CrossCallReturnLabel_15: (+1)
   \   000000AA   0xB047             ADD      SP,SP,#+284
   \   000000AC   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
   \                     ??emberAfRetrieveAttributeAndCraftResponse_0: (+1)
   \   000000B0   0x4638             MOV      R0,R7
   \   000000B2   0x.... 0x....      BL       emberAfPutInt16uInResp
   \   000000B6   0x4628             MOV      R0,R5
   \   000000B8   0x.... 0x....      BL       emberAfPutInt8uInResp
   \   000000BC   0x9500             STR      R5,[SP, #+0]
   \   000000BE   0x463B             MOV      R3,R7
   \   000000C0   0x4642             MOV      R2,R8
   \   000000C2   0x.... 0x....      ADR.W    R1,?_16
   \   000000C6   0xE7EE             B.N      ??emberAfRetrieveAttributeAndCraftResponse_4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \   00000000   0x2008             MOVS     R0,#+8
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    505          
    506          // This function appends the attribute report fields for the given endpoint,
    507          // cluster, and attribute to the buffer starting at the index.  If there is
    508          // insufficient space in the buffer or an error occurs, buffer and bufIndex will
    509          // remain unchanged.  Otherwise, bufIndex will be incremented appropriately and
    510          // the fields will be written to the buffer.

   \                                 In section .text, align 2, keep-with-next
    511          EmberAfStatus emberAfAppendAttributeReportFields(int8u endpoint,
    512                                                           EmberAfClusterId clusterId,
    513                                                           EmberAfAttributeId attributeId,
    514                                                           int8u mask,
    515                                                           int8u *buffer,
    516                                                           int8u bufLen,
    517                                                           int8u *bufIndex)
    518          {
   \                     emberAfAppendAttributeReportFields: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB0C4             SUB      SP,SP,#+272
   \   00000006   0x4688             MOV      R8,R1
    519            EmberAfStatus status;
    520            EmberAfAttributeType type;
    521            int8u size;
    522            int8u data[ATTRIBUTE_LARGEST];
    523          
    524            status = emberAfReadAttribute(endpoint,
    525                                          clusterId,
    526                                          attributeId,
    527                                          mask,
    528                                          data,
    529                                          sizeof(data),
    530                                          &type);
   \   00000008   0xA903             ADD      R1,SP,#+12
   \   0000000A   0x9102             STR      R1,[SP, #+8]
   \   0000000C   0x4615             MOV      R5,R2
   \   0000000E   0x21FF             MOVS     R1,#+255
   \   00000010   0x9101             STR      R1,[SP, #+4]
   \   00000012   0xA904             ADD      R1,SP,#+16
   \   00000014   0x9100             STR      R1,[SP, #+0]
   \   00000016   0x4641             MOV      R1,R8
   \   00000018   0x.... 0x....      BL       emberAfReadAttribute
   \   0000001C   0x0006             MOVS     R6,R0
    531            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   0000001E   0xD12E             BNE.N    ??emberAfAppendAttributeReportFields_0
    532              goto kickout;
    533            }
    534          
    535            size = (emberAfIsThisDataTypeAStringType(type)
    536                    ? emberAfStringLength(data) + 1
    537                    : emberAfGetDataSize(type));
   \   00000020   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000024   0x.... 0x....      BL       emberAfIsThisDataTypeAStringType
   \   00000028   0xB120             CBZ.N    R0,??emberAfAppendAttributeReportFields_1
   \   0000002A   0xA804             ADD      R0,SP,#+16
   \   0000002C   0x.... 0x....      BL       emberAfStringLength
   \   00000030   0x1C44             ADDS     R4,R0,#+1
   \   00000032   0xE004             B.N      ??emberAfAppendAttributeReportFields_2
   \                     ??emberAfAppendAttributeReportFields_1: (+1)
   \   00000034   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000038   0x.... 0x....      BL       emberAfGetDataSize
   \   0000003C   0x4604             MOV      R4,R0
   \                     ??emberAfAppendAttributeReportFields_2: (+1)
   \   0000003E   0x9F4C             LDR      R7,[SP, #+304]
    538            if (bufLen < *bufIndex + size + 3) {
   \   00000040   0x984B             LDR      R0,[SP, #+300]
   \   00000042   0x7839             LDRB     R1,[R7, #+0]
   \   00000044   0xB2E4             UXTB     R4,R4
   \   00000046   0x1863             ADDS     R3,R4,R1
   \   00000048   0x1CDB             ADDS     R3,R3,#+3
   \   0000004A   0x4298             CMP      R0,R3
   \   0000004C   0xBFB8             IT       LT 
   \   0000004E   0x2689             MOVLT    R6,#+137
    539              status = EMBER_ZCL_STATUS_INSUFFICIENT_SPACE;
    540              goto kickout;
   \   00000050   0xDB15             BLT.N    ??emberAfAppendAttributeReportFields_0
    541            }
    542          
    543            buffer[(*bufIndex)++] = LOW_BYTE(attributeId);
   \   00000052   0x984A             LDR      R0,[SP, #+296]
   \   00000054   0x540D             STRB     R5,[R1, R0]
    544            buffer[(*bufIndex)++] = HIGH_BYTE(attributeId);
   \   00000056   0x1C49             ADDS     R1,R1,#+1
   \   00000058   0xB2C9             UXTB     R1,R1
   \   0000005A   0x0A2A             LSRS     R2,R5,#+8
   \   0000005C   0x540A             STRB     R2,[R1, R0]
    545            buffer[(*bufIndex)++] = type;
   \   0000005E   0x1C49             ADDS     R1,R1,#+1
   \   00000060   0x1C4B             ADDS     R3,R1,#+1
   \   00000062   0x703B             STRB     R3,[R7, #+0]
   \   00000064   0xB2C9             UXTB     R1,R1
   \   00000066   0xF89D 0x200C      LDRB     R2,[SP, #+12]
   \   0000006A   0x540A             STRB     R2,[R1, R0]
    546          #if (BIGENDIAN_CPU)
    547            if (isThisDataTypeSentLittleEndianOTA(type)) {
    548              emberReverseMemCopy(buffer + *bufIndex, data, size);
    549            } else {
    550              MEMCOPY(buffer + *bufIndex, data, size);
    551            }
    552          #else
    553            MEMCOPY(buffer + *bufIndex, data, size);
   \   0000006C   0xB2DB             UXTB     R3,R3
   \   0000006E   0x4622             MOV      R2,R4
   \   00000070   0xA904             ADD      R1,SP,#+16
   \   00000072   0x1818             ADDS     R0,R3,R0
   \   00000074   0x.... 0x....      BL       halCommonMemCopy
    554          #endif
    555            *bufIndex += size;
   \   00000078   0x7838             LDRB     R0,[R7, #+0]
   \   0000007A   0x1820             ADDS     R0,R4,R0
   \   0000007C   0x7038             STRB     R0,[R7, #+0]
    556          
    557          kickout:
    558            emberAfAttributesPrintln("REPORT: clus 0x%2x, attr 0x%2x: 0x%x",
    559                                     clusterId,
    560                                     attributeId,
    561                                     status);
   \                     ??emberAfAppendAttributeReportFields_0: (+1)
   \   0000007E   0x9600             STR      R6,[SP, #+0]
   \   00000080   0x462B             MOV      R3,R5
   \   00000082   0x4642             MOV      R2,R8
   \   00000084   0x.... 0x....      ADR.W    R1,?_18
   \   00000088   0x.... 0x....      BL       ?Subroutine7
    562            emberAfAttributesFlush();
    563          
    564            return status;
   \                     ??CrossCallReturnLabel_14: (+1)
   \   0000008C   0x4630             MOV      R0,R6
   \   0000008E   0xB044             ADD      SP,SP,#+272
   \   00000090   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    565          }
    566          
    567          //------------------------------------------------------------------------------
    568          // Internal Functions
    569          
    570          // writes an attribute (identified by clusterID and attrID to the given value. 
    571          // this returns:
    572          // - EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE: if attribute isnt supported by the device (the
    573          //           device is not found in the attribute table)
    574          // - EMBER_ZCL_STATUS_INVALID_DATA_TYPE: if the data type passed in doesnt match the type
    575          //           stored in the attribute table
    576          // - EMBER_ZCL_STATUS_READ_ONLY: if the attribute isnt writable
    577          // - EMBER_ZCL_STATUS_INVALID_VALUE: if the value is set out of the allowable range for
    578          //           the attribute
    579          // - EMBER_ZCL_STATUS_SUCCESS: if the attribute was found and successfully written
    580          // 
    581          // if TRUE is passed in for overrideReadOnlyAndDataType then the data type is
    582          // not checked and the read-only flag is ignored. This mode is meant for 
    583          // testing or setting the initial value of the attribute on the device.
    584          //
    585          // if TRUE is passed for justTest, then the type is not written but all 
    586          // checks are done to see if the type could be written
    587          // reads the attribute specified, returns FALSE if the attribute is not in
    588          // the table or the data is too large, returns TRUE and writes to dataPtr
    589          // if the attribute is supported and the readLength specified is less than
    590          // the length of the data.

   \                                 In section .text, align 2, keep-with-next
    591          EmberAfStatus emAfWriteAttribute(int8u endpoint,
    592                                           EmberAfClusterId cluster,
    593                                           EmberAfAttributeId attributeID,
    594                                           int8u mask,
    595                                           int16u manufacturerCode,
    596                                           int8u *data,
    597                                           EmberAfAttributeType dataType,
    598                                           boolean overrideReadOnlyAndDataType,
    599                                           boolean justTest)
    600          {
   \                     emAfWriteAttribute: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
   \   00000006   0x4681             MOV      R9,R0
    601            EmberAfAttributeMetadata *metadata = NULL;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x9004             STR      R0,[SP, #+16]
    602            EmberAfAttributeSearchRecord record;
    603            record.endpoint = endpoint;
    604            record.clusterId = cluster;
    605            record.clusterMask = mask;
    606            record.attributeId = attributeID;
    607            record.manufacturerCode = manufacturerCode;
    608            emAfReadOrWriteAttribute(&record,
    609                                     &metadata,
    610                                     NULL,   // buffer
    611                                     0,      // buffer size
    612                                     FALSE); // write?
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0x460E             MOV      R6,R1
   \   00000010   0x9C12             LDR      R4,[SP, #+72]
   \   00000012   0x4617             MOV      R7,R2
   \   00000014   0x4698             MOV      R8,R3
   \   00000016   0x4602             MOV      R2,R0
   \   00000018   0xF88D 0x9014      STRB     R9,[SP, #+20]
   \   0000001C   0xF8AD 0x6016      STRH     R6,[SP, #+22]
   \   00000020   0xF88D 0x8018      STRB     R8,[SP, #+24]
   \   00000024   0xF8AD 0x701A      STRH     R7,[SP, #+26]
   \   00000028   0xF8AD 0x401C      STRH     R4,[SP, #+28]
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0xA904             ADD      R1,SP,#+16
   \   00000030   0xA805             ADD      R0,SP,#+20
   \   00000032   0x.... 0x....      BL       emAfReadOrWriteAttribute
    613          
    614            // if we dont support that attribute
    615            if (metadata == NULL) {
   \   00000036   0x9804             LDR      R0,[SP, #+16]
   \   00000038   0x.... 0x....      ADR.W    R2,?_20
   \   0000003C   0xB940             CBNZ.N   R0,??emAfWriteAttribute_0
    616              emberAfAttributesPrintln("%pep %x clus %2x attr %2x not supported",
    617                                       "WRITE ERR: ",
    618                                       endpoint, 
    619                                       cluster, 
    620                                       attributeID);
   \   0000003E   0x9701             STR      R7,[SP, #+4]
   \   00000040   0x9600             STR      R6,[SP, #+0]
   \   00000042   0x464B             MOV      R3,R9
   \   00000044   0x.... 0x....      ADR.W    R1,?_19
   \   00000048   0x.... 0x....      BL       ?Subroutine7
    621              emberAfAttributesFlush();
    622              return EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;
   \                     ??CrossCallReturnLabel_13: (+1)
   \   0000004C   0x2086             MOVS     R0,#+134
   \   0000004E   0xE08F             B.N      ??emAfWriteAttribute_1
    623            }
    624          
    625            // if the data type specified by the caller is incorrect
    626            if (!(overrideReadOnlyAndDataType)) {
   \                     ??emAfWriteAttribute_0: (+1)
   \   00000050   0x9815             LDR      R0,[SP, #+84]
   \   00000052   0xB9B8             CBNZ.N   R0,??emAfWriteAttribute_2
    627              if (dataType != metadata->attributeType) {
   \   00000054   0x9904             LDR      R1,[SP, #+16]
   \   00000056   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \   0000005A   0x7889             LDRB     R1,[R1, #+2]
   \   0000005C   0x4288             CMP      R0,R1
   \   0000005E   0xD006             BEQ.N    ??emAfWriteAttribute_3
    628                emberAfAttributesPrintln("%pinvalid data type", "WRITE ERR: ");
   \   00000060   0x.... 0x....      ADR.W    R1,?_21
   \   00000064   0x2008             MOVS     R0,#+8
   \   00000066   0x.... 0x....      BL       emberAfPrintln
    629                emberAfAttributesFlush();
    630                return EMBER_ZCL_STATUS_INVALID_DATA_TYPE;
   \   0000006A   0x208D             MOVS     R0,#+141
   \   0000006C   0xE080             B.N      ??emAfWriteAttribute_1
    631              }
    632              
    633              if (emberAfAttributeIsReadOnly(metadata)) {
   \                     ??emAfWriteAttribute_3: (+1)
   \   0000006E   0x9804             LDR      R0,[SP, #+16]
   \   00000070   0x7900             LDRB     R0,[R0, #+4]
   \   00000072   0x07C0             LSLS     R0,R0,#+31
   \   00000074   0xD406             BMI.N    ??emAfWriteAttribute_2
    634                emberAfAttributesPrintln("%pattr not writable", "WRITE ERR: ");
   \   00000076   0x.... 0x....      ADR.W    R1,?_22
   \   0000007A   0x2008             MOVS     R0,#+8
   \   0000007C   0x.... 0x....      BL       emberAfPrintln
    635                emberAfAttributesFlush();
    636                return EMBER_ZCL_STATUS_READ_ONLY;
   \   00000080   0x2088             MOVS     R0,#+136
   \   00000082   0xE075             B.N      ??emAfWriteAttribute_1
    637              }
    638            }
    639          
    640            // if the value the attribute is being set to is out of range
    641            // return EMBER_ZCL_STATUS_INVALID_VALUE
    642            if (metadata->mask & ATTRIBUTE_MASK_MIN_MAX) {
   \                     ??emAfWriteAttribute_2: (+1)
   \   00000084   0x9804             LDR      R0,[SP, #+16]
   \   00000086   0x7900             LDRB     R0,[R0, #+4]
   \   00000088   0x9D13             LDR      R5,[SP, #+76]
   \   0000008A   0x0740             LSLS     R0,R0,#+29
   \   0000008C   0xD526             BPL.N    ??emAfWriteAttribute_4
    643              EmberAfDefaultAttributeValue minv = metadata->defaultValue.ptrToMinMaxValue->minValue;
   \   0000008E   0x9804             LDR      R0,[SP, #+16]
   \   00000090   0x6880             LDR      R0,[R0, #+8]
   \   00000092   0x6840             LDR      R0,[R0, #+4]
   \   00000094   0x9002             STR      R0,[SP, #+8]
    644              EmberAfDefaultAttributeValue maxv = metadata->defaultValue.ptrToMinMaxValue->maxValue;
   \   00000096   0x9804             LDR      R0,[SP, #+16]
   \   00000098   0x6880             LDR      R0,[R0, #+8]
   \   0000009A   0x6880             LDR      R0,[R0, #+8]
   \   0000009C   0x9001             STR      R0,[SP, #+4]
    645              boolean isAttributeSigned = emberAfIsTypeSigned(metadata->attributeType);
   \   0000009E   0x9804             LDR      R0,[SP, #+16]
   \   000000A0   0x7880             LDRB     R0,[R0, #+2]
   \   000000A2   0x.... 0x....      BL       emberAfIsTypeSigned
   \   000000A6   0x4682             MOV      R10,R0
    646              int8u dataLen = emberAfAttributeSize(metadata);
   \   000000A8   0x9804             LDR      R0,[SP, #+16]
   \   000000AA   0x78C0             LDRB     R0,[R0, #+3]
   \   000000AC   0xF88D 0x0000      STRB     R0,[SP, #+0]
    647              if (dataLen <= 2) {
   \   000000B0   0x2803             CMP      R0,#+3
   \   000000B2   0x4653             MOV      R3,R10
   \   000000B4   0x4602             MOV      R2,R0
   \   000000B6   0x4629             MOV      R1,R5
   \   000000B8   0xDA27             BGE.N    ??emAfWriteAttribute_5
    648                int8s minR, maxR;
    649                int8u* minI = (int8u*)&(minv.defaultValue);
    650                int8u* maxI = (int8u*)&(maxv.defaultValue);
    651                //On big endian cpu with length 1 only the second byte counts
    652                #if (BIGENDIAN_CPU)
    653                  if (dataLen == 1) {
    654                    minI++;
    655                    maxI++;
    656                  }
    657                #endif //BIGENDIAN_CPU
    658                minR = emberAfCompareValues(minI, data, dataLen, isAttributeSigned);
   \   000000BA   0xA802             ADD      R0,SP,#+8
   \   000000BC   0x.... 0x....      BL       emberAfCompareValues
   \   000000C0   0x4683             MOV      R11,R0
    659                maxR = emberAfCompareValues(maxI, data, dataLen, isAttributeSigned);
   \   000000C2   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   000000C6   0x4653             MOV      R3,R10
   \   000000C8   0x4629             MOV      R1,R5
   \   000000CA   0xA801             ADD      R0,SP,#+4
   \   000000CC   0x.... 0x....      BL       emberAfCompareValues
    660                if ((minR == 1) || (maxR == -1)) {
   \   000000D0   0xF1BB 0x0F01      CMP      R11,#+1
   \   000000D4   0xBF18             IT       NE 
   \   000000D6   0xF110 0x0F01      CMNNE    R0,#+1
   \   000000DA   0xD025             BEQ.N    ??emAfWriteAttribute_6
    661                  return EMBER_ZCL_STATUS_INVALID_VALUE;
    662                }
    663              } else {
    664                if ((emberAfCompareValues(minv.ptrToDefaultValue, data, dataLen, isAttributeSigned) == 1) ||
    665                    (emberAfCompareValues(maxv.ptrToDefaultValue, data, dataLen, isAttributeSigned) == -1)) {
    666                  return EMBER_ZCL_STATUS_INVALID_VALUE;
    667                }
    668              }
    669            }
    670          
    671            // write the data unless this is only a test
    672            if (!justTest) {
   \                     ??emAfWriteAttribute_4: (+1)
   \   000000DC   0x9816             LDR      R0,[SP, #+88]
   \   000000DE   0x2800             CMP      R0,#+0
   \   000000E0   0xD141             BNE.N    ??emAfWriteAttribute_7
    673              EmberAfStatus status;
    674              // Pre write attribute callback
    675              emberAfPreAttributeChangeCallback(endpoint,
    676                                                cluster,
    677                                                attributeID,
    678                                                mask,
    679                                                manufacturerCode,
    680                                                dataType,
    681                                                emberAfAttributeSize(metadata),
    682                                                data );
   \   000000E2   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \   000000E6   0x.... 0x....      BL       emberAfPreAttributeChangeCallback
    683          
    684              status = emAfClusterPreAttributeChangedCallback(endpoint,
    685                                                              cluster,
    686                                                              attributeID,
    687                                                              mask,
    688                                                              manufacturerCode,
    689                                                              dataType,
    690                                                              emberAfAttributeSize(metadata),
    691                                                              data );
   \   000000EA   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_1: (+1)
   \   000000EE   0x.... 0x....      BL       emAfClusterPreAttributeChangedCallback
    692              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   000000F2   0x2800             CMP      R0,#+0
   \   000000F4   0xD13C             BNE.N    ??emAfWriteAttribute_1
    693                return status;
    694              }
    695          
    696              // write the attribute
    697              status = emAfReadOrWriteAttribute(&record,
    698                                                NULL,    // metadata
    699                                                data,
    700                                                0,       // buffer size - unused
    701                                                TRUE);   // write?
   \   000000F6   0x2001             MOVS     R0,#+1
   \   000000F8   0x9000             STR      R0,[SP, #+0]
   \   000000FA   0x2300             MOVS     R3,#+0
   \   000000FC   0x462A             MOV      R2,R5
   \   000000FE   0x2100             MOVS     R1,#+0
   \   00000100   0xA805             ADD      R0,SP,#+20
   \   00000102   0x.... 0x....      BL       emAfReadOrWriteAttribute
    702          
    703              if (status != EMBER_ZCL_STATUS_SUCCESS){
   \   00000106   0xB188             CBZ.N    R0,??emAfWriteAttribute_8
    704                  return status;
   \   00000108   0xE032             B.N      ??emAfWriteAttribute_1
    705              }
   \                     ??emAfWriteAttribute_5: (+1)
   \   0000010A   0x9802             LDR      R0,[SP, #+8]
   \   0000010C   0x.... 0x....      BL       emberAfCompareValues
   \   00000110   0x2801             CMP      R0,#+1
   \   00000112   0xD009             BEQ.N    ??emAfWriteAttribute_6
   \   00000114   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000118   0x9801             LDR      R0,[SP, #+4]
   \   0000011A   0x4653             MOV      R3,R10
   \   0000011C   0x4629             MOV      R1,R5
   \   0000011E   0x.... 0x....      BL       emberAfCompareValues
   \   00000122   0xF110 0x0F01      CMN      R0,#+1
   \   00000126   0xD1D9             BNE.N    ??emAfWriteAttribute_4
   \                     ??emAfWriteAttribute_6: (+1)
   \   00000128   0x2087             MOVS     R0,#+135
   \   0000012A   0xE021             B.N      ??emAfWriteAttribute_1
    706          
    707              // Save the attribute to token if needed
    708              // Function itself will weed out tokens that are not tokenized.
    709              emAfSaveAttributeToToken(data, endpoint, cluster, metadata);
   \                     ??emAfWriteAttribute_8: (+1)
   \   0000012C   0x9B04             LDR      R3,[SP, #+16]
   \   0000012E   0x4632             MOV      R2,R6
   \   00000130   0x4649             MOV      R1,R9
   \   00000132   0x4628             MOV      R0,R5
   \   00000134   0x.... 0x....      BL       emAfSaveAttributeToToken
    710          
    711          
    712              emberAfReportingAttributeChangeCallback(endpoint,
    713                                                      cluster,
    714                                                      attributeID,
    715                                                      mask,
    716                                                      manufacturerCode,
    717                                                      dataType,
    718                                                      data);
   \   00000138   0x9502             STR      R5,[SP, #+8]
   \   0000013A   0x9400             STR      R4,[SP, #+0]
   \   0000013C   0x4643             MOV      R3,R8
   \   0000013E   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \   00000142   0x9001             STR      R0,[SP, #+4]
   \   00000144   0x463A             MOV      R2,R7
   \   00000146   0x4631             MOV      R1,R6
   \   00000148   0x4648             MOV      R0,R9
   \   0000014A   0x.... 0x....      BL       emberAfReportingAttributeChangeCallback
    719          
    720              // Post write attribute callback
    721              emberAfPostAttributeChangeCallback(endpoint,
    722                                                 cluster,
    723                                                 attributeID,
    724                                                 mask,
    725                                                 manufacturerCode,
    726                                                 dataType,
    727                                                 emberAfAttributeSize(metadata),
    728                                                 data);
   \   0000014E   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000152   0x.... 0x....      BL       emberAfPostAttributeChangeCallback
    729          
    730              emAfClusterAttributeChangedCallback(endpoint,
    731                                                  cluster,
    732                                                  attributeID,
    733                                                  mask,
    734                                                  manufacturerCode);
   \   00000156   0x9400             STR      R4,[SP, #+0]
   \   00000158   0x4643             MOV      R3,R8
   \   0000015A   0x463A             MOV      R2,R7
   \   0000015C   0x4631             MOV      R1,R6
   \   0000015E   0x4648             MOV      R0,R9
   \   00000160   0x.... 0x....      BL       emAfClusterAttributeChangedCallback
   \   00000164   0xE003             B.N      ??CrossCallReturnLabel_10
    735            } else {
    736              // bug: 11618, we are not handling properly external attributes
    737              // in this case... We need to do something. We don't really
    738              // know if it will succeed.
    739              emberAfAttributesPrintln("WRITE: no write, just a test");
   \                     ??emAfWriteAttribute_7: (+1)
   \   00000166   0x.... 0x....      ADR.W    R1,?_23
   \   0000016A   0x.... 0x....      BL       ?Subroutine6
    740              emberAfAttributesFlush();
    741            }
    742          
    743            return EMBER_ZCL_STATUS_SUCCESS;
   \                     ??CrossCallReturnLabel_10: (+1)
   \   0000016E   0x2000             MOVS     R0,#+0
   \                     ??emAfWriteAttribute_1: (+1)
   \   00000170   0xB009             ADD      SP,SP,#+36
   \   00000172   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    744          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x9503             STR      R5,[SP, #+12]
   \   00000002   0x4643             MOV      R3,R8
   \   00000004   0x9804             LDR      R0,[SP, #+16]
   \   00000006   0x78C0             LDRB     R0,[R0, #+3]
   \   00000008   0x9002             STR      R0,[SP, #+8]
   \   0000000A   0x9400             STR      R4,[SP, #+0]
   \   0000000C   0x463A             MOV      R2,R7
   \   0000000E   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \   00000012   0x9001             STR      R0,[SP, #+4]
   \   00000014   0x4631             MOV      R1,R6
   \   00000016   0x4648             MOV      R0,R9
   \   00000018   0x4770             BX       LR
    745          
    746          // If dataPtr is NULL, no data is copied to the caller.  
    747          // readLength should be 0 in that case.
    748          

   \                                 In section .text, align 2, keep-with-next
    749          EmberAfStatus emAfReadAttribute(int8u endpoint,
    750                                          EmberAfClusterId cluster,
    751                                          EmberAfAttributeId attributeID,
    752                                          int8u mask,
    753                                          int16u manufacturerCode,
    754                                          int8u *dataPtr,
    755                                          int16u readLength,
    756                                          EmberAfAttributeType *dataType)
    757          {
   \                     emAfReadAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    758            EmberAfAttributeMetadata *metadata = NULL;
   \   00000004   0x2400             MOVS     R4,#+0
    759            EmberAfAttributeSearchRecord record;
    760            EmberAfStatus status;
    761            record.endpoint = endpoint;
   \   00000006   0xF88D 0x0008      STRB     R0,[SP, #+8]
    762            record.clusterId = cluster;
    763            record.clusterMask = mask;
   \   0000000A   0xF88D 0x300C      STRB     R3,[SP, #+12]
    764            record.attributeId = attributeID;
   \   0000000E   0xF8AD 0x200E      STRH     R2,[SP, #+14]
   \   00000012   0xF8AD 0x100A      STRH     R1,[SP, #+10]
   \   00000016   0x9401             STR      R4,[SP, #+4]
    765            record.manufacturerCode = manufacturerCode;
    766            status = emAfReadOrWriteAttribute(&record,
    767                                              &metadata,
    768                                              dataPtr,
    769                                              readLength,
    770                                              FALSE); // write?
   \   00000018   0x9400             STR      R4,[SP, #+0]
   \   0000001A   0xA901             ADD      R1,SP,#+4
   \   0000001C   0x9808             LDR      R0,[SP, #+32]
   \   0000001E   0x9B0A             LDR      R3,[SP, #+40]
   \   00000020   0x9A09             LDR      R2,[SP, #+36]
   \   00000022   0xF8AD 0x0010      STRH     R0,[SP, #+16]
   \   00000026   0xA802             ADD      R0,SP,#+8
   \   00000028   0x.... 0x....      BL       emAfReadOrWriteAttribute
   \   0000002C   0x0004             MOVS     R4,R0
    771          
    772            if (status == EMBER_ZCL_STATUS_SUCCESS){
   \   0000002E   0xD105             BNE.N    ??emAfReadAttribute_0
   \   00000030   0x980B             LDR      R0,[SP, #+44]
    773              // It worked!  If the user asked for the type, set it before returning.
    774              if (dataType != NULL) {
   \   00000032   0xB148             CBZ.N    R0,??CrossCallReturnLabel_9
    775                (*dataType) = metadata->attributeType;
   \   00000034   0x9901             LDR      R1,[SP, #+4]
   \   00000036   0x7889             LDRB     R1,[R1, #+2]
   \   00000038   0x7001             STRB     R1,[R0, #+0]
   \   0000003A   0xE005             B.N      ??CrossCallReturnLabel_9
    776              }
    777            } else { // failed, print debug info
    778              if (status == EMBER_ZCL_STATUS_INSUFFICIENT_SPACE){
   \                     ??emAfReadAttribute_0: (+1)
   \   0000003C   0x2C89             CMP      R4,#+137
   \   0000003E   0xD103             BNE.N    ??CrossCallReturnLabel_9
    779                emberAfAttributesPrintln("READ: attribute size too large for caller");
   \   00000040   0x.... 0x....      ADR.W    R1,?_24
   \   00000044   0x.... 0x....      BL       ?Subroutine6
    780                emberAfAttributesFlush();
    781              }
    782            }
    783          
    784            return status;
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0xB006             ADD      SP,SP,#+24
   \   0000004C   0xBD10             POP      {R4,PC}          ;; return
    785          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x25 0x32          DC8      "%2x"
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \   00000000   0x52 0x4F          DC8      0x52, 0x4F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_2:
   \   00000000   0x52 0x57          DC8      0x52, 0x57, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_3:
   \   00000000   0x........         DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_4:
   \   00000000   0x........         DC32     zclClusterNames

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_5:
   \   00000000   0x........         DC32     appResponseLength

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_6:
   \   00000000   0x........         DC32     appResponseData

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x25 0x32          DC8 "%2x"
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x28 0x25          DC8 "(%p)"
   \              0x70 0x29    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x45 0x4E          DC8 "ENDPOINT %x"
   \              0x44 0x50    
   \              0x4F 0x49    
   \              0x4E 0x54    
   \              0x20 0x25    
   \              0x78 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x52 0x4F          DC8 "RO"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x52 0x57          DC8 "RW"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x63 0x6C          DC8 63H, 6CH, 75H, 73H, 20H, 2FH, 20H, 73H
   \              0x75 0x73    
   \              0x20 0x2F    
   \              0x20 0x73    
   \   00000008   0x69 0x64          DC8 69H, 64H, 65H, 20H, 2FH, 20H, 61H, 74H
   \              0x65 0x20    
   \              0x2F 0x20    
   \              0x61 0x74    
   \   00000010   0x74 0x72          DC8 74H, 72H, 20H, 2FH, 20H, 6DH, 66H, 67H
   \              0x20 0x2F    
   \              0x20 0x6D    
   \              0x66 0x67    
   \   00000018   0x20 0x20          DC8 20H, 20H, 2FH, 74H, 79H, 70H, 65H, 28H
   \              0x2F 0x74    
   \              0x79 0x70    
   \              0x65 0x28    
   \   00000020   0x6C 0x65          DC8 6CH, 65H, 6EH, 29H, 2FH, 20H, 72H, 77H
   \              0x6E 0x29    
   \              0x2F 0x20    
   \              0x72 0x77    
   \   00000028   0x20 0x2F          DC8 20H, 2FH, 20H, 73H, 74H, 6FH, 72H, 61H
   \              0x20 0x73    
   \              0x74 0x6F    
   \              0x72 0x61    
   \   00000030   0x67 0x65          DC8 67H, 65H, 20H, 2FH, 20H, 64H, 61H, 74H
   \              0x20 0x2F    
   \              0x20 0x64    
   \              0x61 0x74    
   \   00000038   0x61 0x20          DC8 61H, 20H, 28H, 72H, 61H, 77H, 29H, 0
   \              0x28 0x72    
   \              0x61 0x77    
   \              0x29 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x25 0x32          DC8 "%2x / %p / %2x / "
   \              0x78 0x20    
   \              0x2F 0x20    
   \              0x25 0x70    
   \              0x20 0x2F    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x20 0x2F    
   \              0x20 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x63 0x6C          DC8 "clnt"
   \              0x6E 0x74    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x73 0x72          DC8 "srvr"
   \              0x76 0x72    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x2D 0x2D          DC8 "----"
   \              0x2D 0x2D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x20 0x2F          DC8 " / %x (%x) / %p / %p / "
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x28 0x25    
   \              0x78 0x29    
   \              0x20 0x2F    
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x2F 0x20    
   \              0x25 0x70    
   \              0x20 0x2F    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x20 0x74          DC8 " token "
   \              0x6F 0x6B    
   \              0x65 0x6E    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x65 0x78          DC8 "extern "
   \              0x74 0x65    
   \              0x72 0x6E    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x20 0x20          DC8 "  RAM  "
   \              0x52 0x41    
   \              0x4D 0x20    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x55 0x6E          DC8 "Unsupported"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x4F 0x54          DC8 4FH, 54H, 41H, 20H, 52H, 45H, 41H, 44H
   \              0x41 0x20    
   \              0x52 0x45    
   \              0x41 0x44    
   \   00000008   0x3A 0x20          DC8 3AH, 20H, 65H, 70H, 3AH, 25H, 78H, 20H
   \              0x65 0x70    
   \              0x3A 0x25    
   \              0x78 0x20    
   \   00000010   0x63 0x69          DC8 63H, 69H, 64H, 3AH, 25H, 32H, 78H, 20H
   \              0x64 0x3A    
   \              0x25 0x32    
   \              0x78 0x20    
   \   00000018   0x61 0x74          DC8 61H, 74H, 74H, 69H, 64H, 3AH, 25H, 32H
   \              0x74 0x69    
   \              0x64 0x3A    
   \              0x25 0x32    
   \   00000020   0x78 0x20          DC8 78H, 20H, 6DH, 73H, 6BH, 3AH, 25H, 78H
   \              0x6D 0x73    
   \              0x6B 0x3A    
   \              0x25 0x78    
   \   00000028   0x20 0x6D          DC8 20H, 6DH, 66H, 63H, 6FH, 64H, 65H, 3AH
   \              0x66 0x63    
   \              0x6F 0x64    
   \              0x65 0x3A    
   \   00000030   0x25 0x32          DC8 25H, 32H, 78H, 0
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x52 0x45          DC8 "READ: clus %2x, attr %2x failed %x"
   \              0x41 0x44    
   \              0x3A 0x20    
   \              0x63 0x6C    
   \              0x75 0x73    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x2C 0x20    
   \              0x61 0x74    
   \              0x74 0x72    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x20    
   \              0x25 0x78    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x52 0x45          DC8 "READ: clus %2x, attr %2x, dataLen: %x, OK"
   \              0x41 0x44    
   \              0x3A 0x20    
   \              0x63 0x6C    
   \              0x75 0x73    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x2C 0x20    
   \              0x61 0x74    
   \              0x74 0x72    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x2C 0x20    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x4C 0x65    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x78 0x2C    
   \              0x20 0x4F    
   \              0x4B 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x52 0x45          DC8 "REPORT: clus 0x%2x, attr 0x%2x: 0x%x"
   \              0x50 0x4F    
   \              0x52 0x54    
   \              0x3A 0x20    
   \              0x63 0x6C    
   \              0x75 0x73    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x2C 0x20    
   \              0x61 0x74    
   \              0x74 0x72    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x25 0x70          DC8 "%pep %x clus %2x attr %2x not supported"
   \              0x65 0x70    
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x63 0x6C    
   \              0x75 0x73    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x20 0x61    
   \              0x74 0x74    
   \              0x72 0x20    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x57 0x52          DC8 "WRITE ERR: "
   \              0x49 0x54    
   \              0x45 0x20    
   \              0x45 0x52    
   \              0x52 0x3A    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x25 0x70          DC8 "%pinvalid data type"
   \              0x69 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x20 0x74    
   \              0x79 0x70    
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x25 0x70          DC8 "%pattr not writable"
   \              0x61 0x74    
   \              0x74 0x72    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x57 0x52          DC8 "WRITE: no write, just a test"
   \              0x49 0x54    
   \              0x45 0x3A    
   \              0x20 0x6E    
   \              0x6F 0x20    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x2C    
   \              0x20 0x6A    
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x61 0x20    
   \              0x74 0x65    
   \              0x73 0x74    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x52 0x45          DC8 "READ: attribute size too large for caller"
   \              0x41 0x44    
   \              0x3A 0x20    
   \              0x61 0x74    
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \              0x65 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x20 0x74    
   \              0x6F 0x6F    
   \              0x20 0x6C    
   \              0x61 0x72    
   \              0x67 0x65    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x61 0x6C    
   \              0x6C 0x65    
   \              0x72 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   emAfReadAttribute
        32   -> emAfReadOrWriteAttribute
        32   -> emberAfPrintln
      72   emAfWriteAttribute
        72   -> emAfClusterAttributeChangedCallback
        72   -> emAfClusterPreAttributeChangedCallback
        72   -> emAfReadOrWriteAttribute
        72   -> emAfSaveAttributeToToken
        72   -> emberAfCompareValues
        72   -> emberAfIsTypeSigned
        72   -> emberAfPostAttributeChangeCallback
        72   -> emberAfPreAttributeChangeCallback
        72   -> emberAfPrintln
        72   -> emberAfReportingAttributeChangeCallback
     296   emberAfAppendAttributeReportFields
       296   -> emberAfGetDataSize
       296   -> emberAfIsThisDataTypeAStringType
       296   -> emberAfPrintln
       296   -> emberAfReadAttribute
       296   -> emberAfStringLength
       296   -> halCommonMemCopy
     312   emberAfPrintAttributeTable
       312   -> emAfGetManufacturerCodeForAttribute
       312   -> emAfReadAttribute
       312   -> emberAfEndpointCount
       312   -> emberAfFindClusterNameIndex
       312   -> emberAfIsLongStringAttributeType
       312   -> emberAfIsStringAttributeType
       312   -> emberAfLongStringLength
       312   -> emberAfPrint
       312   -> emberAfPrintBuffer
       312   -> emberAfPrintln
       312   -> emberAfStringLength
      24   emberAfReadAttribute
        24   -> emAfReadAttribute
      24   emberAfReadClientAttribute
        24   -> emAfReadAttribute
      24   emberAfReadManufacturerSpecificClientAttribute
        24   -> emAfReadAttribute
      24   emberAfReadManufacturerSpecificServerAttribute
        24   -> emAfReadAttribute
      48   emberAfReadSequentialAttributesAddToResponse
        48   -> emAfMatchAttribute
        48   -> emAfMatchCluster
        48   -> emberAfFindCluster
        48   -> emberAfPutInt16uInResp
        48   -> emberAfPutInt8uInResp
      24   emberAfReadServerAttribute
        24   -> emAfReadAttribute
     312   emberAfRetrieveAttributeAndCraftResponse
       312   -> emAfReadAttribute
       312   -> emberAfGetDataSize
       312   -> emberAfIsThisDataTypeAStringType
       312   -> emberAfPrintln
       312   -> emberAfPutInt16uInResp
       312   -> emberAfPutInt8uInResp
       312   -> emberAfStringLength
       312   -> halCommonMemCopy
      32   emberAfVerifyAttributeWrite
        32   -> emAfWriteAttribute
      32   emberAfWriteAttribute
        32   -> emAfWriteAttribute
      56   emberAfWriteAttributeExternal
        56   -> emAfWriteAttribute
        56   -> emberAfAllowNetworkWriteAttributeCallback
      32   emberAfWriteClientAttribute
        32   -> emAfWriteAttribute
      32   emberAfWriteManufacturerSpecificClientAttribute
        32   -> emAfWriteAttribute
      32   emberAfWriteManufacturerSpecificServerAttribute
        32   -> emAfWriteAttribute
      32   emberAfWriteServerAttribute
        32   -> emAfWriteAttribute


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable26_2
       4  ??DataTable26_3
       4  ??DataTable26_4
       4  ??DataTable26_5
       4  ??DataTable26_6
       8  ??Subroutine8_0
       8  ??Subroutine9_0
       8  ?Subroutine0
       8  ?Subroutine1
      26  ?Subroutine2
      20  ?Subroutine3
      16  ?Subroutine4
      12  ?Subroutine5
       6  ?Subroutine6
       6  ?Subroutine7
       8  ?_0
      12  ?_1
       4  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
      12  ?_14
      52  ?_15
      36  ?_16
      44  ?_17
      40  ?_18
      40  ?_19
      64  ?_2
      12  ?_20
      20  ?_21
      20  ?_22
      32  ?_23
      44  ?_24
      20  ?_3
       8  ?_4
       8  ?_5
       8  ?_6
       4  ?_7
      24  ?_8
       4  ?_9
      78  emAfReadAttribute
     374  emAfWriteAttribute
     148  emberAfAppendAttributeReportFields
     368  emberAfPrintAttributeTable
      20  emberAfReadAttribute
      10  emberAfReadClientAttribute
      10  emberAfReadManufacturerSpecificClientAttribute
      12  emberAfReadManufacturerSpecificServerAttribute
     202  emberAfReadSequentialAttributesAddToResponse
      10  emberAfReadServerAttribute
     200  emberAfRetrieveAttributeAndCraftResponse
      26  emberAfVerifyAttributeWrite
      26  emberAfWriteAttribute
      80  emberAfWriteAttributeExternal
      12  emberAfWriteClientAttribute
      12  emberAfWriteManufacturerSpecificClientAttribute
      10  emberAfWriteManufacturerSpecificServerAttribute
      12  emberAfWriteServerAttribute

 
    12 bytes in section .rodata
 2 284 bytes in section .text
 
 2 284 bytes of CODE  memory
    12 bytes of CONST memory

Errors: none
Warnings: none
