###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM     19/Feb/2015  10:52:21 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\framework\plugin\ota-client\ota-client-cli.c   #
#    Command line =  C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\framework\plugin\ota-client\ota-client-cli.c   #
#                    -D "GENERATED_TOKEN_HEADER=\"app/builder/Aurora_dimmer/A #
#                    urora_dimmer_tokens.h\"" -D                              #
#                    "ZA_GENERATED_HEADER=\"app/builder/Aurora_dimmer/Aurora_ #
#                    dimmer.h\"" -D APP_BTL -D "BOARD_HEADER=\"app/builder/Au #
#                    rora_dimmer/Aurora_dimmer_board_1.h\"" -D                #
#                    "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\""  #
#                    -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357    #
#                    -D PHY_EM3XX -D "APPLICATION_TOKEN_HEADER=\"app/framewor #
#                    k/util/tokens.h\"" -D "CONFIGURATION_HEADER=\"app/framew #
#                    ork/util/config.h\"" -D "ATTRIBUTE_STORAGE_CONFIGURATION #
#                    =\"app/builder/Aurora_dimmer/Aurora_dimmer_endpoint_conf #
#                    ig.h\"" -D "__SOURCEFILE__=\"ota-client-cli.c\"" -lC     #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\build\Aurora_dimmer\ --diag_suppress Pa050 -o      #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\build\Aurora_dimmer\ --debug --endian=little       #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\framework\plugin\ota-client\ -I                #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\builder\Aurora_dimmer\ -I                      #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\builder\Aurora_dimmer\..\..\..\ -I             #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\builder\Aurora_dimmer\..\..\..\app\framework\i #
#                    nclude\ -I C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZN #
#                    et5.3.0-GA\em35x\app\builder\Aurora_dimmer\..\..\..\ -I  #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\builder\Aurora_dimmer\..\..\..\stack\ -I       #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\builder\Aurora_dimmer\..\..\..\hal\ -I         #
#                    C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\app\builder\Aurora_dimmer\..\..\..\hal\..\ -Ohz    #
#                    --use_c++_inline                                         #
#    List file    =  C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\build\Aurora_dimmer\ota-client-cli.lst             #
#    Object file  =  C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\ #
#                    em35x\build\Aurora_dimmer\ota-client-cli.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\PROJECTS\Prj_Aurora\trunk\Firmware\EmberZNet5.3.0-GA\em35x\app\framework\plugin\ota-client\ota-client-cli.c
      1          // *******************************************************************
      2          // * ota-client-cli.c
      3          // *
      4          // * Zigbee Over-the-air bootload cluster for upgrading firmware and 
      5          // * downloading specific file. 
      6          // * 
      7          // * Copyright 2009 by Ember Corporation. All rights reserved.              *80*
      8          // *******************************************************************
      9          
     10          #include "app/framework/include/af.h"
     11          #include "app/util/serial/command-interpreter2.h"
     12          
     13          #include "app/framework/plugin/ota-common/ota.h"
     14          #include "app/framework/plugin/ota-common/ota-cli.h"
     15          #include "app/framework/plugin/ota-client/ota-client.h"
     16          #include "app/framework/plugin/ota-storage-common/ota-storage.h"
     17          
     18          #include "app/framework/plugin/ota-client/ota-client-signature-verify.h"
     19          #include "app/framework/plugin/ota-client-policy/ota-client-policy.h"
     20          
     21          /**
     22           * @addtogroup cli
     23           * @{
     24           */
     25          /**
     26           * @brief OTA Client CLI commands. Used to drive the OTA client.
     27           *        <b>plugin ota-client bootload &lt;index&gt;</b>
     28           *        - <i> bootloads the image at the specified index by calling the OTA
     29           *              bootload callback.
     30           *           - index - int8u. The index at which to bootload the image.</i>
     31           *
     32           *        <b>plugin ota-client verify &lt;index&gt;</b>
     33           *        - <i> Performs signature verification on the image at the specified
     34           *              index.
     35           *           - index - int8u. The index of the image to be verified.</i>
     36           *
     37           *        <b>plugin ota-client info</b>
     38           *        - <i>Prints the manufacturer ID, Image Type ID, and Version information
     39           *             that are used when a query next image is sent to the server by the
     40           *             client.</i>
     41           *
     42           *        <b>plugin ota-client start</b>
     43           *        - <i>Starts the ota client state machine. The state machine discovers
     44           *             the OTA server, queries for new images, downloads the images
     45           *             and waits for the server command to upgrade.</i>
     46           *
     47           *        <b>plugin ota-client stop</b>
     48           *        - <i>Stops the OTA state machine.</i>
     49           *
     50           *        <b>plugin ota-client status</b>
     51           *        - <i>Prints information on the current state of the OTA client
     52           *             download.</i>
     53           *
     54           *        <b>plugin ota-client block-test</b>
     55           *        - <i></i>
     56           *
     57           *        <b>plugin ota-client page-request</b>
     58           *        - <i></i>
     59           *
     60           */
     61          #define EMBER_AF_DOXYGEN_CLI__OTA_CLIENT_COMMANDS
     62          /** @} END addtogroup */
     63          
     64          #ifdef EMBER_AF_PLUGIN_OTA_CLIENT
     65          
     66          //------------------------------------------------------------------------------
     67          // Forward Declarations
     68          
     69          void otaCliBootload(void);
     70          void otaPrintClientInfo(void);
     71          void otaCliVerify(void);
     72          void otaStartClientCommand(void);
     73          void otaStopClientCommand(void);
     74          void setPageRequest(void);
     75          
     76          // TODO: need to gate this when we're better equipped to do so
     77          // with the generated CLI
     78          //#if defined(EMBER_TEST)
     79          void setPausePercentage(void);
     80          //#endif
     81          
     82          #if defined(EMBER_TEST)
     83          #define PAUSE_AT_COMMAND emberCommandEntryAction("pause-at",     setPausePercentage, "u" ,""), 
     84          #else
     85          #define PAUSE_AT_COMMAND
     86          #endif
     87          
     88          #ifndef EMBER_AF_GENERATE_CLI
     89          #define OTA_CLIENT_COMMANDS  \
     90            emberCommandEntryAction("bootload",     otaCliBootload, "u", ""), \
     91            emberCommandEntryAction("verify",       otaCliVerify,   "u", ""), \
     92            emberCommandEntryAction("info",         otaPrintClientInfo,    "", ""), \
     93            emberCommandEntryAction("start",        otaStartClientCommand, "", ""), \
     94            emberCommandEntryAction("stop",         otaStopClientCommand,  "", ""), \
     95            emberCommandEntryAction("status",       emAfOtaClientPrintState, "", ""), \
     96            emberCommandEntryAction("block-test",   emAfSendImageBlockRequestTest, "", ""), \
     97            emberCommandEntryAction("page-request", setPageRequest, "u", ""), \
     98            PAUSE_AT_COMMAND \
     99            emberCommandEntryTerminator(), 
    100          #endif // EMBER_AF_GENERATE_CLI
    101          
    102          //------------------------------------------------------------------------------
    103          // Globals

   \                                 In section .rodata, align 4, keep-with-next
    104          EmberCommandEntry emberAfPluginOtaClientCommands[] = {
   \                     emberAfPluginOtaClientCommands:
   \   00000000   0x00000000         DC32 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   
    105            
    106          #ifndef EMBER_AF_GENERATE_CLI
    107            OTA_CLIENT_COMMANDS
    108          #endif // EMBER_AF_GENERATE_CLI
    109          
    110            emberCommandEntryTerminator(),
    111          };
    112          
    113          //------------------------------------------------------------------------------
    114          // Functions
    115          

   \                                 In section .text, align 2, keep-with-next
    116          void otaStartStopClientCommand(boolean starting)
    117          {
   \                     otaStartStopClientCommand:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    118            emberAfCorePrintln("%p" "ing OTA client state machine",
    119                               starting ? "start" : "stopp");
   \   00000004   0xBF14             ITE      NE 
   \   00000006   0x.... 0x....      ADRNE.W  R2,`?<Constant "start">`
   \   0000000A   0x.... 0x....      ADREQ.W  R2,`?<Constant "stopp">`
   \   0000000E   0x.... 0x....      ADR.W    R1,`?<Constant "%ping OTA client stat...">`
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x.... 0x....      BL       emberAfPrintln
    120            if (starting) {
   \   00000018   0x2C00             CMP      R4,#+0
   \   0000001A   0xBF1C             ITT      NE 
   \   0000001C   0xE8BD 0x4010      POPNE    {R4,LR}
   \   00000020   0x.... 0x....      BNE.W    emberAfOtaClientStartCallback
    121              emberAfOtaClientStartCallback(); 
    122            } else {
    123              emAfOtaClientStop();
   \   00000024   0xE8BD 0x4010      POP      {R4,LR}
   \   00000028   0x.... 0x....      B.W      emAfOtaClientStop
    124            }
    125          }
    126          

   \                                 In section .text, align 2, keep-with-next
    127          void otaStartClientCommand(void)
    128          {
    129            otaStartStopClientCommand(TRUE);
   \                     otaStartClientCommand:
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x....             B.N      otaStartStopClientCommand
    130          }
    131          

   \                                 In section .text, align 2, keep-with-next
    132          void otaStopClientCommand(void)
    133          {
    134            otaStartStopClientCommand(FALSE);
   \                     otaStopClientCommand:
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             B.N      otaStartStopClientCommand
    135          }
    136          

   \                                 In section .text, align 2, keep-with-next
    137          void otaCliBootload(void)
    138          {
   \                     otaCliBootload:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    139            int8u index = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000008   0x4604             MOV      R4,R0
    140            EmberAfOtaImageId id = emAfOtaFindImageIdByIndex(index);
   \   0000000A   0xB2E1             UXTB     R1,R4
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       emAfOtaFindImageIdByIndex
    141            if (!emberAfIsOtaImageIdValid(&id)) {
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0x.... 0x....      BL       emberAfIsOtaImageIdValid
   \   00000018   0xB928             CBNZ.N   R0,??otaCliBootload_0
    142              otaPrintln("Error: No image at index %d", index);
   \   0000001A   0xB2E2             UXTB     R2,R4
   \   0000001C   0x.... 0x....      ADR.W    R1,`?<Constant "Error: No image at in...">`
   \   00000020   0x.... 0x....      BL       ?Subroutine0
    143              return;
   \                     ??CrossCallReturnLabel_11:
   \   00000024   0xBD1F             POP      {R0-R4,PC}
    144            }
    145            emberAfOtaClientBootloadCallback(&id);
   \                     ??otaCliBootload_0:
   \   00000026   0xA800             ADD      R0,SP,#+0
   \   00000028   0x.... 0x....      BL       emberAfOtaClientBootloadCallback
    146          }
   \   0000002C   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0x2040             MOVS     R0,#+64
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
    147          

   \                                 In section .text, align 2, keep-with-next
    148          void otaCliVerify(void)
    149          {
    150          #if defined(EMBER_AF_PLUGIN_OTA_CLIENT_SIGNATURE_VERIFICATION_SUPPORT)
    151            int8u index = (int8u)emberUnsignedCommandArgument(0);
    152            EmberAfOtaImageId id = emAfOtaFindImageIdByIndex(index);
    153            if (!emberAfIsOtaImageIdValid(&id)) {
    154              otaPrintln("Error: No image at index %d", index);
    155              return;
    156            }
    157            emAfOtaImageSignatureVerify(0,       // max number of hash calculations 
    158                                        &id,     //   (0 = keep going until hashing is done)
    159                                        TRUE);   // new verification?
    160          #else
    161            otaPrintln("Not supported.");
   \                     otaCliVerify:
   \   00000000   0x.... 0x....      ADR.W    R1,`?<Constant "Not supported.">`
   \   00000004   0x2040             MOVS     R0,#+64
   \   00000006   0x.... 0x....      B.W      emberAfPrintln
    162          #endif
    163          }
    164          
    165          

   \                                 In section .text, align 2, keep-with-next
    166          void otaPrintClientInfo(void)
    167          {
   \                     otaPrintClientInfo:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    168            EmberAfOtaImageId myId;
    169            int16u hardwareVersion;
    170            emberAfOtaClientVersionInfoCallback(&myId, &hardwareVersion);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x.... 0x....      BL       emberAfOtaClientVersionInfoCallback
    171            otaPrintln("Client image query info");
   \   0000000C   0x.... 0x....      ADR.W    R1,`?<Constant "Client image query info">`
   \   00000010   0x2040             MOVS     R0,#+64
   \   00000012   0x.... 0x....      BL       emberAfPrintln
    172            otaPrintln("Manuf ID:         0x%2X", myId.manufacturerId);
   \   00000016   0xF8BD 0x2004      LDRH     R2,[SP, #+4]
   \   0000001A   0x.... 0x....      ADR.W    R1,`?<Constant "Manuf ID:         0x%2X">`
   \   0000001E   0x.... 0x....      BL       ?Subroutine0
    173            otaPrintln("Image Type ID:    0x%2X", myId.imageTypeId);
   \                     ??CrossCallReturnLabel_10:
   \   00000022   0xF8BD 0x2006      LDRH     R2,[SP, #+6]
   \   00000026   0x.... 0x....      ADR.W    R1,`?<Constant "Image Type ID:    0x%2X">`
   \   0000002A   0x.... 0x....      BL       ?Subroutine0
    174            otaPrintln("Current Version:  0x%4X", myId.firmwareVersion);
   \                     ??CrossCallReturnLabel_9:
   \   0000002E   0x9A02             LDR      R2,[SP, #+8]
   \   00000030   0x.... 0x....      ADR.W    R1,`?<Constant "Current Version:  0x%4X">`
   \   00000034   0x.... 0x....      BL       ?Subroutine0
    175            emberAfOtaBootloadClusterPrint(  "Hardware Version: ");
   \                     ??CrossCallReturnLabel_8:
   \   00000038   0x.... 0x....      ADR.W    R1,`?<Constant "Hardware Version: ">`
   \   0000003C   0x2040             MOVS     R0,#+64
   \   0000003E   0x.... 0x....      BL       emberAfPrint
    176            if (hardwareVersion != EMBER_AF_INVALID_HARDWARE_VERSION) {
   \   00000042   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000046   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000004A   0x4288             CMP      R0,R1
   \   0000004C   0xD005             BEQ.N    ??otaPrintClientInfo_0
    177              otaPrintln("0x%2X", hardwareVersion);
   \   0000004E   0x4602             MOV      R2,R0
   \   00000050   0x.... 0x....      ADR.W    R1,`?<Constant "0x%2X">`
   \   00000054   0x.... 0x....      BL       ?Subroutine0
    178            } else {
   \                     ??CrossCallReturnLabel_7:
   \   00000058   0xE003             B.N      ??otaPrintClientInfo_1
    179              otaPrintln("NA");
   \                     ??otaPrintClientInfo_0:
   \   0000005A   0x....             ADR.N    R1,??DataTable21  ;; 0x4E, 0x41, 0x00, 0x00
   \   0000005C   0x2040             MOVS     R0,#+64
   \   0000005E   0x.... 0x....      BL       emberAfPrintln
    180            }
    181            emberAfCoreFlush();
    182          
    183            otaPrintln("Query Delay ms:            %l", (int32u)EMBER_AF_OTA_QUERY_DELAY_MS);
   \                     ??otaPrintClientInfo_1:
   \   00000062   0x....             LDR.N    R2,??DataTable21_1  ;; 0x493e0
   \   00000064   0x.... 0x....      ADR.W    R1,`?<Constant "Query Delay ms:      ...">`
   \   00000068   0x.... 0x....      BL       ?Subroutine0
    184            emberAfCoreFlush();
    185            otaPrintln("Server Discovery Delay ms: %l", (int32u)EMBER_AF_OTA_SERVER_DISCOVERY_DELAY_MS);
   \                     ??CrossCallReturnLabel_6:
   \   0000006C   0x....             LDR.N    R2,??DataTable21_2  ;; 0x927c0
   \   0000006E   0x.... 0x....      ADR.W    R1,`?<Constant "Server Discovery Dela...">`
   \   00000072   0x.... 0x....      BL       ?Subroutine0
    186            otaPrintln("Download Delay ms:         %l", (int32u)EMBER_AF_PLUGIN_OTA_CLIENT_DOWNLOAD_DELAY_MS);
   \                     ??CrossCallReturnLabel_5:
   \   00000076   0x2200             MOVS     R2,#+0
   \   00000078   0x.... 0x....      ADR.W    R1,`?<Constant "Download Delay ms:   ...">`
   \   0000007C   0x.... 0x....      BL       ?Subroutine0
    187            otaPrintln("Run Upgrade Delay ms:      %l", (int32u)EMBER_AF_RUN_UPGRADE_REQUEST_DELAY_MS);
   \                     ??CrossCallReturnLabel_4:
   \   00000080   0xF64E 0x2260      MOVW     R2,#+60000
   \   00000084   0x.... 0x....      ADR.W    R1,`?<Constant "Run Upgrade Delay ms:...">`
   \   00000088   0x.... 0x....      BL       ?Subroutine0
    188            emberAfCoreFlush();
    189            otaPrintln("Verify Delay ms:           %l", (int32u)EMBER_AF_PLUGIN_OTA_CLIENT_VERIFY_DELAY_MS);
   \                     ??CrossCallReturnLabel_3:
   \   0000008C   0x220A             MOVS     R2,#+10
   \   0000008E   0x.... 0x....      ADR.W    R1,`?<Constant "Verify Delay ms:     ...">`
   \   00000092   0x.... 0x....      BL       ?Subroutine0
    190            otaPrintln("Download Error Threshold:  %d",    EMBER_AF_PLUGIN_OTA_CLIENT_DOWNLOAD_ERROR_THRESHOLD);
   \                     ??CrossCallReturnLabel_2:
   \   00000096   0x220A             MOVS     R2,#+10
   \   00000098   0x.... 0x....      ADR.W    R1,`?<Constant "Download Error Thresh...">`
   \   0000009C   0x.... 0x....      BL       ?Subroutine0
    191            otaPrintln("Upgrade Wait Threshold:    %d",    EMBER_AF_PLUGIN_OTA_CLIENT_UPGRADE_WAIT_THRESHOLD);
   \                     ??CrossCallReturnLabel_1:
   \   000000A0   0x220A             MOVS     R2,#+10
   \   000000A2   0x.... 0x....      ADR.W    R1,`?<Constant "Upgrade Wait Threshol...">`
   \   000000A6   0x.... 0x....      BL       ?Subroutine0
    192            emberAfCoreFlush();
    193          
    194          #if defined(EMBER_AF_PLUGIN_OTA_CLIENT_USE_PAGE_REQUEST)
    195            otaPrintln("Use Page Request: %s", emAfUsingPageRequest() ? "yes": "no");
    196            otaPrintln("Page Request Size: %d bytes", 
    197                       EMBER_AF_PLUGIN_OTA_CLIENT_PAGE_REQUEST_SIZE);
    198            otaPrintln("Page Request Timeout: %d sec.", 
    199                       EMBER_AF_PLUGIN_OTA_CLIENT_PAGE_REQUEST_TIMEOUT_SECONDS);
    200          #endif
    201          
    202          #if defined(EMBER_AF_PLUGIN_OTA_CLIENT_SIGNATURE_VERIFICATION_SUPPORT)
    203            otaPrintln("");
    204            emAfOtaClientSignatureVerifyPrintSigners();
    205          #endif
    206          }
   \                     ??CrossCallReturnLabel_0:
   \   000000AA   0xB005             ADD      SP,SP,#+20
   \   000000AC   0xBD00             POP      {PC}             ;; return
    207          

   \                                 In section .text, align 2, keep-with-next
    208          void setPageRequest(void)
    209          {
   \                     setPageRequest:
   \   00000000   0xB580             PUSH     {R7,LR}
    210            boolean pageRequest = (boolean)emberUnsignedCommandArgument(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
    211            emAfSetPageRequest(pageRequest);
   \   00000008   0xB2C0             UXTB     R0,R0
   \   0000000A   0xE8BD 0x4002      POP      {R1,LR}
   \   0000000E   0x.... 0x....      B.W      emAfSetPageRequest
    212          }
    213          
    214          // TODO: need to gate this when we're better equipped to do so
    215          // with the generated CLI
    216          //#if defined(EMBER_TEST)

   \                                 In section .text, align 2, keep-with-next
    217          void setPausePercentage(void)
    218          {
   \                     setPausePercentage:
   \   00000000   0xB580             PUSH     {R7,LR}
    219            emAfOtaClientStopDownloadPercentage = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000008   0x....             LDR.N    R1,??DataTable21_3
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    220          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x4E 0x41          DC8      0x4E, 0x41, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x000493E0         DC32     0x493e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x000927C0         DC32     0x927c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x........         DC32     emAfOtaClientStopDownloadPercentage

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%ping OTA client stat...">`:
   \   00000000   0x25 0x70          DC8 "%ping OTA client state machine"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x4F 0x54    
   \              0x41 0x20    
   \              0x63 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x20 0x6D    
   \              0x61 0x63    
   \              0x68 0x69    
   \              0x6E 0x65    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NA">`:
   \   00000000   0x4E 0x41          DC8 "NA"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "start">`:
   \   00000000   0x73 0x74          DC8 "start"
   \              0x61 0x72    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "stopp">`:
   \   00000000   0x73 0x74          DC8 "stopp"
   \              0x6F 0x70    
   \              0x70 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Error: No image at in...">`:
   \   00000000   0x45 0x72          DC8 "Error: No image at index %d"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x69 0x6D    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x61 0x74    
   \              0x20 0x69    
   \              0x6E 0x64    
   \              0x65 0x78    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Not supported.">`:
   \   00000000   0x4E 0x6F          DC8 "Not supported."
   \              0x74 0x20    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x2E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Client image query info">`:
   \   00000000   0x43 0x6C          DC8 "Client image query info"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x69    
   \              0x6D 0x61    
   \              0x67 0x65    
   \              0x20 0x71    
   \              0x75 0x65    
   \              0x72 0x79    
   \              0x20 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Manuf ID:         0x%2X">`:
   \   00000000   0x4D 0x61          DC8 "Manuf ID:         0x%2X"
   \              0x6E 0x75    
   \              0x66 0x20    
   \              0x49 0x44    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Image Type ID:    0x%2X">`:
   \   00000000   0x49 0x6D          DC8 "Image Type ID:    0x%2X"
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x54 0x79    
   \              0x70 0x65    
   \              0x20 0x49    
   \              0x44 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Current Version:  0x%4X">`:
   \   00000000   0x43 0x75          DC8 "Current Version:  0x%4X"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x56 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x34    
   \              0x58 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Hardware Version: ">`:
   \   00000000   0x48 0x61          DC8 "Hardware Version: "
   \              0x72 0x64    
   \              0x77 0x61    
   \              0x72 0x65    
   \              0x20 0x56    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0x%2X">`:
   \   00000000   0x30 0x78          DC8 "0x%2X"
   \              0x25 0x32    
   \              0x58 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Query Delay ms:      ...">`:
   \   00000000   0x51 0x75          DC8 "Query Delay ms:            %l"
   \              0x65 0x72    
   \              0x79 0x20    
   \              0x44 0x65    
   \              0x6C 0x61    
   \              0x79 0x20    
   \              0x6D 0x73    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x25    
   \              0x6C 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Server Discovery Dela...">`:
   \   00000000   0x53 0x65          DC8 "Server Discovery Delay ms: %l"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x44    
   \              0x69 0x73    
   \              0x63 0x6F    
   \              0x76 0x65    
   \              0x72 0x79    
   \              0x20 0x44    
   \              0x65 0x6C    
   \              0x61 0x79    
   \              0x20 0x6D    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x6C 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Download Delay ms:   ...">`:
   \   00000000   0x44 0x6F          DC8 "Download Delay ms:         %l"
   \              0x77 0x6E    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \              0x20 0x44    
   \              0x65 0x6C    
   \              0x61 0x79    
   \              0x20 0x6D    
   \              0x73 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x25    
   \              0x6C 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Run Upgrade Delay ms:...">`:
   \   00000000   0x52 0x75          DC8 "Run Upgrade Delay ms:      %l"
   \              0x6E 0x20    
   \              0x55 0x70    
   \              0x67 0x72    
   \              0x61 0x64    
   \              0x65 0x20    
   \              0x44 0x65    
   \              0x6C 0x61    
   \              0x79 0x20    
   \              0x6D 0x73    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x25    
   \              0x6C 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Verify Delay ms:     ...">`:
   \   00000000   0x56 0x65          DC8 "Verify Delay ms:           %l"
   \              0x72 0x69    
   \              0x66 0x79    
   \              0x20 0x44    
   \              0x65 0x6C    
   \              0x61 0x79    
   \              0x20 0x6D    
   \              0x73 0x3A    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x25    
   \              0x6C 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Download Error Thresh...">`:
   \   00000000   0x44 0x6F          DC8 "Download Error Threshold:  %d"
   \              0x77 0x6E    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x54    
   \              0x68 0x72    
   \              0x65 0x73    
   \              0x68 0x6F    
   \              0x6C 0x64    
   \              0x3A 0x20    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Upgrade Wait Threshol...">`:
   \   00000000   0x55 0x70          DC8 "Upgrade Wait Threshold:    %d"
   \              0x67 0x72    
   \              0x61 0x64    
   \              0x65 0x20    
   \              0x57 0x61    
   \              0x69 0x74    
   \              0x20 0x54    
   \              0x68 0x72    
   \              0x65 0x73    
   \              0x68 0x6F    
   \              0x6C 0x64    
   \              0x3A 0x20    
   \              0x20 0x20    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0
    221          //#endif
    222          
    223          #endif //EMBER_AF_PLUGIN_OTA_CLIENT

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       24  otaCliBootload
             24 -> emAfOtaFindImageIdByIndex
             24 -> emberAfIsOtaImageIdValid
             24 -> emberAfOtaClientBootloadCallback
             24 -> emberAfPrintln
             24 -> emberUnsignedCommandArgument
        0  otaCliVerify
              0 -> emberAfPrintln
       24  otaPrintClientInfo
             24 -> emberAfOtaClientVersionInfoCallback
             24 -> emberAfPrint
             24 -> emberAfPrintln
        0  otaStartClientCommand
              0 -> otaStartStopClientCommand
        8  otaStartStopClientCommand
              0 -> emAfOtaClientStop
              8 -> emberAfOtaClientStartCallback
              8 -> emberAfPrintln
        0  otaStopClientCommand
              0 -> otaStartStopClientCommand
        8  setPageRequest
              0 -> emAfSetPageRequest
              8 -> emberUnsignedCommandArgument
        8  setPausePercentage
              8 -> emberUnsignedCommandArgument


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  ?<Constant "%ping OTA client stat...">
       8  ?<Constant "0x%2X">
      24  ?<Constant "Client image query info">
      24  ?<Constant "Current Version:  0x%4X">
      32  ?<Constant "Download Delay ms:   ...">
      32  ?<Constant "Download Error Thresh...">
      28  ?<Constant "Error: No image at in...">
      20  ?<Constant "Hardware Version: ">
      24  ?<Constant "Image Type ID:    0x%2X">
      24  ?<Constant "Manuf ID:         0x%2X">
       4  ?<Constant "NA">
      16  ?<Constant "Not supported.">
      32  ?<Constant "Query Delay ms:      ...">
      32  ?<Constant "Run Upgrade Delay ms:...">
      32  ?<Constant "Server Discovery Dela...">
      32  ?<Constant "Upgrade Wait Threshol...">
      32  ?<Constant "Verify Delay ms:     ...">
       8  ?<Constant "start">
       8  ?<Constant "stopp">
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_2
       4  ??DataTable21_3
       6  ?Subroutine0
      12  emberAfPluginOtaClientCommands
      46  otaCliBootload
      10  otaCliVerify
     174  otaPrintClientInfo
       4  otaStartClientCommand
      44  otaStartStopClientCommand
       4  otaStopClientCommand
      18  setPageRequest
      14  setPausePercentage

 
  16 bytes in section .rodata
 776 bytes in section .text
 
 776 bytes of CODE  memory
  16 bytes of CONST memory

Errors: none
Warnings: none
